<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-color' value='#f2f2f2' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.1c87c3307iycp31e1v9zq0c9rtf7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1c87c3307iycp31e1v9zq0c9rtf7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='total_boosters' ordinal='37' />
            <column datatype='integer' name='new_vaccinations' ordinal='38' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='real' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='real' name='female_smokers' ordinal='56' />
            <column datatype='real' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='integer' name='population' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1c87c3307iycp31e1v9zq0c9rtf7' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='total_boosters' ordinal='37' />
            <column datatype='integer' name='new_vaccinations' ordinal='38' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
            <column datatype='real' name='stringency_index' ordinal='47' />
            <column datatype='real' name='population_density' ordinal='48' />
            <column datatype='real' name='median_age' ordinal='49' />
            <column datatype='real' name='aged_65_older' ordinal='50' />
            <column datatype='real' name='aged_70_older' ordinal='51' />
            <column datatype='real' name='gdp_per_capita' ordinal='52' />
            <column datatype='real' name='extreme_poverty' ordinal='53' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
            <column datatype='real' name='diabetes_prevalence' ordinal='55' />
            <column datatype='real' name='female_smokers' ordinal='56' />
            <column datatype='real' name='male_smokers' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='real' name='life_expectancy' ordinal='60' />
            <column datatype='real' name='human_development_index' ordinal='61' />
            <column datatype='integer' name='population' ordinal='62' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
            <column datatype='real' name='excess_mortality' ordinal='65' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BO10001:no:A1:BO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_645AF83F28EC4058AF2A116C60534968]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Wave' datatype='string' name='[Calculation_1068760499342897156]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
      </column>
      <column caption='Death/Case' datatype='real' name='[Calculation_1068760499345690629]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[new_deaths_smoothed]/[new_cases_smoothed]' />
      </column>
      <column caption='specific countries' datatype='string' name='[Calculation_285415639882964993]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [location] IN (&apos;United States&apos;, &apos;Canada&apos;, &apos;Singapore&apos;, &apos;Malaysia&apos;, &apos;Australia&apos;, &apos;India&apos;, &apos;China&apos;) THEN [location] ELSE NULL END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_645AF83F28EC4058AF2A116C60534968]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;AUS&quot;' value='Australia' />
          <alias key='&quot;CAN&quot;' value='Canada' />
          <alias key='&quot;MYS&quot;' value='Malaysia' />
          <alias key='&quot;SGP&quot;' value='Singapore' />
        </aliases>
      </column>
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_people_vaccinated_smoothed]' derivation='Sum' name='[sum:new_people_vaccinated_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_people_vaccinated_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1szpvtj1xg8hkq13nr3l50n1sjaa]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_tests:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[twk:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2020-01-11 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-01-31 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-02-20 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-11 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-31 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-04-20 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-05-10 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-05-30 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-06-19 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-07-09 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-07-29 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-08-18 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-09-07 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-09-27 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-10-17 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-11-06 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-11-26 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-12-16 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-01-05 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-01-25 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-02-14 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-03-06 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-03-26 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-04-15 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-03 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-23 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-02-12 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-03 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-23 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-04-12 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-05-02 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-05-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-06-11 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-07-01 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-07-21 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-08-10 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-08-30 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-09-19 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-10-09 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-10-29 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-11-18 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-12-08 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-12-28 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-01-17 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-02-06 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-02-26 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-03-18 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-04-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-27 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-16 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-27 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-04-16 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-05-06 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-05-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-06-15 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-07-05 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-07-25 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-08-14 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-09-03 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-09-23 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-10-13 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-11-02 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-11-22 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-12-12 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-01-21 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-02-10 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-03-02 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-03-22 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-04-11 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-01-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-04 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-24 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-03-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-04 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-24 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-05-14 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-06-03 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-06-23 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-07-13 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-08-02 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-08-22 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-09-11 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-10-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-10-21 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-11-10 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-11-30 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-12-20 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-01-09 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-01-29 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-02-18 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-03-10 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-03-30 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-04-19 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-01-12 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-21 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-12 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-04-21 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-05-11 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-05-31 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-06-20 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-07-10 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-07-30 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-08-19 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-09-08 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-09-28 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-10-18 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-11-07 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-11-27 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-12-17 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-01-06 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-01-26 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-02-15 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-03-07 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-03-27 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-04-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-08 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-28 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-02-17 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-08 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-28 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-04-17 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-05-07 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-05-27 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-06-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-07-06 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-07-26 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-08-15 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-09-04 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-09-24 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-10-14 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-11-03 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-11-23 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-12-13 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-01-02 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-01-22 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-02-11 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-03-03 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-03-23 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-04-12 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-01-21 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-10 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-21 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-10 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-30 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-05-20 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-06-09 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-06-29 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-07-19 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-08-08 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-08-28 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-09-17 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-10-07 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-10-27 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-11-16 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-12-06 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-12-26 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-01-15 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-02-04 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-02-24 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-03-16 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-04-05 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-04 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-24 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-02-13 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-04 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-24 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-04-13 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-05-03 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-05-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-06-12 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-07-02 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-07-22 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-08-11 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-08-31 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-09-20 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-10-10 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-10-30 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-11-19 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-12-09 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-12-29 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-01-18 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-02-07 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-02-27 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-03-19 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-04-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-01-19 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-28 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-03-19 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-28 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-05-18 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-06-07 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-06-27 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-07-17 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-08-06 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-08-26 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-09-15 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-10-05 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-10-25 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-11-14 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-12-04 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-12-24 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-01-13 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-02-02 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-02-22 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-03-14 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-04-03 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-04-23 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-09 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-29 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-02-18 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-09 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-29 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-04-18 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-05-08 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-05-28 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-06-17 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-07-07 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-07-27 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-08-16 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-09-05 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-09-25 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-10-15 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-11-04 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-11-24 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-12-14 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-01-03 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-01-23 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-02-12 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-03-04 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-03-24 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-04-13 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-01-16 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-05 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-25 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-03-16 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-05 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-25 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-05-15 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-06-04 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-06-24 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-07-14 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-08-03 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-08-23 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-09-12 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-10-02 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-10-22 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-11-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-12-21 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-01-10 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-01-30 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-02-19 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-03-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-03-31 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-04-20 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-01-17 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-06 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-26 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-03-17 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-06 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-26 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-05-16 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-06-05 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-06-25 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-07-15 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-08-04 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-08-24 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-09-13 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-10-03 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-10-23 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-11-12 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-12-02 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-12-22 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-01-11 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-01-31 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-02-20 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-03-12 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-04-21 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-01-20 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-09 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-29 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-03-20 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-09 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-29 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-05-19 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-06-08 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-06-28 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-07-18 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-08-07 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-08-27 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-09-16 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-10-06 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-10-26 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-11-15 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-12-05 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-12-25 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-01-14 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-02-03 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-02-23 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-03-15 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-04-04 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-01-22 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-02-11 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-02 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-22 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-04-11 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-05-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-05-21 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-06-10 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-06-30 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-07-20 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-08-09 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-08-29 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-09-18 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-10-08 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-10-28 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-11-17 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-12-07 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-12-27 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-01-16 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-02-05 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-02-25 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-03-17 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-04-06 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-01-13 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-02 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-22 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-03-13 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-02 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-22 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-05-12 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-06-21 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-07-11 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-07-31 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-08-20 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-09-09 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-09-29 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-10-19 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-11-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-11-28 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-12-18 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-07 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-27 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-02-16 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-03-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-03-28 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-04-17 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-10 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-30 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-02-19 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-10 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-30 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-04-19 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-05-09 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-05-29 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-06-18 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-07-08 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-07-28 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-08-17 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-09-06 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-09-26 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-10-16 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-11-05 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-11-25 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-12-15 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-01-04 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-01-24 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-02-13 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-03-05 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-03-25 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-04-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-05 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-25 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-02-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-05 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-25 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-04-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-05-04 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-05-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-06-13 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-07-03 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-07-23 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-08-12 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-09-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-09-21 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-10-11 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-10-31 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-11-20 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-12-10 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-12-30 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-01-19 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-02-08 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-02-28 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-03-20 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-04-09 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-01-18 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-07 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-27 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-03-18 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-07 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-27 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-05-17 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-06-06 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-06-26 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-07-16 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-08-05 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-08-25 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-09-14 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-10-04 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-10-24 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-11-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-12-03 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-12-23 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-01-12 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-02-01 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-02-21 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-03-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-04-02 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-04-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-01-14 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-03 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-23 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-03-14 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-03 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-23 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-05-13 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-06-02 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-06-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-07-12 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-08-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-08-21 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-09-10 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-09-30 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-10-20 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-11-09 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-11-29 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-12-19 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-01-08 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-01-28 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-02-17 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-03-09 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-03-29 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-04-18 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-06 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-26 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-02-15 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-06 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-26 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-04-15 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-05-05 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-05-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-06-14 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-07-04 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-07-24 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-08-13 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-09-02 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-09-22 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-10-12 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-11-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-11-21 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-12-11 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-12-31 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-01-20 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-02-09 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-03-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-03-21 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-04-10 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tdy:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2020-01-11 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-01-31 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-02-20 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-11 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-31 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-04-20 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-05-10 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-05-30 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-06-19 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-07-09 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-07-29 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-08-18 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-09-07 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-09-27 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-10-17 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-11-06 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-11-26 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-12-16 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-01-05 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-01-25 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-02-14 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-03-06 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-03-26 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2021-04-15 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-03 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-23 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-02-12 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-03 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-23 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-04-12 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-05-02 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-05-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-06-11 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-07-01 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-07-21 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-08-10 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-08-30 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-09-19 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-10-09 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-10-29 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-11-18 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-12-08 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-12-28 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-01-17 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-02-06 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-02-26 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-03-18 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-04-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-27 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-16 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-07 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-27 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-04-16 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-05-06 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-05-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-06-15 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-07-05 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-07-25 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-08-14 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-09-03 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-09-23 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-10-13 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-11-02 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-11-22 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-12-12 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-01-21 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-02-10 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-03-02 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-03-22 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-04-11 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-01-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-04 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-24 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-03-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-04 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-24 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-05-14 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-06-03 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-06-23 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-07-13 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-08-02 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-08-22 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-09-11 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-10-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-10-21 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-11-10 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-11-30 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-12-20 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-01-09 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-01-29 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-02-18 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-03-10 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-03-30 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2021-04-19 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-01-12 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-21 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-12 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-04-21 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-05-11 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-05-31 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-06-20 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-07-10 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-07-30 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-08-19 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-09-08 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-09-28 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-10-18 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-11-07 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-11-27 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-12-17 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-01-06 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-01-26 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-02-15 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-03-07 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-03-27 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-04-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-08 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-28 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-02-17 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-08 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-28 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-04-17 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-05-07 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-05-27 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-06-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-07-06 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-07-26 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-08-15 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-09-04 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-09-24 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-10-14 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-11-03 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-11-23 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-12-13 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-01-02 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-01-22 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-02-11 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-03-03 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-03-23 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-04-12 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-01-21 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-10 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-21 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-10 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-30 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-05-20 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-06-09 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-06-29 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-07-19 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-08-08 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-08-28 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-09-17 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-10-07 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-10-27 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-11-16 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-12-06 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-12-26 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-01-15 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-02-04 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-02-24 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-03-16 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2021-04-05 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-04 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-24 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-02-13 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-04 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-24 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-04-13 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-05-03 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-05-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-06-12 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-07-02 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-07-22 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-08-11 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-08-31 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-09-20 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-10-10 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-10-30 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-11-19 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-12-09 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-12-29 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-01-18 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-02-07 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-02-27 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-03-19 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-04-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-01-19 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-28 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-03-19 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-08 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-28 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-05-18 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-06-07 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-06-27 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-07-17 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-08-06 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-08-26 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-09-15 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-10-05 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-10-25 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-11-14 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-12-04 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-12-24 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-01-13 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-02-02 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-02-22 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-03-14 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-04-03 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2021-04-23 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-09 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-29 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-02-18 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-09 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-29 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-04-18 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-05-08 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-05-28 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-06-17 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-07-07 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-07-27 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-08-16 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-09-05 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-09-25 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-10-15 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-11-04 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-11-24 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-12-14 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-01-03 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-01-23 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-02-12 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-03-04 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-03-24 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-04-13 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-01-16 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-05 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-25 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-03-16 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-05 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-25 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-05-15 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-06-04 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-06-24 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-07-14 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-08-03 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-08-23 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-09-12 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-10-02 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-10-22 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-11-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-12-21 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-01-10 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-01-30 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-02-19 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-03-11 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-03-31 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2021-04-20 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-01-17 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-06 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-26 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-03-17 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-06 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-26 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-05-16 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-06-05 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-06-25 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-07-15 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-08-04 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-08-24 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-09-13 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-10-03 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-10-23 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-11-12 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-12-02 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-12-22 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-01-11 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-01-31 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-02-20 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-03-12 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2021-04-21 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-01-20 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-09 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-29 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-03-20 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-09 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-29 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-05-19 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-06-08 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-06-28 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-07-18 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-08-07 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-08-27 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-09-16 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-10-06 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-10-26 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-11-15 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-12-05 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-12-25 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-01-14 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-02-03 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-02-23 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-03-15 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2021-04-04 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-01-22 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-02-11 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-02 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-22 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-04-11 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-05-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-05-21 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-06-10 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-06-30 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-07-20 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-08-09 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-08-29 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-09-18 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-10-08 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-10-28 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-11-17 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-12-07 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-12-27 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-01-16 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-02-05 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-02-25 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-03-17 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2021-04-06 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-01-13 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-02 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-22 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-03-13 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-02 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-22 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-05-12 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-06-21 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-07-11 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-07-31 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-08-20 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-09-09 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-09-29 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-10-19 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-11-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-11-28 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-12-18 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-07 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-27 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-02-16 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-03-08 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-03-28 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-04-17 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-10 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-30 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-02-19 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-10 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-30 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-04-19 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-05-09 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-05-29 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-06-18 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-07-08 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-07-28 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-08-17 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-09-06 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-09-26 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-10-16 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-11-05 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-11-25 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-12-15 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-01-04 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-01-24 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-02-13 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-03-05 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-03-25 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-04-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-05 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-25 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-02-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-05 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-25 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-04-14 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-05-04 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-05-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-06-13 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-07-03 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-07-23 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-08-12 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-09-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-09-21 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-10-11 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-10-31 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-11-20 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-12-10 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-12-30 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-01-19 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-02-08 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-02-28 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-03-20 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-04-09 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-01-18 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-07 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-27 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-03-18 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-07 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-27 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-05-17 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-06-06 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-06-26 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-07-16 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-08-05 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-08-25 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-09-14 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-10-04 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-10-24 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-11-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-12-03 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-12-23 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-01-12 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-02-01 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-02-21 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-03-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-04-02 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2021-04-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-01-14 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-03 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-23 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-03-14 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-03 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-23 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-05-13 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-06-02 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-06-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-07-12 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-08-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-08-21 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-09-10 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-09-30 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-10-20 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-11-09 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-11-29 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-12-19 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-01-08 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-01-28 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-02-17 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-03-09 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-03-29 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-04-18 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-06 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-26 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-02-15 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-06 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-26 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-04-15 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-05-05 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-05-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-06-14 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-07-04 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-07-24 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-08-13 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-09-02 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-09-22 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-10-12 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-11-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-11-21 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-12-11 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-12-31 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-01-20 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-02-09 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-03-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-03-21 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-04-10 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:iso_code:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;SGP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEX&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;AUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;OWID_ENG&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;CAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHN&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;JPN&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;MYS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='new_cases_smoothed' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='new_deaths_smoothed' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='new_cases_smoothed_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_smoothed_per_million' />
        <field-sort-custom-order field='reproduction_rate' />
        <field-sort-custom-order field='icu_patients' />
        <field-sort-custom-order field='icu_patients_per_million' />
        <field-sort-custom-order field='hosp_patients' />
        <field-sort-custom-order field='Calculation_1068760499342897156' />
        <field-sort-custom-order field='hosp_patients_per_million' />
        <field-sort-custom-order field='weekly_icu_admissions' />
        <field-sort-custom-order field='weekly_icu_admissions_per_million' />
        <field-sort-custom-order field='weekly_hosp_admissions' />
        <field-sort-custom-order field='weekly_hosp_admissions_per_million' />
        <field-sort-custom-order field='total_tests' />
        <field-sort-custom-order field='new_tests' />
        <field-sort-custom-order field='total_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_smoothed' />
        <field-sort-custom-order field='new_tests_smoothed_per_thousand' />
        <field-sort-custom-order field='positive_rate' />
        <field-sort-custom-order field='tests_per_case' />
        <field-sort-custom-order field='tests_units' />
        <field-sort-custom-order field='Calculation_285415639882964993' />
        <field-sort-custom-order field='total_vaccinations' />
        <field-sort-custom-order field='people_vaccinated' />
        <field-sort-custom-order field='people_fully_vaccinated' />
        <field-sort-custom-order field='total_boosters' />
        <field-sort-custom-order field='new_vaccinations' />
        <field-sort-custom-order field='new_vaccinations_smoothed' />
        <field-sort-custom-order field='total_vaccinations_per_hundred' />
        <field-sort-custom-order field='people_vaccinated_per_hundred' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred' />
        <field-sort-custom-order field='total_boosters_per_hundred' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed_per_hundred' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='aged_65_older' />
        <field-sort-custom-order field='aged_70_older' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='cardiovasc_death_rate' />
        <field-sort-custom-order field='Calculation_1068760499345690629' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='female_smokers' />
        <field-sort-custom-order field='male_smokers' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='human_development_index' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='excess_mortality_cumulative_absolute' />
        <field-sort-custom-order field='excess_mortality_cumulative' />
        <field-sort-custom-order field='excess_mortality' />
        <field-sort-custom-order field='excess_mortality_cumulative_per_million' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_645AF83F28EC4058AF2A116C60534968'>
            <properties context=''>
              <relation connection='excel-direct.1c87c3307iycp31e1v9zq0c9rtf7' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='total_tests' ordinal='25' />
                  <column datatype='integer' name='new_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='total_boosters' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations' ordinal='38' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='45' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='46' />
                  <column datatype='real' name='stringency_index' ordinal='47' />
                  <column datatype='real' name='population_density' ordinal='48' />
                  <column datatype='real' name='median_age' ordinal='49' />
                  <column datatype='real' name='aged_65_older' ordinal='50' />
                  <column datatype='real' name='aged_70_older' ordinal='51' />
                  <column datatype='real' name='gdp_per_capita' ordinal='52' />
                  <column datatype='real' name='extreme_poverty' ordinal='53' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='54' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='55' />
                  <column datatype='real' name='female_smokers' ordinal='56' />
                  <column datatype='real' name='male_smokers' ordinal='57' />
                  <column datatype='real' name='handwashing_facilities' ordinal='58' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
                  <column datatype='real' name='life_expectancy' ordinal='60' />
                  <column datatype='real' name='human_development_index' ordinal='61' />
                  <column datatype='integer' name='population' ordinal='62' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='63' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='64' />
                  <column datatype='real' name='excess_mortality' ordinal='65' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='66' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1+ (residing_location)' inline='true' name='federated.19i01500m549t41ecxjdx1vdyo2n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='residing_location' name='excel-direct.1wrh0h20wtlu3v16dy99k0svfzy1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets/datasets/residing_location.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Location wise' name='textscan.14bzdy51mwfgip1a7ajw31bust97'>
            <connection class='textscan' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets' filename='Location wise.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14bzdy51mwfgip1a7ajw31bust97' name='Location wise.csv' table='[Location wise#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='string' name='Suburb' ordinal='2' />
            <column datatype='integer' name='Count' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.14bzdy51mwfgip1a7ajw31bust97' name='Location wise.csv' table='[Location wise#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='Latitude' ordinal='0' />
            <column datatype='real' name='Longitude' ordinal='1' />
            <column datatype='string' name='Suburb' ordinal='2' />
            <column datatype='integer' name='Count' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Location wise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Location wise.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Location wise.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Suburb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Suburb]</local-name>
            <parent-name>[Location wise.csv]</parent-name>
            <remote-alias>Suburb</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[Location wise.csv]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Count' datatype='integer' name='[Calculation_1068760499358048263]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([residing_location_longitude])' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Location wise.csv' datatype='table' name='[__tableau_internal_object_id__].[Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Residing Location Latitude' datatype='real' name='[residing_location_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Residing Location Longitude' datatype='real' name='[residing_location_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='case num (Sheet2)' />
        <field-sort-custom-order field='date_of_discharge' />
        <field-sort-custom-order field='places_visited' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='place_visited_latitude' />
        <field-sort-custom-order field='place_visited_longitude' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Location wise.csv' id='Location wise.csv_1A55D3582FD54FFD8D7180B9E7C62957'>
            <properties context=''>
              <relation connection='textscan.14bzdy51mwfgip1a7ajw31bust97' name='Location wise.csv' table='[Location wise#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='Latitude' ordinal='0' />
                  <column datatype='real' name='Longitude' ordinal='1' />
                  <column datatype='string' name='Suburb' ordinal='2' />
                  <column datatype='integer' name='Count' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (place_visited)' inline='true' name='federated.0tyr6pw1bh94to1e2o61j12kb908' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='place_visited' name='excel-direct.0kis7o2101524a183b6il1uxw0w4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets/datasets/place_visited.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kis7o2101524a183b6il1uxw0w4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G145:no:A1:G145:0' header='yes' outcome='2'>
            <column datatype='string' name='case_num &amp; date_of_confirmation' ordinal='0' />
            <column datatype='integer' name='case num' ordinal='1' />
            <column datatype='string' name='date_of_confirmation' ordinal='2' />
            <column datatype='string' name='places_visited' ordinal='3' />
            <column datatype='string' name='code' ordinal='4' />
            <column datatype='real' name='place_visited_latitude' ordinal='5' />
            <column datatype='real' name='place_visited_longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kis7o2101524a183b6il1uxw0w4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:G145:no:A1:G145:0' header='yes' outcome='2'>
            <column datatype='string' name='case_num &amp; date_of_confirmation' ordinal='0' />
            <column datatype='integer' name='case num' ordinal='1' />
            <column datatype='string' name='date_of_confirmation' ordinal='2' />
            <column datatype='string' name='places_visited' ordinal='3' />
            <column datatype='string' name='code' ordinal='4' />
            <column datatype='real' name='place_visited_latitude' ordinal='5' />
            <column datatype='real' name='place_visited_longitude' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G145:no:A1:G145:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_num &amp; date_of_confirmation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[case_num &amp; date_of_confirmation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_num &amp; date_of_confirmation</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[case num]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_of_confirmation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_of_confirmation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date_of_confirmation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>places_visited</remote-name>
            <remote-type>130</remote-type>
            <local-name>[places_visited]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>places_visited</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_visited_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[place_visited_latitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>place_visited_latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_visited_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[place_visited_longitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>place_visited_longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A20A144315044F229A0A1702FD2B7B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A20A144315044F229A0A1702FD2B7B1A]' role='measure' type='quantitative' />
      <column caption='Case Num' datatype='integer' name='[case num]' role='dimension' type='ordinal' />
      <column caption='Case Num &amp; Date Of Confirmation' datatype='string' name='[case_num &amp; date_of_confirmation]' role='dimension' type='nominal' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Date Of Confirmation' datatype='string' name='[date_of_confirmation]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Place Visited Latitude' datatype='real' name='[place_visited_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Place Visited Longitude' datatype='real' name='[place_visited_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Places Visited' datatype='string' name='[places_visited]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A20A144315044F229A0A1702FD2B7B1A'>
            <properties context=''>
              <relation connection='excel-direct.0kis7o2101524a183b6il1uxw0w4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:G145:no:A1:G145:0' header='yes' outcome='2'>
                  <column datatype='string' name='case_num &amp; date_of_confirmation' ordinal='0' />
                  <column datatype='integer' name='case num' ordinal='1' />
                  <column datatype='string' name='date_of_confirmation' ordinal='2' />
                  <column datatype='string' name='places_visited' ordinal='3' />
                  <column datatype='string' name='code' ordinal='4' />
                  <column datatype='real' name='place_visited_latitude' ordinal='5' />
                  <column datatype='real' name='place_visited_longitude' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Covid19CaseDetails' inline='true' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid19CaseDetails' name='textscan.0xewuly19xvvw31fyybei0scdy36'>
            <connection class='textscan' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets' filename='Covid19CaseDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xewuly19xvvw31fyybei0scdy36' name='covid19_sg.csv' table='[covid19_sg#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Daily Confirmed' ordinal='1' />
            <column datatype='integer' name='False Positives Found' ordinal='2' />
            <column datatype='integer' name='Cumulative Confirmed' ordinal='3' />
            <column datatype='integer' name='Daily Discharged' ordinal='4' />
            <column datatype='integer' name='Passed but not due to COVID' ordinal='5' />
            <column datatype='integer' name='Cumulative Discharged' ordinal='6' />
            <column datatype='integer' name='Discharged to Isolation' ordinal='7' />
            <column datatype='integer' name='Still Hospitalised' ordinal='8' />
            <column datatype='integer' name='Daily Deaths' ordinal='9' />
            <column datatype='integer' name='Cumulative Deaths' ordinal='10' />
            <column datatype='integer' name='Tested positive demise' ordinal='11' />
            <column datatype='integer' name='Daily Imported' ordinal='12' />
            <column datatype='integer' name='Daily Local transmission' ordinal='13' />
            <column datatype='integer' name='Local cases residing in dorms MOH report' ordinal='14' />
            <column datatype='integer' name='Local cases not residing in doms MOH report' ordinal='15' />
            <column datatype='integer' name='Intensive Care Unit (ICU)' ordinal='16' />
            <column datatype='integer' name='General Wards MOH report' ordinal='17' />
            <column datatype='integer' name='In Isolation MOH report' ordinal='18' />
            <column datatype='integer' name='Total Completed Isolation MOH report' ordinal='19' />
            <column datatype='integer' name='Total Hospital Discharged MOH report' ordinal='20' />
            <column datatype='integer' name='Requires Oxygen Supplementation or Unstable' ordinal='21' />
            <column datatype='integer' name='Linked community cases' ordinal='22' />
            <column datatype='integer' name='Unlinked community cases' ordinal='23' />
            <column datatype='string' name='Phase' ordinal='24' />
            <column datatype='integer' name='Cumulative Vaccine Doses' ordinal='25' />
            <column datatype='integer' name='Cumulative Individuals Vaccinated' ordinal='26' />
            <column datatype='integer' name='Cumulative Individuals Vaccination Completed' ordinal='27' />
            <column datatype='real' name='Perc population completed at least one dose' ordinal='28' />
            <column datatype='real' name='Perc population completed vaccination' ordinal='29' />
            <column datatype='integer' name='Sinovac vaccine doses' ordinal='30' />
            <column datatype='integer' name='Cumulative individuals using Sinovac vaccine' ordinal='31' />
            <column datatype='integer' name='Doses of other vaccines recognised by WHO' ordinal='32' />
            <column datatype='integer' name='Cumulative individuals using other vaccines recognised by WHO' ordinal='33' />
            <column datatype='integer' name='Number taken booster shots' ordinal='34' />
            <column datatype='real' name='Perc population taken booster shots' ordinal='35' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0xewuly19xvvw31fyybei0scdy36' name='covid19_sg.csv' table='[covid19_sg#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Daily Confirmed' ordinal='1' />
            <column datatype='integer' name='False Positives Found' ordinal='2' />
            <column datatype='integer' name='Cumulative Confirmed' ordinal='3' />
            <column datatype='integer' name='Daily Discharged' ordinal='4' />
            <column datatype='integer' name='Passed but not due to COVID' ordinal='5' />
            <column datatype='integer' name='Cumulative Discharged' ordinal='6' />
            <column datatype='integer' name='Discharged to Isolation' ordinal='7' />
            <column datatype='integer' name='Still Hospitalised' ordinal='8' />
            <column datatype='integer' name='Daily Deaths' ordinal='9' />
            <column datatype='integer' name='Cumulative Deaths' ordinal='10' />
            <column datatype='integer' name='Tested positive demise' ordinal='11' />
            <column datatype='integer' name='Daily Imported' ordinal='12' />
            <column datatype='integer' name='Daily Local transmission' ordinal='13' />
            <column datatype='integer' name='Local cases residing in dorms MOH report' ordinal='14' />
            <column datatype='integer' name='Local cases not residing in doms MOH report' ordinal='15' />
            <column datatype='integer' name='Intensive Care Unit (ICU)' ordinal='16' />
            <column datatype='integer' name='General Wards MOH report' ordinal='17' />
            <column datatype='integer' name='In Isolation MOH report' ordinal='18' />
            <column datatype='integer' name='Total Completed Isolation MOH report' ordinal='19' />
            <column datatype='integer' name='Total Hospital Discharged MOH report' ordinal='20' />
            <column datatype='integer' name='Requires Oxygen Supplementation or Unstable' ordinal='21' />
            <column datatype='integer' name='Linked community cases' ordinal='22' />
            <column datatype='integer' name='Unlinked community cases' ordinal='23' />
            <column datatype='string' name='Phase' ordinal='24' />
            <column datatype='integer' name='Cumulative Vaccine Doses' ordinal='25' />
            <column datatype='integer' name='Cumulative Individuals Vaccinated' ordinal='26' />
            <column datatype='integer' name='Cumulative Individuals Vaccination Completed' ordinal='27' />
            <column datatype='real' name='Perc population completed at least one dose' ordinal='28' />
            <column datatype='real' name='Perc population completed vaccination' ordinal='29' />
            <column datatype='integer' name='Sinovac vaccine doses' ordinal='30' />
            <column datatype='integer' name='Cumulative individuals using Sinovac vaccine' ordinal='31' />
            <column datatype='integer' name='Doses of other vaccines recognised by WHO' ordinal='32' />
            <column datatype='integer' name='Cumulative individuals using other vaccines recognised by WHO' ordinal='33' />
            <column datatype='integer' name='Number taken booster shots' ordinal='34' />
            <column datatype='real' name='Perc population taken booster shots' ordinal='35' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily Confirmed]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Daily Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>False Positives Found</remote-name>
            <remote-type>20</remote-type>
            <local-name>[False Positives Found]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>False Positives Found</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Confirmed]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Confirmed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Discharged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily Discharged]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Daily Discharged</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Passed but not due to COVID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Passed but not due to COVID]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Passed but not due to COVID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Discharged</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Discharged]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Discharged</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharged to Isolation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Discharged to Isolation]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Discharged to Isolation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Still Hospitalised</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Still Hospitalised]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Still Hospitalised</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily Deaths]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Daily Deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Deaths]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested positive demise</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested positive demise]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Tested positive demise</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Imported</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily Imported]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Daily Imported</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Daily Local transmission</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Daily Local transmission]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Daily Local transmission</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local cases residing in dorms MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Local cases residing in dorms MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Local cases residing in dorms MOH report</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local cases not residing in doms MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Local cases not residing in doms MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Local cases not residing in doms MOH report</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intensive Care Unit (ICU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Intensive Care Unit (ICU)]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Intensive Care Unit (ICU)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>General Wards MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[General Wards MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>General Wards MOH report</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>In Isolation MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[In Isolation MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>In Isolation MOH report</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Completed Isolation MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Completed Isolation MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Total Completed Isolation MOH report</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Hospital Discharged MOH report</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Hospital Discharged MOH report]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Total Hospital Discharged MOH report</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Requires Oxygen Supplementation or Unstable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Requires Oxygen Supplementation or Unstable]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Requires Oxygen Supplementation or Unstable</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Linked community cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Linked community cases]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Linked community cases</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unlinked community cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unlinked community cases]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Unlinked community cases</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phase</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phase]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Phase</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Vaccine Doses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Vaccine Doses]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Vaccine Doses</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Individuals Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Individuals Vaccinated]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Individuals Vaccinated</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative Individuals Vaccination Completed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative Individuals Vaccination Completed]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative Individuals Vaccination Completed</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perc population completed at least one dose</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perc population completed at least one dose]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Perc population completed at least one dose</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perc population completed vaccination</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perc population completed vaccination]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Perc population completed vaccination</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sinovac vaccine doses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sinovac vaccine doses]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Sinovac vaccine doses</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative individuals using Sinovac vaccine</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative individuals using Sinovac vaccine]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative individuals using Sinovac vaccine</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Doses of other vaccines recognised by WHO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Doses of other vaccines recognised by WHO]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Doses of other vaccines recognised by WHO</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative individuals using other vaccines recognised by WHO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative individuals using other vaccines recognised by WHO]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Cumulative individuals using other vaccines recognised by WHO</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number taken booster shots</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number taken booster shots]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Number taken booster shots</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perc population taken booster shots</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perc population taken booster shots]</local-name>
            <parent-name>[covid19_sg.csv]</parent-name>
            <remote-alias>Perc population taken booster shots</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]&quot;' value='General Wards' />
          <alias key='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]&quot;' value='Isolation' />
          <alias key='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk]&quot;' value='ICU' />
          <alias key='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]&quot;' value='Local cases not in dorms' />
          <alias key='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]&quot;' value='Local cases in dorms' />
        </aliases>
      </column>
      <column caption='Initial Phase' datatype='string' name='[Calculation_1068760499288686593]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2020-10-01&apos;) THEN &apos;True&apos; ELSE &apos;False&apos; END' />
      </column>
      <column caption='Wave' datatype='string' name='[Calculation_1068760499388448776]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [Date]&gt;= Date(&apos;2021-04-24&apos;) AND [Date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
      </column>
      <column datatype='integer' name='[Cumulative Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative Discharged]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative Individuals Vaccinated]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative Individuals Vaccination Completed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative Vaccine Doses]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative individuals using Sinovac vaccine]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cumulative individuals using other vaccines recognised by WHO]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Daily Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Daily Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Daily Discharged]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Daily Imported]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Daily Local transmission]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Discharged to Isolation]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Doses of other vaccines recognised by WHO]' role='measure' type='quantitative' />
      <column datatype='integer' name='[False Positives Found]' role='measure' type='quantitative' />
      <column datatype='integer' name='[General Wards MOH report]' role='measure' type='quantitative' />
      <column datatype='integer' name='[In Isolation MOH report]' role='measure' type='quantitative' />
      <column caption='Initial Phase dorms' datatype='string' name='[Initial Phase (copy)_1068760499334897667]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2020-10-01&apos;) AND [Date] &gt;= Date(&apos;2020-03-20&apos;) THEN &apos;True&apos; ELSE &apos;False&apos; END' />
      </column>
      <column datatype='integer' name='[Intensive Care Unit (ICU)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Linked community cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Local cases not residing in doms MOH report]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Local cases residing in dorms MOH report]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number taken booster shots]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Passed but not due to COVID]' role='measure' type='quantitative' />
      <column datatype='real' name='[Perc population completed at least one dose]' role='measure' type='quantitative' />
      <column datatype='real' name='[Perc population completed vaccination]' role='measure' type='quantitative' />
      <column datatype='real' name='[Perc population taken booster shots]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Requires Oxygen Supplementation or Unstable]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sinovac vaccine doses]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Still Hospitalised]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Tested positive demise]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Completed Isolation MOH report]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Hospital Discharged MOH report]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Unlinked community cases]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid19_sg.csv' datatype='table' name='[__tableau_internal_object_id__].[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]' role='measure' type='quantitative' />
      <column caption='Date Of Confirmation' datatype='date' name='[date_of_confirmation]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1068760499388448776]' derivation='None' name='[none:Calculation_1068760499388448776:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cumulative Confirmed]' derivation='Sum' name='[sum:Cumulative Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative Deaths]' derivation='Sum' name='[sum:Cumulative Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative Discharged]' derivation='Sum' name='[sum:Cumulative Discharged:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative Individuals Vaccinated]' derivation='Sum' name='[sum:Cumulative Individuals Vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative Individuals Vaccination Completed]' derivation='Sum' name='[sum:Cumulative Individuals Vaccination Completed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative Vaccine Doses]' derivation='Sum' name='[sum:Cumulative Vaccine Doses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative individuals using Sinovac vaccine]' derivation='Sum' name='[sum:Cumulative individuals using Sinovac vaccine:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cumulative individuals using other vaccines recognised by WHO]' derivation='Sum' name='[sum:Cumulative individuals using other vaccines recognised by WHO:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Daily Confirmed]' derivation='Sum' name='[sum:Daily Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Daily Deaths]' derivation='Sum' name='[sum:Daily Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Daily Discharged]' derivation='Sum' name='[sum:Daily Discharged:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Daily Imported]' derivation='Sum' name='[sum:Daily Imported:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Daily Local transmission]' derivation='Sum' name='[sum:Daily Local transmission:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Discharged to Isolation]' derivation='Sum' name='[sum:Discharged to Isolation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Doses of other vaccines recognised by WHO]' derivation='Sum' name='[sum:Doses of other vaccines recognised by WHO:qk]' pivot='key' type='quantitative' />
      <column-instance column='[False Positives Found]' derivation='Sum' name='[sum:False Positives Found:qk]' pivot='key' type='quantitative' />
      <column-instance column='[General Wards MOH report]' derivation='Sum' name='[sum:General Wards MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[In Isolation MOH report]' derivation='Sum' name='[sum:In Isolation MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Intensive Care Unit (ICU)]' derivation='Sum' name='[sum:Intensive Care Unit (ICU):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Linked community cases]' derivation='Sum' name='[sum:Linked community cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local cases not residing in doms MOH report]' derivation='Sum' name='[sum:Local cases not residing in doms MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local cases residing in dorms MOH report]' derivation='Sum' name='[sum:Local cases residing in dorms MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number taken booster shots]' derivation='Sum' name='[sum:Number taken booster shots:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Passed but not due to COVID]' derivation='Sum' name='[sum:Passed but not due to COVID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perc population completed at least one dose]' derivation='Sum' name='[sum:Perc population completed at least one dose:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perc population completed vaccination]' derivation='Sum' name='[sum:Perc population completed vaccination:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perc population taken booster shots]' derivation='Sum' name='[sum:Perc population taken booster shots:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Requires Oxygen Supplementation or Unstable]' derivation='Sum' name='[sum:Requires Oxygen Supplementation or Unstable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sinovac vaccine doses]' derivation='Sum' name='[sum:Sinovac vaccine doses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Still Hospitalised]' derivation='Sum' name='[sum:Still Hospitalised:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tested positive demise]' derivation='Sum' name='[sum:Tested positive demise:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Completed Isolation MOH report]' derivation='Sum' name='[sum:Total Completed Isolation MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Hospital Discharged MOH report]' derivation='Sum' name='[sum:Total Hospital Discharged MOH report:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unlinked community cases]' derivation='Sum' name='[sum:Unlinked community cases:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1068760499388448776:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;INITIAL WAVE&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;OMICRON WAVE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DELTA WAVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative individuals using other vaccines recognised by WHO:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[__tableau_internal_object_id__].[cnt:covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Vaccine Doses:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Perc population completed at least one dose:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Perc population completed vaccination:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Sinovac vaccine doses:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Still Hospitalised:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Individuals Vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Requires Oxygen Supplementation or Unstable:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Total Completed Isolation MOH report:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Perc population taken booster shots:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Individuals Vaccination Completed:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:False Positives Found:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Unlinked community cases:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Number taken booster shots:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Total Hospital Discharged MOH report:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Discharged to Isolation:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Passed but not due to COVID:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative individuals using Sinovac vaccine:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Discharged:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Linked community cases:qk]&quot;</bucket>
            </map>
            <map to='#f5c062'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Doses of other vaccines recognised by WHO:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Tested positive demise:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Cumulative Discharged:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Daily Confirmed' />
        <field-sort-custom-order field='False Positives Found' />
        <field-sort-custom-order field='Cumulative Confirmed' />
        <field-sort-custom-order field='Daily Discharged' />
        <field-sort-custom-order field='Passed but not due to COVID' />
        <field-sort-custom-order field='Cumulative Discharged' />
        <field-sort-custom-order field='Discharged to Isolation' />
        <field-sort-custom-order field='Still Hospitalised' />
        <field-sort-custom-order field='Daily Deaths' />
        <field-sort-custom-order field='Cumulative Deaths' />
        <field-sort-custom-order field='Tested positive demise' />
        <field-sort-custom-order field='Daily Imported' />
        <field-sort-custom-order field='Calculation_1068760499288686593' />
        <field-sort-custom-order field='Initial Phase (copy)_1068760499334897667' />
        <field-sort-custom-order field='Calculation_1068760499388448776' />
        <field-sort-custom-order field='Daily Local transmission' />
        <field-sort-custom-order field='Local cases residing in dorms MOH report' />
        <field-sort-custom-order field='Local cases not residing in doms MOH report' />
        <field-sort-custom-order field='Intensive Care Unit (ICU)' />
        <field-sort-custom-order field='General Wards MOH report' />
        <field-sort-custom-order field='In Isolation MOH report' />
        <field-sort-custom-order field='Total Completed Isolation MOH report' />
        <field-sort-custom-order field='Total Hospital Discharged MOH report' />
        <field-sort-custom-order field='Requires Oxygen Supplementation or Unstable' />
        <field-sort-custom-order field='Linked community cases' />
        <field-sort-custom-order field='Unlinked community cases' />
        <field-sort-custom-order field='Phase' />
        <field-sort-custom-order field='Cumulative Vaccine Doses' />
        <field-sort-custom-order field='Cumulative Individuals Vaccinated' />
        <field-sort-custom-order field='Cumulative Individuals Vaccination Completed' />
        <field-sort-custom-order field='Perc population completed at least one dose' />
        <field-sort-custom-order field='Perc population completed vaccination' />
        <field-sort-custom-order field='Sinovac vaccine doses' />
        <field-sort-custom-order field='Cumulative individuals using Sinovac vaccine' />
        <field-sort-custom-order field='Doses of other vaccines recognised by WHO' />
        <field-sort-custom-order field='Cumulative individuals using other vaccines recognised by WHO' />
        <field-sort-custom-order field='Number taken booster shots' />
        <field-sort-custom-order field='Perc population taken booster shots' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='date_of_confirmation' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid19_sg.csv' id='covid19_sg.csv_C32C6B67A900446EA5082C29C24DE15A'>
            <properties context=''>
              <relation connection='textscan.0xewuly19xvvw31fyybei0scdy36' name='covid19_sg.csv' table='[covid19_sg#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Daily Confirmed' ordinal='1' />
                  <column datatype='integer' name='False Positives Found' ordinal='2' />
                  <column datatype='integer' name='Cumulative Confirmed' ordinal='3' />
                  <column datatype='integer' name='Daily Discharged' ordinal='4' />
                  <column datatype='integer' name='Passed but not due to COVID' ordinal='5' />
                  <column datatype='integer' name='Cumulative Discharged' ordinal='6' />
                  <column datatype='integer' name='Discharged to Isolation' ordinal='7' />
                  <column datatype='integer' name='Still Hospitalised' ordinal='8' />
                  <column datatype='integer' name='Daily Deaths' ordinal='9' />
                  <column datatype='integer' name='Cumulative Deaths' ordinal='10' />
                  <column datatype='integer' name='Tested positive demise' ordinal='11' />
                  <column datatype='integer' name='Daily Imported' ordinal='12' />
                  <column datatype='integer' name='Daily Local transmission' ordinal='13' />
                  <column datatype='integer' name='Local cases residing in dorms MOH report' ordinal='14' />
                  <column datatype='integer' name='Local cases not residing in doms MOH report' ordinal='15' />
                  <column datatype='integer' name='Intensive Care Unit (ICU)' ordinal='16' />
                  <column datatype='integer' name='General Wards MOH report' ordinal='17' />
                  <column datatype='integer' name='In Isolation MOH report' ordinal='18' />
                  <column datatype='integer' name='Total Completed Isolation MOH report' ordinal='19' />
                  <column datatype='integer' name='Total Hospital Discharged MOH report' ordinal='20' />
                  <column datatype='integer' name='Requires Oxygen Supplementation or Unstable' ordinal='21' />
                  <column datatype='integer' name='Linked community cases' ordinal='22' />
                  <column datatype='integer' name='Unlinked community cases' ordinal='23' />
                  <column datatype='string' name='Phase' ordinal='24' />
                  <column datatype='integer' name='Cumulative Vaccine Doses' ordinal='25' />
                  <column datatype='integer' name='Cumulative Individuals Vaccinated' ordinal='26' />
                  <column datatype='integer' name='Cumulative Individuals Vaccination Completed' ordinal='27' />
                  <column datatype='real' name='Perc population completed at least one dose' ordinal='28' />
                  <column datatype='real' name='Perc population completed vaccination' ordinal='29' />
                  <column datatype='integer' name='Sinovac vaccine doses' ordinal='30' />
                  <column datatype='integer' name='Cumulative individuals using Sinovac vaccine' ordinal='31' />
                  <column datatype='integer' name='Doses of other vaccines recognised by WHO' ordinal='32' />
                  <column datatype='integer' name='Cumulative individuals using other vaccines recognised by WHO' ordinal='33' />
                  <column datatype='integer' name='Number taken booster shots' ordinal='34' />
                  <column datatype='real' name='Perc population taken booster shots' ordinal='35' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='epidemic-curve' inline='true' name='federated.0iig7j51u9d4ao1dkqp601hj62uk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='epidemic-curve' name='textscan.1ccnz8o196rlxv15918zu01iy4on'>
            <connection class='textscan' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/covid-19-case-numbers' filename='epidemic-curve.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ccnz8o196rlxv15918zu01iy4on' name='epidemic-curve.csv' table='[epidemic-curve#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='integer' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ccnz8o196rlxv15918zu01iy4on' name='epidemic-curve.csv' table='[epidemic-curve#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='type' ordinal='1' />
            <column datatype='integer' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[epidemic-curve.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[epidemic-curve.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[epidemic-curve.csv_54489A5E49784013AE2E33FDB33B91A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[epidemic-curve.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[epidemic-curve.csv_54489A5E49784013AE2E33FDB33B91A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[epidemic-curve.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[epidemic-curve.csv_54489A5E49784013AE2E33FDB33B91A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Wave' datatype='string' name='[Calculation_703687454926925824]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='epidemic-curve.csv' datatype='table' name='[__tableau_internal_object_id__].[epidemic-curve.csv_54489A5E49784013AE2E33FDB33B91A3]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='epidemic-curve.csv' id='epidemic-curve.csv_54489A5E49784013AE2E33FDB33B91A3'>
            <properties context=''>
              <relation connection='textscan.1ccnz8o196rlxv15918zu01iy4on' name='epidemic-curve.csv' table='[epidemic-curve#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='integer' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid-19-patient-admission-locations' inline='true' name='federated.1gsdxvh0y5br5717a7nwm1kh3ccg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-patient-admission-locations' name='ogrdirect.04ul6cm0vasafm15z47pe1i0kipf'>
            <connection class='ogrdirect' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/covid-19-case-in-singapore' filename='covid-19-patient-admission-locations.kml' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.04ul6cm0vasafm15z47pe1i0kipf' name='convertcsv (1).kml' table='[convertcsv (1).kml]' type='table'>
          <columns>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='spatial' name='Geometry' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='ogrdirect.04ul6cm0vasafm15z47pe1i0kipf' name='convertcsv (1).kml' table='[convertcsv (1).kml]' type='table'>
          <columns>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='spatial' name='Geometry' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[convertcsv (1).kml]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[convertcsv (1).kml_AB9DD3AB791446B384985176516FB515]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[convertcsv (1).kml]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[convertcsv (1).kml_AB9DD3AB791446B384985176516FB515]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[convertcsv (1).kml]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[convertcsv (1).kml_AB9DD3AB791446B384985176516FB515]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='convertcsv (1).kml' datatype='table' name='[__tableau_internal_object_id__].[convertcsv (1).kml_AB9DD3AB791446B384985176516FB515]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='convertcsv (1).kml' id='convertcsv (1).kml_AB9DD3AB791446B384985176516FB515'>
            <properties context=''>
              <relation connection='ogrdirect.04ul6cm0vasafm15z47pe1i0kipf' name='convertcsv (1).kml' table='[convertcsv (1).kml]' type='table'>
                <columns>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='string' name='Description' ordinal='1' />
                  <column datatype='spatial' name='Geometry' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='NumberofCOVID19deathsbymonth' inline='true' name='federated.1s7wxf80rklod518yolfw1czlkx2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NumberofCOVID19deathsbymonth' name='textscan.06d2fkj1kbwynr14gjkwa1o60gcz'>
            <connection class='textscan' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets 1' filename='NumberofCOVID19deathsbymonth.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06d2fkj1kbwynr14gjkwa1o60gcz' name='NumberofCOVID19deathsbymonth.csv' table='[NumberofCOVID19deathsbymonth#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='as_of_month' ordinal='0' />
            <column datatype='string' name='age_groups' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06d2fkj1kbwynr14gjkwa1o60gcz' name='NumberofCOVID19deathsbymonth.csv' table='[NumberofCOVID19deathsbymonth#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='as_of_month' ordinal='0' />
            <column datatype='string' name='age_groups' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NumberofCOVID19deathsbymonth.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>as_of_month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[as_of_month]</local-name>
            <parent-name>[NumberofCOVID19deathsbymonth.csv]</parent-name>
            <remote-alias>as_of_month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NumberofCOVID19deathsbymonth.csv_85E6FACCA60E4F40A798C599BBC432F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_groups</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age_groups]</local-name>
            <parent-name>[NumberofCOVID19deathsbymonth.csv]</parent-name>
            <remote-alias>age_groups</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NumberofCOVID19deathsbymonth.csv_85E6FACCA60E4F40A798C599BBC432F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[NumberofCOVID19deathsbymonth.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[NumberofCOVID19deathsbymonth.csv_85E6FACCA60E4F40A798C599BBC432F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='NumberofCOVID19deathsbymonth.csv' datatype='table' name='[__tableau_internal_object_id__].[NumberofCOVID19deathsbymonth.csv_85E6FACCA60E4F40A798C599BBC432F9]' role='measure' type='quantitative' />
      <column caption='Age Groups' datatype='string' name='[age_groups]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;12 - 59 years old&quot;' value='12-59' />
          <alias key='&quot;60 years old and above&quot;' value='60+' />
        </aliases>
      </column>
      <column caption='As Of Month' datatype='string' name='[as_of_month]' role='dimension' type='nominal' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column-instance column='[age_groups]' derivation='None' name='[none:age_groups:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:age_groups:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0 - 11 years old&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;60 years old and above&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12 - 59 years old&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='NumberofCOVID19deathsbymonth.csv' id='NumberofCOVID19deathsbymonth.csv_85E6FACCA60E4F40A798C599BBC432F9'>
            <properties context=''>
              <relation connection='textscan.06d2fkj1kbwynr14gjkwa1o60gcz' name='NumberofCOVID19deathsbymonth.csv' table='[NumberofCOVID19deathsbymonth#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='as_of_month' ordinal='0' />
                  <column datatype='string' name='age_groups' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Incidence of COVID-19 by Population)' inline='true' name='federated.0t2ymoa0ecjbot188uid50n62fus' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Incidence of COVID-19 by Population' name='excel-direct.12ktf000rangif1f9gczd11r6nyp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Jeffrey/Information Visualization/Assignment 2/Datasets/datasets/Incidence of COVID-19 by Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12ktf000rangif1f9gczd11r6nyp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C169:no:A1:C169:0' header='yes' outcome='6'>
            <column datatype='date' name='pr_date' ordinal='0' />
            <column datatype='string' name='age_group' ordinal='1' />
            <column datatype='real' name='Incidence of COVID-19 by Population' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12ktf000rangif1f9gczd11r6nyp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C169:no:A1:C169:0' header='yes' outcome='6'>
            <column datatype='date' name='pr_date' ordinal='0' />
            <column datatype='string' name='age_group' ordinal='1' />
            <column datatype='real' name='Incidence of COVID-19 by Population' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C169:no:A1:C169:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pr_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[pr_date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>pr_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[age_group]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>age_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incidence of COVID-19 by Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incidence of COVID-19 by Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Incidence of COVID-19 by Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]' role='measure' type='quantitative' />
      <column caption='Age Group' datatype='string' name='[age_group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0 - 11 years old&quot;' value='0 - 11' />
          <alias key='&quot;12 - 19 years old&quot;' value='12 - 19' />
          <alias key='&quot;20 - 39 years old&quot;' value='20 - 39' />
          <alias key='&quot;40 - 59 years old&quot;' value='40 - 59' />
          <alias key='&quot;60 - 69 years old&quot;' value='60 - 69' />
          <alias key='&quot;70 years old and above&quot;' value='70+' />
        </aliases>
      </column>
      <column caption='Pr Date' datatype='date' name='[pr_date]' role='dimension' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/StoryBoard.twb Files/Sheet1 (Incidence of COVID-19 by Population).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2023 04:51:24 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Incidence of COVID-19 by Population)' increment-value='%null%' refresh-type='create' rows-inserted='168' timestamp-start='2023-10-19 16:51:24.192' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>pr_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[pr_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pr_date</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[age_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>age_group</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incidence of COVID-19 by Population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Incidence of COVID-19 by Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incidence of COVID-19 by Population</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_93AA6F8C2D6E45C5B76F4FA9B23F49A6'>
            <properties context=''>
              <relation connection='excel-direct.12ktf000rangif1f9gczd11r6nyp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C169:no:A1:C169:0' header='yes' outcome='6'>
                  <column datatype='date' name='pr_date' ordinal='0' />
                  <column datatype='string' name='age_group' ordinal='1' />
                  <column datatype='real' name='Incidence of COVID-19 by Population' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Singapore Covid 19 2020-2023_updated)' inline='true' name='federated.0szl8rc1hsggqd17ogu140j7lt9t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Singapore Covid 19 2020-2023_updated' name='excel-direct.0zlu8ge1xv3m6i1dgek1i1rfg7at'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets/Singapore Covid 19 2020-2023_updated.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Covid19CaseDetails' name='textscan.1xogofi0xh20kh17qym7102ud3r4'>
            <connection class='textscan' directory='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/Datasets' filename='Covid19CaseDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0zlu8ge1xv3m6i1dgek1i1rfg7at' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AT1380:no:A1:AT1380:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='datetime' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='integer' name='new_cases' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='integer' name='new_deaths' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='new_tests' ordinal='12' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='13' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='14' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='15' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='16' />
            <column datatype='real' name='positive_rate' ordinal='17' />
            <column datatype='real' name='tests_per_case' ordinal='18' />
            <column datatype='string' name='tests_units' ordinal='19' />
            <column datatype='integer' name='total_vaccinations' ordinal='20' />
            <column datatype='integer' name='people_vaccinated' ordinal='21' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='22' />
            <column datatype='integer' name='total_boosters' ordinal='23' />
            <column datatype='integer' name='new_vaccinations' ordinal='24' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='25' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='26' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='27' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='29' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='30' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='31' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='32' />
            <column datatype='real' name='F34' ordinal='33' />
            <column datatype='real' name='F35' ordinal='34' />
            <column datatype='real' name='F36' ordinal='35' />
            <column datatype='real' name='F37' ordinal='36' />
            <column datatype='real' name='F38' ordinal='37' />
            <column datatype='real' name='F39' ordinal='38' />
            <column datatype='real' name='F40' ordinal='39' />
            <column datatype='real' name='F41' ordinal='40' />
            <column datatype='real' name='F42' ordinal='41' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='42' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='43' />
            <column datatype='real' name='excess_mortality' ordinal='44' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='45' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0zlu8ge1xv3m6i1dgek1i1rfg7at' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AT1380:no:A1:AT1380:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='datetime' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='integer' name='new_cases' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='integer' name='new_deaths' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='new_tests' ordinal='12' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='13' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='14' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='15' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='16' />
            <column datatype='real' name='positive_rate' ordinal='17' />
            <column datatype='real' name='tests_per_case' ordinal='18' />
            <column datatype='string' name='tests_units' ordinal='19' />
            <column datatype='integer' name='total_vaccinations' ordinal='20' />
            <column datatype='integer' name='people_vaccinated' ordinal='21' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='22' />
            <column datatype='integer' name='total_boosters' ordinal='23' />
            <column datatype='integer' name='new_vaccinations' ordinal='24' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='25' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='26' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='27' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='29' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='30' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='31' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='32' />
            <column datatype='real' name='F34' ordinal='33' />
            <column datatype='real' name='F35' ordinal='34' />
            <column datatype='real' name='F36' ordinal='35' />
            <column datatype='real' name='F37' ordinal='36' />
            <column datatype='real' name='F38' ordinal='37' />
            <column datatype='real' name='F39' ordinal='38' />
            <column datatype='real' name='F40' ordinal='39' />
            <column datatype='real' name='F41' ordinal='40' />
            <column datatype='real' name='F42' ordinal='41' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='42' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='43' />
            <column datatype='real' name='excess_mortality' ordinal='44' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='45' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AT1380:no:A1:AT1380:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F34</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F34]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F34</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F35</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F35]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F35</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F36</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F36]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F36</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F37</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F37]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F37</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F38</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F38]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F38</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F39</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F39]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F39</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F40</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F40]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F40</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F41</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F41]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F41</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F42</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F42]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F42</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]&quot;' value='Cases' />
          <alias key='&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]&quot;' value='Deaths' />
        </aliases>
      </column>
      <column caption='Case/Death' datatype='real' name='[Calculation_1068760499331354626]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[new_cases]/[new_deaths]' />
      </column>
      <column caption='Delta Wave' datatype='boolean' name='[Calculation_334392284898234368 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [date] &gt;= Date(&apos;2021-04-24&apos;) AND [date] &lt;= Date(&apos;2022-01-04&apos;) THEN TRUE ELSE FALSE END' />
      </column>
      <column caption='Wave' datatype='string' name='[Calculation_334392284898234368]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
      </column>
      <column caption='Title Wave' datatype='string' name='[Calculation_334392284905926657]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_334392284898234368]==&apos;All&apos; Then &apos;Waves&apos; ELSE &apos;&apos; END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8928F70F0B274B46AC8D1254BB4406D2]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column-instance column='[excess_mortality]' derivation='Avg' name='[avg:excess_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_334392284898234368]' derivation='None' name='[none:Calculation_334392284898234368:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1068760499331354626]' derivation='Sum' name='[sum:Calculation_1068760499331354626:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality]' derivation='Sum' name='[sum:excess_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality_cumulative]' derivation='Sum' name='[sum:excess_mortality_cumulative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_people_vaccinated_smoothed]' derivation='Sum' name='[sum:new_people_vaccinated_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed]' derivation='Sum' name='[sum:new_tests_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed_per_thousand]' derivation='Sum' name='[sum:new_tests_smoothed_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[sum:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/Jeffrey/Information Visualization/Assignment 2/G2304647H_Assignment_2/Singapore COVID-19.twb Files/Data/StoryBoard.twb Files/Sheet1 (Singapore Covid 19 2020-2023_updated).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/17/2023 10:44:29 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Singapore Covid 19 2020-2023_updated)' increment-value='%null%' refresh-type='create' rows-inserted='1379' timestamp-start='2023-10-17 22:44:27.655' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1379</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1012</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>640</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>377</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1012</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>640</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>377</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>143</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>129</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>15</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>16</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>17</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>18</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>19</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>20</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>915</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>21</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>991</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>22</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>991</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_boosters</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_boosters]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_boosters</remote-alias>
              <ordinal>23</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>677</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>24</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>772</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>25</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>690</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>26</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>702</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>27</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>485</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>28</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>546</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_boosters_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_boosters_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_boosters_per_hundred</remote-alias>
              <ordinal>29</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>30</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>587</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_people_vaccinated_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_people_vaccinated_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_people_vaccinated_smoothed</remote-alias>
              <ordinal>31</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>578</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
              <ordinal>32</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>239</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F34</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F34]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F34</remote-alias>
              <ordinal>33</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F35</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F35]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F35</remote-alias>
              <ordinal>34</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F36</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F36]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F36</remote-alias>
              <ordinal>35</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F37</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F37]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F37</remote-alias>
              <ordinal>36</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F38</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F38]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F38</remote-alias>
              <ordinal>37</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F39</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F39]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F39</remote-alias>
              <ordinal>38</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F40</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F40]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F40</remote-alias>
              <ordinal>39</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F41</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F41]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F41</remote-alias>
              <ordinal>40</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F42</remote-name>
              <remote-type>5</remote-type>
              <local-name>[F42]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F42</remote-alias>
              <ordinal>41</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>excess_mortality_cumulative_absolute</remote-name>
              <remote-type>5</remote-type>
              <local-name>[excess_mortality_cumulative_absolute]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
              <ordinal>42</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>excess_mortality_cumulative</remote-name>
              <remote-type>5</remote-type>
              <local-name>[excess_mortality_cumulative]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>excess_mortality_cumulative</remote-alias>
              <ordinal>43</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>excess_mortality</remote-name>
              <remote-type>5</remote-type>
              <local-name>[excess_mortality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>excess_mortality</remote-alias>
              <ordinal>44</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>excess_mortality_cumulative_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[excess_mortality_cumulative_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
              <ordinal>45</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2d9ced'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:excess_mortality_cumulative:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_tests_smoothed_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_tests_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_tests:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:tests_per_case:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[avg:excess_mortality:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:excess_mortality:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_people_vaccinated_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:Calculation_1068760499331354626:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_334392284898234368:nk]' type='palette'>
            <map to='#073e92'>
              <bucket>&quot;INITIAL WAVE&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;OMICRON WAVE&quot;</bucket>
            </map>
            <map to='#f4284e'>
              <bucket>&quot;DELTA WAVE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='Calculation_334392284905926657' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='Calculation_1068760499331354626' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='reproduction_rate' />
        <field-sort-custom-order field='new_tests' />
        <field-sort-custom-order field='total_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_smoothed' />
        <field-sort-custom-order field='new_tests_smoothed_per_thousand' />
        <field-sort-custom-order field='positive_rate' />
        <field-sort-custom-order field='tests_per_case' />
        <field-sort-custom-order field='tests_units' />
        <field-sort-custom-order field='total_vaccinations' />
        <field-sort-custom-order field='people_vaccinated' />
        <field-sort-custom-order field='people_fully_vaccinated' />
        <field-sort-custom-order field='total_boosters' />
        <field-sort-custom-order field='new_vaccinations' />
        <field-sort-custom-order field='new_vaccinations_smoothed' />
        <field-sort-custom-order field='total_vaccinations_per_hundred' />
        <field-sort-custom-order field='people_vaccinated_per_hundred' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred' />
        <field-sort-custom-order field='total_boosters_per_hundred' />
        <field-sort-custom-order field='Calculation_334392284898234368' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed_per_hundred' />
        <field-sort-custom-order field='F34' />
        <field-sort-custom-order field='F35' />
        <field-sort-custom-order field='F36' />
        <field-sort-custom-order field='F37' />
        <field-sort-custom-order field='F38' />
        <field-sort-custom-order field='F39' />
        <field-sort-custom-order field='F40' />
        <field-sort-custom-order field='F41' />
        <field-sort-custom-order field='F42' />
        <field-sort-custom-order field='excess_mortality_cumulative_absolute' />
        <field-sort-custom-order field='excess_mortality_cumulative' />
        <field-sort-custom-order field='excess_mortality' />
        <field-sort-custom-order field='excess_mortality_cumulative_per_million' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
        <column datatype='integer' name='[Local cases residing in dorms MOH report]' role='measure' type='quantitative' />
        <column-instance column='[Local cases residing in dorms MOH report]' derivation='Sum' name='[sum:Local cases residing in dorms MOH report:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8928F70F0B274B46AC8D1254BB4406D2'>
            <properties context=''>
              <relation connection='excel-direct.0zlu8ge1xv3m6i1dgek1i1rfg7at' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AT1380:no:A1:AT1380:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='datetime' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='integer' name='new_cases' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='integer' name='new_deaths' ordinal='6' />
                  <column datatype='real' name='total_cases_per_million' ordinal='7' />
                  <column datatype='real' name='new_cases_per_million' ordinal='8' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='9' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='10' />
                  <column datatype='real' name='reproduction_rate' ordinal='11' />
                  <column datatype='integer' name='new_tests' ordinal='12' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='13' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='14' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='15' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='16' />
                  <column datatype='real' name='positive_rate' ordinal='17' />
                  <column datatype='real' name='tests_per_case' ordinal='18' />
                  <column datatype='string' name='tests_units' ordinal='19' />
                  <column datatype='integer' name='total_vaccinations' ordinal='20' />
                  <column datatype='integer' name='people_vaccinated' ordinal='21' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='22' />
                  <column datatype='integer' name='total_boosters' ordinal='23' />
                  <column datatype='integer' name='new_vaccinations' ordinal='24' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='25' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='26' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='27' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='28' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='29' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='30' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='31' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='32' />
                  <column datatype='real' name='F34' ordinal='33' />
                  <column datatype='real' name='F35' ordinal='34' />
                  <column datatype='real' name='F36' ordinal='35' />
                  <column datatype='real' name='F37' ordinal='36' />
                  <column datatype='real' name='F38' ordinal='37' />
                  <column datatype='real' name='F39' ordinal='38' />
                  <column datatype='real' name='F40' ordinal='39' />
                  <column datatype='real' name='F41' ordinal='40' />
                  <column datatype='real' name='F42' ordinal='41' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='42' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='43' />
                  <column datatype='real' name='excess_mortality' ordinal='44' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='45' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_CFED7544ECAA48A5A392BB9C47FBE3AE'>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2_CA2A6FB0D6B04BFE9FE8213E568ACC38]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Overview' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age Covid'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Covid 19 by Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Incidence of COVID-19 by Population)' name='federated.0t2ymoa0ecjbot188uid50n62fus' />
          </datasources>
          <datasource-dependencies datasource='federated.0t2ymoa0ecjbot188uid50n62fus'>
            <column datatype='real' name='[Incidence of COVID-19 by Population]' role='measure' type='quantitative' />
            <column caption='Age Group' datatype='string' name='[age_group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0 - 11 years old&quot;' value='0 - 11' />
                <alias key='&quot;12 - 19 years old&quot;' value='12 - 19' />
                <alias key='&quot;20 - 39 years old&quot;' value='20 - 39' />
                <alias key='&quot;40 - 59 years old&quot;' value='40 - 59' />
                <alias key='&quot;60 - 69 years old&quot;' value='60 - 69' />
                <alias key='&quot;70 years old and above&quot;' value='70+' />
              </aliases>
            </column>
            <column-instance column='[age_group]' derivation='None' name='[none:age_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incidence of COVID-19 by Population]' derivation='Sum' name='[sum:Incidence of COVID-19 by Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]' value='78' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t2ymoa0ecjbot188uid50n62fus].[sum:Incidence of COVID-19 by Population:qk]</rows>
        <cols>[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]</cols>
      </table>
      <simple-id uuid='{664FF569-EEDF-4EB3-89F0-8B9609F444D6}' />
    </worksheet>
    <worksheet name='Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00007f'>Trend of Covid-19 Cases and Casualties in Singapore</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Singapore Covid 19 2020-2023_updated)' name='federated.0szl8rc1hsggqd17ogu140j7lt9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0szl8rc1hsggqd17ogu140j7lt9t'>
            <column caption='Wave' datatype='string' name='[Calculation_334392284898234368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_334392284898234368]' derivation='None' name='[none:Calculation_334392284898234368:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_334392284898234368:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;INITIAL WAVE&quot;</bucket>
              <bucket>&quot;DELTA WAVE&quot;</bucket>
              <bucket>&quot;OMICRON WAVE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]' scope='rows' value='Covid-19 Cases' />
            <format attr='title' class='0' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]' scope='cols' value='Date' />
            <format attr='width' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]' value='79' />
            <format attr='width' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]' value='79' />
            <format attr='height' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]' value='61' />
            <format attr='title' class='0' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]' scope='rows' value='Covid-19 Casualties' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='background-color' value='#ffe0aa' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' value='&#10;' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' value='Wave Filter' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk] + [federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk])</rows>
        <cols>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontname='Tableau Bold' fontsize='9'> 23 April 2021:</run>
              <run bold='true' fontalignment='0' fontsize='9'>Æ </run>
              <run bold='true' fontalignment='0' fontname='Tableau Bold' fontsize='9'>The Start of Delta Wave</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-04-14 14:18:26.754#'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='199.1938461538397'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-80' y='-94' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontname='Tableau Bold' fontsize='9'>04 January 2022: Start of Omicron</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2022-01-06 10:40:45.155#'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='198.58282208588844'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-83' y='-179' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>23 January 2020: First Confirmed Case</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-01-23 22:41:25.794#'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='198.58282208588844'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='63' y='153' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontname='Tableau Bold' fontsize='9'>April 26: AllCovid-19 restrictions removed</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2023-04-17 12:15:47.004#'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='100.69018404907976'>
                  <node-reference>
                    <axis>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-81' y='67' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontname='Tableau Bold' fontsize='9'>February 26 2021: Peak of Omicron Wave</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;OMICRON WAVE&quot;</value>
                    <value>123011</value>
                    <value>74</value>
                    <value>#2022-02-27 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='118' y='38' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontname='Tableau Bold' fontsize='9'>December 30 2020: Start of Covid Vaccination</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]</field>
                      <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;INITIAL WAVE&quot;</value>
                    <value>153</value>
                    <value>0</value>
                    <value>#2020-12-27 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='19' y='69' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1B195192-8681-4871-ACF0-13434DEDC55D}' />
    </worksheet>
    <worksheet name='Compared Delta Vaccination'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Fully Vaccinated per 100 by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499342897156]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1068760499342897156]' derivation='None' name='[none:Calculation_1068760499342897156:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499342897156:nk]' member='&quot;DELTA WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:people_fully_vaccinated_per_hundred:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:people_fully_vaccinated_per_hundred:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:people_fully_vaccinated_per_hundred:qk]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{18EF27CB-D0B8-4EC4-963A-B08135D01EE9}' />
    </worksheet>
    <worksheet name='D/C 2023'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>Casualty/Case Ratio by Countries(2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column caption='Death/Case' datatype='real' name='[Calculation_1068760499345690629]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[new_deaths_smoothed]/[new_cases_smoothed]' />
            </column>
            <column caption='specific countries' datatype='string' name='[Calculation_285415639882964993]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [location] IN (&apos;United States&apos;, &apos;Canada&apos;, &apos;Singapore&apos;, &apos;Malaysia&apos;, &apos;Australia&apos;, &apos;India&apos;, &apos;China&apos;) THEN [location] ELSE NULL END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AUS&quot;' value='Australia' />
                <alias key='&quot;CAN&quot;' value='Canada' />
                <alias key='&quot;MYS&quot;' value='Malaysia' />
                <alias key='&quot;SGP&quot;' value='Singapore' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_285415639882964993]' derivation='None' name='[none:Calculation_285415639882964993:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1068760499345690629]' derivation='Sum' name='[sum:Calculation_1068760499345690629:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_285415639882964993:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_285415639882964993:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Calculation_285415639882964993:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Calculation_285415639882964993:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Calculation_285415639882964993:nk]' member='&quot;Singapore&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;AUS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;MYS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;SGP&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]' included-values='in-range'>
            <min>#2023-01-01 00:00:00#</min>
            <max>#2023-10-16 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_285415639882964993:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' scope='rows' value='Casualty/Case' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{6CDE2865-1E49-4294-A7A5-EAAB82BB6A71}' />
    </worksheet>
    <worksheet name='D/C Delta'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>Casualty/Case Ratio by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499342897156]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Death/Case' datatype='real' name='[Calculation_1068760499345690629]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[new_deaths_smoothed]/[new_cases_smoothed]' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AUS&quot;' value='Australia' />
                <alias key='&quot;CAN&quot;' value='Canada' />
                <alias key='&quot;MYS&quot;' value='Malaysia' />
                <alias key='&quot;SGP&quot;' value='Singapore' />
              </aliases>
            </column>
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760499342897156]' derivation='None' name='[none:Calculation_1068760499342897156:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1068760499345690629]' derivation='Sum' name='[sum:Calculation_1068760499345690629:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499342897156:nk]' member='&quot;DELTA WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;AUS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;MYS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;SGP&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' direction='DESC' />
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' scope='rows' value='Casualty/Case' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{5670562E-6E14-4219-86C1-BD1F71617640}' />
    </worksheet>
    <worksheet name='D/C initial'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>Caualty/Case Ratio by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499342897156]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Death/Case' datatype='real' name='[Calculation_1068760499345690629]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[new_deaths_smoothed]/[new_cases_smoothed]' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;AUS&quot;' value='Australia' />
                <alias key='&quot;CAN&quot;' value='Canada' />
                <alias key='&quot;MYS&quot;' value='Malaysia' />
                <alias key='&quot;SGP&quot;' value='Singapore' />
              </aliases>
            </column>
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760499342897156]' derivation='None' name='[none:Calculation_1068760499342897156:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1068760499345690629]' derivation='Sum' name='[sum:Calculation_1068760499345690629:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499342897156:nk]' member='&quot;INITIAL WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;AUS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;MYS&quot;' />
              <groupfilter function='member' level='[none:iso_code:nk]' member='&quot;SGP&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' direction='DESC' />
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='tick-color' scope='rows' value='#000000' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='tick-color' scope='cols' value='#000000' />
            <format attr='title' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' scope='rows' value='Casualty/Case' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]' value='false' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:Calculation_1068760499345690629:qk]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{41D0A80A-CB6C-4B6D-B910-B68F55E3FAFD}' />
    </worksheet>
    <worksheet name='Death Delta'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>Initial Wave vs Delta Wave Cases and Casualties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499388448776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [Date]&gt;= Date(&apos;2021-04-24&apos;) AND [Date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column datatype='integer' name='[Daily Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Daily Deaths]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1068760499388448776]' derivation='None' name='[none:Calculation_1068760499388448776:nk]' pivot='key' type='nominal' />
            <column-instance column='[Daily Confirmed]' derivation='Sum' name='[sum:Daily Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Daily Deaths]' derivation='Sum' name='[sum:Daily Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1068760499388448776:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_1068760499388448776:nk]' member='&quot;OMICRON WAVE&quot;' />
                <groupfilter function='member' level='[none:Calculation_1068760499388448776:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Deaths:qk]' scope='rows' value='Daily Casualties' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Deaths:qk] + [federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Confirmed:qk])</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{DF6FD54C-A6DD-469D-A92E-BCAB5BB98519}' />
    </worksheet>
    <worksheet name='Death Omicron'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Delta vs Omicron Cases and Casualties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Singapore Covid 19 2020-2023_updated)' name='federated.0szl8rc1hsggqd17ogu140j7lt9t' />
          </datasources>
          <datasource-dependencies datasource='federated.0szl8rc1hsggqd17ogu140j7lt9t'>
            <column caption='Wave' datatype='string' name='[Calculation_334392284898234368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_334392284898234368]' derivation='None' name='[none:Calculation_334392284898234368:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_334392284898234368:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_334392284898234368:nk]' member='&quot;INITIAL WAVE&quot;' />
                <groupfilter function='member' level='[none:Calculation_334392284898234368:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]' scope='rows' value='Casualties' />
            <format attr='title' class='0' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]' scope='rows' value='Cases' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk] + [federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_deaths:qk])</rows>
        <cols>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{E39F12CE-DFFC-44A4-B5B8-E5533D0BA01B}' />
    </worksheet>
    <worksheet name='Dorm'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Covid-19 Spread in Dorm</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Initial Phase dorms' datatype='string' name='[Initial Phase (copy)_1068760499334897667]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2020-10-01&apos;) AND [Date] &gt;= Date(&apos;2020-03-20&apos;) THEN &apos;True&apos; ELSE &apos;False&apos; END' />
            </column>
            <column datatype='integer' name='[Local cases not residing in doms MOH report]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Local cases residing in dorms MOH report]' role='measure' type='quantitative' />
            <column-instance column='[Initial Phase (copy)_1068760499334897667]' derivation='None' name='[none:Initial Phase (copy)_1068760499334897667:nk]' pivot='key' type='nominal' />
            <column-instance column='[Local cases not residing in doms MOH report]' derivation='Sum' name='[sum:Local cases not residing in doms MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local cases residing in dorms MOH report]' derivation='Sum' name='[sum:Local cases residing in dorms MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]&quot;</bucket>
              <bucket>&quot;[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Initial Phase (copy)_1068760499334897667:nk]'>
            <groupfilter function='member' level='[none:Initial Phase (copy)_1068760499334897667:nk]' member='&quot;True&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Initial Phase (copy)_1068760499334897667:nk]</column>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</column>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases not residing in doms MOH report:qk]</column>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Local cases residing in dorms MOH report:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#000000' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[twk:Date:ok]' value='31' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[twk:Date:ok]' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[Multiple Values]</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[twk:Date:ok]</cols>
      </table>
      <simple-id uuid='{6ED3B41B-9CB0-43A2-B086-4382BB4D6EF0}' />
    </worksheet>
    <worksheet name='Fully Vaccinated Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'><![CDATA[People Fully Vaccinated Per 100(All Countries) - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Avg' name='[avg:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='None' name='[none:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>100.0</max>
          </filter>
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]' field-type='quantitative' max='23106011.778135166' min='-20374630.177291118' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]' field-type='quantitative' max='18122528.652219154' min='-7308877.3259900874' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Geometry (generated)]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' value='People Fully Vaccinated Per Hundred'>
              <formatted-text>
                <run>People Fully Vaccinated Per Hundred</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' />
              <lod column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' />
              <geometry column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F50C9AB7-81F4-465F-AA0C-ABC69C6E08BF}' />
    </worksheet>
    <worksheet name='Fully Vaccinated Singapore'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'><![CDATA[People Fully Vaccinated Per 100(Singapore) - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Avg' name='[avg:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='None' name='[none:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
            <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>100.0</max>
          </filter>
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]' field-type='quantitative' max='11589400.976804089' min='11524500.428130833' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]' field-type='quantitative' max='169786.74294100338' min='131774.31909691638' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Geometry (generated)]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' />
              <text column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' />
              <lod column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' />
              <geometry column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Latitude (generated)]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{02352268-35C0-4850-A3A9-9630BE2FF9ED}' />
    </worksheet>
    <worksheet name='Import Omicron'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Omicron Wave Timeline with Imported and Local</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='epidemic-curve' name='federated.0iig7j51u9d4ao1dkqp601hj62uk' />
          </datasources>
          <datasource-dependencies datasource='federated.0iig7j51u9d4ao1dkqp601hj62uk'>
            <column caption='Wave' datatype='string' name='[Calculation_703687454926925824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_703687454926925824]' derivation='None' name='[none:Calculation_703687454926925824:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]'>
            <groupfilter function='member' level='[none:Calculation_703687454926925824:nk]' member='&quot;OMICRON WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Imported&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]</column>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]</column>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]' scope='rows' value='Daily Imported' />
            <format attr='auto-subtitle' class='0' field='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[tdy:date:qk]' scope='cols' value='true' />
            <format attr='width' field='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]' value='76' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]</rows>
        <cols>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[tdy:date:qk]</cols>
        <annotations>
          <annotation class='point' id='10' mark-position='1' pullback='0' text-width='162'>
            <formatted-text>
              <run bold='true' fontsize='8'>2 May 2022: All restriction removed</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2022-05-04 16:19:12#'>
                  <node-reference>
                    <axis>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.1862745098038889'>
                  <node-reference>
                    <axis>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-115' y='-67' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{7044A721-BA94-4078-925E-B33CC33CCA3E}' />
    </worksheet>
    <worksheet name='Import/Local Delta'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Delta Wave Timeline with Imported and Local</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499388448776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [Date]&gt;= Date(&apos;2021-04-24&apos;) AND [Date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column datatype='integer' name='[Daily Imported]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Daily Local transmission]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1068760499388448776]' derivation='None' name='[none:Calculation_1068760499388448776:nk]' pivot='key' type='nominal' />
            <column-instance column='[Daily Imported]' derivation='Sum' name='[sum:Daily Imported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Daily Local transmission]' derivation='Sum' name='[sum:Daily Local transmission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499388448776:nk]' member='&quot;DELTA WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk] + [federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk])</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontsize='8'>21 April 2021: New formed cluster</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-04-23 02:47:24.721#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5526.5107692307693'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='70' y='-108' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontsize='8'>16 May 2021: Restrictions Tightened heavily</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-05-19 13:17:27.126#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5560.8369230769231'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-17' y='121' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontsize='8'>July 2021: First Delta VariantCase</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-07-19 12:03:06.013#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='17.163076923076986'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-82' y='-123' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontsize='8'>19 August 2021: 66% vaccinated and restrictions relaxed</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-08-18 17:03:42.895#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5564.1588089330025'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-81' y='-106' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='8'>27 September 2021: Opened the borders to vaccinated travellers</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-09-18 08:06:24.855#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5526.5107692307693'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='126' y='-107' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontsize='8'>October 2021: Delta Variant Peak</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-10-19 11:41:43.162#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3947.5076923076917'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-149' y='-1' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='0' text-width='155'>
            <formatted-text>
              <run bold='true' fontsize='8'>December 2021: Cases Declined</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-12-12 05:09:35.679#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='429.07692307692281'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='31' y='-83' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{326C6EC6-4324-479E-B984-B43760DB32A7}' />
    </worksheet>
    <worksheet name='Initial Import/Local'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Initial COVID Cases Imported and Local</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column caption='Initial Phase' datatype='string' name='[Calculation_1068760499288686593]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2020-10-01&apos;) THEN &apos;True&apos; ELSE &apos;False&apos; END' />
            </column>
            <column datatype='integer' name='[Daily Imported]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Daily Local transmission]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1068760499288686593]' derivation='None' name='[none:Calculation_1068760499288686593:nk]' pivot='key' type='nominal' />
            <column-instance column='[Daily Imported]' derivation='Sum' name='[sum:Daily Imported:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Daily Local transmission]' derivation='Sum' name='[sum:Daily Local transmission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499288686593:nk]' member='&quot;True&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]' scope='rows' value='Local transmission' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk] + [federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk])</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</cols>
        <show-full-range>
          <column>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[date]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='152'>
            <formatted-text>
              <run bold='true' fontsize='7'>Start of Community Spread</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-23 01:19:35.412#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.5414012738853486'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Local transmission:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-45' y='-50' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='152'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='7'>20 March 2020: Travel Restrictions Made</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-23 21:39:09.220#'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.0'>
                  <node-reference>
                    <axis>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Imported:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='135' y='-59' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{790158AC-ECBB-407B-A635-6B225A4FEACF}' />
    </worksheet>
    <worksheet name='Local Omicron'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='epidemic-curve' name='federated.0iig7j51u9d4ao1dkqp601hj62uk' />
          </datasources>
          <datasource-dependencies datasource='federated.0iig7j51u9d4ao1dkqp601hj62uk'>
            <column caption='Wave' datatype='string' name='[Calculation_703687454926925824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_703687454926925824]' derivation='None' name='[none:Calculation_703687454926925824:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]'>
            <groupfilter from='1' function='range' level='[mn:date:ok]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]'>
            <groupfilter function='member' level='[none:Calculation_703687454926925824:nk]' member='&quot;OMICRON WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Local&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]</column>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]</column>
            <column>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]' scope='rows' value='Daily Loacal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e10004' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]</rows>
        <cols>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[tdy:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='144'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='8'>22 December 2021: First Omicron Case</run>
              <run fontalignment='0'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-12-22 20:47:16.428#'>
                  <node-reference>
                    <axis>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='38.874820143885252'>
                  <node-reference>
                    <axis>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[sum:value:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='42' y='-88' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{7716D754-DC59-4065-97BD-7F31B8F3D7F5}' />
    </worksheet>
    <worksheet name='Location Initial'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Location Wise Distribution on the first 77 cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1+ (residing_location)' name='federated.19i01500m549t41ecxjdx1vdyo2n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19i01500m549t41ecxjdx1vdyo2n'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19i01500m549t41ecxjdx1vdyo2n].[avg:Longitude:qk]' field-type='quantitative' max='11579683.518787988' min='11536089.874581214' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.19i01500m549t41ecxjdx1vdyo2n].[avg:Latitude:qk]' field-type='quantitative' max='163360.19260777402' min='138057.58707430496' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' value='Count' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' />
              <text column='[federated.19i01500m549t41ecxjdx1vdyo2n].[none:Suburb:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19i01500m549t41ecxjdx1vdyo2n].[avg:Latitude:qk]</rows>
        <cols>[federated.19i01500m549t41ecxjdx1vdyo2n].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{7204A556-47A3-4BF3-BB68-DC2F90F96F40}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Age Group Casualties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NumberofCOVID19deathsbymonth' name='federated.1s7wxf80rklod518yolfw1czlkx2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s7wxf80rklod518yolfw1czlkx2'>
            <column caption='Age Groups' datatype='string' name='[age_groups]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;12 - 59 years old&quot;' value='12-59' />
                <alias key='&quot;60 years old and above&quot;' value='60+' />
              </aliases>
            </column>
            <column caption='As Of Month' datatype='string' name='[as_of_month]' role='dimension' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[age_groups]' derivation='None' name='[none:age_groups:nk]' pivot='key' type='nominal' />
            <column-instance column='[as_of_month]' derivation='None' name='[none:as_of_month:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:age_groups:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:age_groups:nk]' member='&quot;0 - 11 years old&quot;' />
                <groupfilter function='member' level='[none:age_groups:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:as_of_month:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Jan 23&quot;</bucket>
              <bucket>&quot;Feb 23&quot;</bucket>
              <bucket>&quot;Mar 23&quot;</bucket>
              <bucket>&quot;Apr 23&quot;</bucket>
              <bucket>&quot;May 23&quot;</bucket>
              <bucket>&quot;Jun 23&quot;</bucket>
              <bucket>&quot;Jul 23&quot;</bucket>
              <bucket>&quot;Aug 23&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s7wxf80rklod518yolfw1czlkx2].[sum:count:qk]</rows>
        <cols>([federated.1s7wxf80rklod518yolfw1czlkx2].[none:as_of_month:nk] / [federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk])</cols>
      </table>
      <simple-id uuid='{2B80E88B-C2EB-4FCE-895C-576F4DC77D2B}' />
    </worksheet>
    <worksheet name='Vaccine Initial'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Vaccination per 100 by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1szpvtj1xg8hkq13nr3l50n1sjaa' />
          </datasources>
          <datasource-dependencies datasource='federated.1szpvtj1xg8hkq13nr3l50n1sjaa'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499342897156]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760499342897156]' derivation='None' name='[none:Calculation_1068760499342897156:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_people_vaccinated_smoothed_per_hundred]' derivation='Sum' name='[sum:new_people_vaccinated_smoothed_per_hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499342897156:nk]' member='&quot;INITIAL WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Singapore&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_people_vaccinated_smoothed_per_hundred:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</column>
            <column>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_people_vaccinated_smoothed_per_hundred:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_people_vaccinated_smoothed_per_hundred:qk]' scope='rows' value='People Vaccinated Per Hundred' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[sum:new_people_vaccinated_smoothed_per_hundred:qk]</rows>
        <cols>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{D64BF285-BD2C-4CC6-A219-B1CD0C4DF0C5}' />
    </worksheet>
    <worksheet name='Ward Delta'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>MOH Ward Utilization Report</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499388448776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [Date]&gt;= Date(&apos;2021-04-24&apos;) AND [Date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[General Wards MOH report]' role='measure' type='quantitative' />
            <column datatype='integer' name='[In Isolation MOH report]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Intensive Care Unit (ICU)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760499388448776]' derivation='None' name='[none:Calculation_1068760499388448776:nk]' pivot='key' type='nominal' />
            <column-instance column='[In Isolation MOH report]' derivation='None' name='[none:In Isolation MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[General Wards MOH report]' derivation='Sum' name='[sum:General Wards MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[In Isolation MOH report]' derivation='Sum' name='[sum:In Isolation MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intensive Care Unit (ICU)]' derivation='Sum' name='[sum:Intensive Care Unit (ICU):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499388448776:nk]' member='&quot;DELTA WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:In Isolation MOH report:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</column>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:In Isolation MOH report:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='break-on-special' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='background-color' value='#f9f3ef' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' value='' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk] + ([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk] + [federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]))</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{09DCFC27-EE03-4EDE-8554-90770475DCFB}' />
    </worksheet>
    <worksheet name='Ward Initial'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>MOH Ward Utilization Report</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19CaseDetails' name='federated.09a30pc0p4ow1713v51ha1x0dsp3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09a30pc0p4ow1713v51ha1x0dsp3'>
            <column caption='Wave' datatype='string' name='[Calculation_1068760499388448776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [Date]&gt;= Date(&apos;2021-04-24&apos;) AND [Date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[General Wards MOH report]' role='measure' type='quantitative' />
            <column datatype='integer' name='[In Isolation MOH report]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Intensive Care Unit (ICU)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1068760499388448776]' derivation='None' name='[none:Calculation_1068760499388448776:nk]' pivot='key' type='nominal' />
            <column-instance column='[In Isolation MOH report]' derivation='None' name='[none:In Isolation MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[General Wards MOH report]' derivation='Sum' name='[sum:General Wards MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[In Isolation MOH report]' derivation='Sum' name='[sum:In Isolation MOH report:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intensive Care Unit (ICU)]' derivation='Sum' name='[sum:Intensive Care Unit (ICU):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]'>
            <groupfilter function='member' level='[none:Calculation_1068760499388448776:nk]' member='&quot;INITIAL WAVE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:In Isolation MOH report:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</column>
            <column>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:In Isolation MOH report:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='break-on-special' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]' value='false' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' value='' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:General Wards MOH report:qk] + ([federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Intensive Care Unit (ICU):qk] + [federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:In Isolation MOH report:qk]))</rows>
        <cols>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{3F9F439E-8C17-4F96-90A3-BB16C4DC37AF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 9'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='98000' id='3' type-v2='text' w='92000' x='4000' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20' lmargin='600' rmargin='600'>Conclusion:</run>
              <run fontalignment='1' lmargin='600' rmargin='600'>Æ&#10;</run>
              <run lmargin='600' rmargin='600'>Æ&#10;</run>
              <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='18' lmargin='600' rmargin='600'>The storyboard has shown the key events and milestones of the Covid waves wave in Singapore. It has also highlighted the key takeaways from the Covid experience. These takeaways include the importance of vaccination, the need for close monitoring of the situation, and the importance of being prepared for future waves of the virus.</run>
              <run lmargin='600' rmargin='600'>Æ&#10;&#10;&#10;&#10;</run>
              <run fontalignment='1' lmargin='600' rmargin='600'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='18' lmargin='600' rmargin='600'>Thank You</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#cdedd3' />
            </zone-style>
          </zone>
          <zone h='98000' id='5' type-v2='empty' w='3200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98000' id='6' type-v2='empty' w='3200' x='96000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#cdedd3' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='17' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='98000' id='3' type-v2='text' w='92000' x='4000' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20' lmargin='600' rmargin='600'>Conclusion:</run>
                    <run fontalignment='1' lmargin='600' rmargin='600'>Æ&#10;</run>
                    <run lmargin='600' rmargin='600'>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='18' lmargin='600' rmargin='600'>The storyboard has shown the key events and milestones of the Covid waves wave in Singapore. It has also highlighted the key takeaways from the Covid experience. These takeaways include the importance of vaccination, the need for close monitoring of the situation, and the importance of being prepared for future waves of the virus.</run>
                    <run lmargin='600' rmargin='600'>Æ&#10;&#10;&#10;&#10;</run>
                    <run fontalignment='1' lmargin='600' rmargin='600'>Æ&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='18' lmargin='600' rmargin='600'>Thank You</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#cdedd3' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#cdedd3' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6980CCF7-2616-47CA-B5A5-32E591F983F6}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Delta Wave End'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone forceUpdate='true' h='5125' id='3' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Delta Wave: How it went</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48250' id='6' name='Death Delta' w='49200' x='800' y='6125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48250' id='11' name='D/C Delta' w='49200' x='50000' y='6125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44625' id='13' name='Ward Delta' w='52200' x='800' y='54375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44625' id='15' type-v2='text' w='46200' x='53000' y='54375'>
                <formatted-text>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                  <run>Æ&#10;&#10;</run>
                  <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Initial Wave vs. Delta Wave Deaths:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Delta wave mortality rate is much higher than initial wave.</run>
                  <run>Æ&#10;&#10;</run>
                  <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Death/Case Ratio by Countries:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Singapore&apos;s Delta wave death/case ratio started high but decreased as the government improved COVID-19 treatment.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Delta wave spread was low at the start, but death/case ratio was high.</run>
                  <run>Æ&#10;&#10;</run>
                  <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>MOH Ward Utilization Report:</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   MOH wards were in high demand during the later part of the Delta wave.</run>
                  <run bold='true' fontcolor='#000000'>Æ </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f0cecf' />
          </zone-style>
        </zone>
        <zone h='8000' id='10' name='Death Delta' pane-specification-id='2' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' type-v2='color' w='14000' x='13100' y='17750' />
        <zone h='13250' id='12' name='D/C Delta' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='83600' y='15250' />
        <zone h='10625' id='14' name='Ward Delta' pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='20100' x='11000' y='58750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='42' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='5125' id='3' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Delta Wave: How it went</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48250' id='6' is-fixed='true' name='Death Delta' w='49200' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='10' name='Death Delta' pane-specification-id='2' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' type-v2='color' w='14000' x='13100' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48250' id='11' is-fixed='true' name='D/C Delta' w='49200' x='50000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='12' name='D/C Delta' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='83600' y='15250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44625' id='13' is-fixed='true' name='Ward Delta' w='52200' x='800' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='14' name='Ward Delta' pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='20100' x='11000' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44625' id='15' type-v2='text' w='46200' x='53000' y='54375'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Initial Wave vs. Delta Wave Deaths:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Delta wave mortality rate is much higher than initial wave.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Death/Case Ratio by Countries:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Singapore&apos;s Delta wave death/case ratio started high but decreased as the government improved COVID-19 treatment.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Delta wave spread was low at the start, but death/case ratio was high.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>MOH Ward Utilization Report:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   MOH wards were in high demand during the later part of the Delta wave.</run>
                    <run bold='true' fontcolor='#000000'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f0cecf' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D4E89284-C8FE-4E10-BF78-8D3117A96985}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Delta Wave Start'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='20' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='18' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='92750' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='6250'>
                <zone h='92750' id='7' type-v2='layout-basic' w='98400' x='800' y='6250'>
                  <zone h='57969' id='3' name='Import/Local Delta' w='98400' x='800' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='8' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='34781' id='11' type-v2='text' w='49200' x='50000' y='64219'>
                    <formatted-text>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                      <run>Æ&#10;&#10;</run>
                      <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Delta Wave Timeline:</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Started from small number of imported cases.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Government actions at the start of the wave worked very well and reduced the spread.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Confidence in vaccination created the chance for wide spread of the delta variant.</run>
                      <run>Æ&#10;&#10;</run>
                      <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Fully Vaccinated per 100 by Country:</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Singapore attained about 70% fully vaccinated people by August 2021.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34781' id='17' name='Compared Delta Vaccination' w='49200' x='800' y='64219'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5250' id='14' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Delta Wave: An Outline</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f0cecf' />
          </zone-style>
        </zone>
        <zone h='13250' id='21' name='Compared Delta Vaccination' pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type-v2='color' w='14000' x='38400' y='76875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='48' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='5250' id='14' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Delta Wave: An Outline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57969' id='3' is-fixed='true' name='Import/Local Delta' w='98400' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34781' id='17' is-fixed='true' name='Compared Delta Vaccination' w='49200' x='800' y='64219'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='21' name='Compared Delta Vaccination' pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type-v2='color' w='14000' x='38400' y='76875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='34781' id='11' type-v2='text' w='49200' x='50000' y='64219'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Delta Wave Timeline:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Started from small number of imported cases.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Government actions at the start of the wave worked very well and reduced the spread.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Confidence in vaccination created the chance for wide spread of the delta variant.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Fully Vaccinated per 100 by Country:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;  Singapore attained about 70% fully vaccinated people by August 2021.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f0cecf' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{31C6A391-9629-4076-8091-F75F8637D3A9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Fully Vaccinated '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Fully Vaccinated Country' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Fully Vaccinated Singapore' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f7faf0' />
          </zone-style>
        </zone>
        <zone count='1' h='14875' id='9' name='Fully Vaccinated Country' name1='Fully Vaccinated Singapore' synchronized='1' type-v2='currpage' w='20300' x='77800' y='8500' />
        <zone h='11000' id='8' name='Fully Vaccinated Country' pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' type-v2='color' w='22700' x='74200' y='50125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Fully Vaccinated Country' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='8' name='Fully Vaccinated Country' pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' type-v2='color' w='22700' x='74200' y='50125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Fully Vaccinated Singapore' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='14875' id='9' name='Fully Vaccinated Country' name1='Fully Vaccinated Singapore' synchronized='1' type-v2='currpage' w='20300' x='77800' y='8500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f7faf0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5EA688D0-D421-40F1-ADFF-424A1ABA3EAE}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Initial Wave End'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='91125' id='20' param='horz' type-v2='layout-flow' w='98400' x='800' y='7875'>
            <zone h='91125' id='18' type-v2='layout-basic' w='98400' x='800' y='7875'>
              <zone h='45563' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='7875'>
                <zone h='45563' id='5' type-v2='layout-basic' w='98400' x='800' y='7875'>
                  <zone h='45563' id='3' name='D/C initial' w='51800' x='800' y='7875'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45563' id='10' name='Vaccine Initial' w='46600' x='52600' y='7875'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='45562' id='9' type-v2='text' w='46600' x='52600' y='53438'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Key Takeaways:</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Death/Case Ratio for Different Countries</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Compared to other countries Singapore has maintained low death to case ratio.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Vaccination per 100 by Countries</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>-&gt;  Singapore started the vaccine process earlier than most countries</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>-&gt;  This is one of the reasons for lower Death to Case ratio.</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>MOH Ward Utilization Report</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>-&gt;   It is visible that the MOH wards had high demand during the peak of COVID 19</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45562' id='17' name='Ward Initial' w='51800' x='800' y='53438'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='6875' id='22' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Initial Wave: How it went</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ddebf0' />
          </zone-style>
        </zone>
        <zone h='13250' id='11' name='Vaccine Initial' pane-specification-id='1' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type-v2='color' w='14000' x='64200' y='19750' />
        <zone h='13875' id='8' name='D/C initial' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='37400' y='14875' />
        <zone h='10250' id='21' name='Ward Initial' pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='21900' x='28900' y='58625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='57' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='6875' id='22' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Initial Wave: How it went</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45563' id='3' is-fixed='true' name='D/C initial' w='51800' x='800' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13875' id='8' name='D/C initial' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='37400' y='14875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45563' id='10' is-fixed='true' name='Vaccine Initial' w='46600' x='52600' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='11' name='Vaccine Initial' pane-specification-id='1' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type-v2='color' w='14000' x='64200' y='19750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45562' id='17' is-fixed='true' name='Ward Initial' w='51800' x='800' y='53438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10250' id='21' name='Ward Initial' pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='21900' x='28900' y='58625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='45562' id='9' type-v2='text' w='46600' x='52600' y='53438'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Death/Case Ratio for Different Countries</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Compared to other countries Singapore has maintained low death to case ratio.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Vaccination per 100 by Countries</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;  Singapore started the vaccine process earlier than most countries</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;  This is one of the reasons for lower Death to Case ratio.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>MOH Ward Utilization Report</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;   It is visible that the MOH wards had high demand during the peak of COVID 19</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ddebf0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A14EB173-75B9-4457-993F-C8FB7CC47DB8}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Initial Wave Start'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='81' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='79' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='92250' id='46' param='horz' type-v2='layout-flow' w='98400' x='800' y='6750'>
                <zone h='92250' id='34' type-v2='layout-basic' w='98400' x='800' y='6750'>
                  <zone h='43250' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6750'>
                    <zone h='43250' id='5' type-v2='layout-basic' w='58300' x='800' y='6750'>
                      <zone h='43250' id='3' name='Initial Import/Local' w='58300' x='800' y='6750'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone fixed-size='401' h='43250' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='40100' x='59100' y='6750'>
                      <zone h='43250' id='29' name='Dorm' w='40100' x='59100' y='6750'>
                        <layout-cache cell-count-w='27' minheight='209' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone forceUpdate='true' h='49000' id='28' type-v2='text' w='40101' x='59099' y='50000'>
                    <formatted-text>
                      <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Key Takeaways:</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Initial COVID Cases Imported vs Local</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Travel restrictions were able to lower the daily imported cases</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Local cases began to increase from March 2020 which indicates the start of community spread </run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>COVID-19 Spread in Dorm</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   The Singapore Government was able to handle the situation without it spreading too much outside the dorm. </run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Location Wise Distribution of the first 77 cases</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>-&gt;  Changi, Queenstown, Serangoon and Bukit Mera were the places with high spread during the start</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='37' name='Location Initial' w='58299' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5750' id='48' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Initial Wave: How it Started</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ddebf0' />
          </zone-style>
        </zone>
        <zone fixed-size='65' h='11000' id='40' is-fixed='true' name='Location Initial' pane-specification-id='0' param='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' type-v2='color' w='14000' x='33700' y='55125' />
        <zone h='8000' id='47' name='Dorm' pane-specification-id='0' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='19800' x='78500' y='18500' />
        <zone h='13500' id='82' name='Location Initial' pane-specification-id='0' param='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' type-v2='size' w='10200' x='48100' y='57375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='88' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='87' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='5750' id='48' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Initial Wave: How it Started</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43250' id='3' is-fixed='true' name='Initial Import/Local' w='58300' x='800' y='6750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43250' id='29' is-fixed='true' name='Dorm' w='40100' x='59100' y='6750'>
                  <layout-cache cell-count-w='27' minheight='209' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='47' name='Dorm' pane-specification-id='0' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type-v2='color' w='19800' x='78500' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='37' is-fixed='true' name='Location Initial' w='58299' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='11000' id='40' name='Location Initial' pane-specification-id='0' param='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' type-v2='color' w='14000' x='33700' y='55125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='82' name='Location Initial' pane-specification-id='0' param='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' type-v2='size' w='10200' x='48100' y='57375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='28' type-v2='text' w='40101' x='59099' y='50000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Initial COVID Cases Imported vs Local</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Travel restrictions were able to lower the daily imported cases</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   Local cases began to increase from March 2020 which indicates the start of community spread </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>COVID-19 Spread in Dorm</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>-&gt;   The Singapore Government was able to handle the situation without it spreading too much outside the dorm. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Location Wise Distribution of the first 77 cases</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;  Changi, Queenstown, Serangoon and Bukit Mera were the places with high spread during the start</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ddebf0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E58C4CB4-D0AD-46BA-A53B-A50FE1AA5005}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Omicron Start'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='35' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='25' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='92751' id='10' param='horz' type-v2='layout-flow' w='98400' x='800' y='6249'>
                <zone h='92751' id='8' type-v2='layout-basic' w='98400' x='800' y='6249'>
                  <zone h='27920' id='3' name='Import Omicron' w='98400' x='800' y='6249'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='26026' id='5' name='Local Omicron' w='98400' x='800' y='34169'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='38805' id='7' name='Death Omicron' w='49200' x='800' y='60195'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='38805' id='19' type-v2='text' w='49200' x='50000' y='60195'>
                    <formatted-text>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000' fontname='Tableau Bold'>Omicron Wave Timeline with Imoported and Local</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>-&gt;   The spread increased when restrictions were removed.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>-&gt;   People learned to live amongst CO</run>
                      <run bold='true' fontcolor='#000000'>VID.</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000' fontname='Tableau Bold'>Delta vs Omicron Cases and Deaths</run>
                      <run>Æ&#10;</run>
                      <run bold='true' fontcolor='#000000'>-&gt;   The omicron had higher spread than Delta Wave</run>
                      <run>Æ&#10;</run>
                      <run bold='true' fontcolor='#000000'>-&gt;  But the Death rate was low.</run>
                      <run>Æ&#10;&#10;&#10;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5249' id='12' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Omicron Wave</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#cdedd3' />
          </zone-style>
        </zone>
        <zone h='8000' id='11' name='Death Omicron' pane-specification-id='6' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='color' w='14400' x='34800' y='65125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='40' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='5249' id='12' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Omicron Wave</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='27920' id='3' is-fixed='true' name='Import Omicron' w='98400' x='800' y='6249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='203' h='26026' id='5' is-fixed='true' name='Local Omicron' w='98400' x='800' y='34169'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38805' id='7' is-fixed='true' name='Death Omicron' w='49200' x='800' y='60195'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='11' name='Death Omicron' pane-specification-id='6' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='color' w='14400' x='34800' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='38805' id='19' type-v2='text' w='49200' x='50000' y='60195'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold'>Omicron Wave Timeline with Imoported and Local</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;   The spread increased when restrictions were removed.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>-&gt;   People learned to live amongst CO</run>
                    <run bold='true' fontcolor='#000000'>VID.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold'>Delta vs Omicron Cases and Deaths</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000'>-&gt;   The omicron had higher spread than Delta Wave</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000'>-&gt;  But the Death rate was low.</run>
                    <run>Æ&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#cdedd3' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9CB5C076-35B8-4379-9899-8BD1ECF755B4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (Singapore Covid 19 2020-2023_updated)' name='federated.0szl8rc1hsggqd17ogu140j7lt9t' />
      </datasources>
      <datasource-dependencies datasource='federated.0szl8rc1hsggqd17ogu140j7lt9t'>
        <column caption='Wave' datatype='string' name='[Calculation_334392284898234368]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [date] &lt;= Date(&apos;2021-04-23&apos;) THEN &apos;INITIAL WAVE&apos; ELSEIF [date]&gt;= Date(&apos;2021-04-24&apos;) AND [date]&lt;= Date(&apos;2021-12-22&apos;) THEN &apos;DELTA WAVE&apos; ELSE &apos;OMICRON WAVE&apos; END' />
        </column>
        <column-instance column='[Calculation_334392284898234368]' derivation='None' name='[none:Calculation_334392284898234368:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93750' id='30' param='horz' type-v2='layout-flow' w='98200' x='900' y='1125'>
            <zone h='93750' id='7' type-v2='layout-basic' w='98200' x='900' y='1125'>
              <zone forceUpdate='true' h='18500' id='3' type-v2='text' w='98200' x='900' y='1125'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#00007f' fontname='Benton Sans Book' fontsize='18'>A Story of Solidarity and Determination</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#ffaa00' />
                </zone-style>
              </zone>
              <zone h='75250' id='13' name='Cases' w='79708' x='4092' y='19625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='padding-top' value='6' />
                  <format attr='padding-bottom' value='3' />
                  <format attr='background-color' value='#f9e9e0' />
                </zone-style>
              </zone>
              <zone h='75250' id='19' type-v2='empty' w='3192' x='900' y='19625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='75250' id='20' type-v2='empty' w='15300' x='83800' y='19625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='4000' id='32' type-v2='empty' w='14100' x='85000' y='94875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='4000' id='33' type-v2='empty' w='84100' x='900' y='94875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ffe0aa' />
          </zone-style>
        </zone>
        <zone h='12250' id='18' leg-item-order='normal' name='Cases' pane-specification-id='4' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='color' w='14600' x='84100' y='38375' />
        <zone h='16000' id='31' name='Cases' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='filter' values='database' w='15100' x='83700' y='21625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='74' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='18500' id='3' type-v2='text' w='98200' x='900' y='1125'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#00007f' fontname='Benton Sans Book' fontsize='18'>A Story of Solidarity and Determination</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffaa00' />
                  </zone-style>
                </zone>
                <zone h='16000' id='31' mode='checkdropdown' name='Cases' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='filter' values='database' w='15100' x='83700' y='21625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75250' id='13' is-fixed='true' name='Cases' w='79708' x='4092' y='19625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f9e9e0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='18' leg-item-order='normal' name='Cases' pane-specification-id='4' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type-v2='color' w='14600' x='84100' y='38375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ffe0aa' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{02924F02-833E-4C63-B5ED-78E20BD04C0A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Recent Times'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='50000'>
            <zone h='49000' id='5' type-v2='layout-basic' w='98400' x='800' y='50000'>
              <zone h='49000' id='3' name='D/C 2023' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='49000' id='13' type-v2='text' w='49200' x='50000' y='50000'>
                <formatted-text>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>COVID by Age</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='10'>-&gt;   The spread is high among middle aged people</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='10'>-&gt;   The casualities are very high for old aged people</run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Casuality/Case Ratio by Countries</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='10'>-&gt;   In recent times, the casualities became very low in singapore.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='10'>-&gt;    Singapore was able to overcome COVID faster compared to other countries</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='9' name='Age Covid' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='11' name='Sheet 20' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#cdedd3' />
          </zone-style>
        </zone>
        <zone h='8000' id='12' name='Sheet 20' pane-specification-id='6' param='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]' type-v2='color' w='14000' x='88400' y='16375' />
        <zone h='13250' id='8' name='D/C 2023' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='37100' y='57000' />
        <zone h='18500' id='10' name='Age Covid' pane-specification-id='0' param='[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]' type-v2='color' w='18800' x='35800' y='7875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Age Covid' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18500' id='10' name='Age Covid' pane-specification-id='0' param='[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]' type-v2='color' w='18800' x='35800' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Sheet 20' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='12' name='Sheet 20' pane-specification-id='6' param='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]' type-v2='color' w='14000' x='88400' y='16375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='D/C 2023' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='8' name='D/C 2023' pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type-v2='color' w='14000' x='37100' y='57000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49000' id='13' type-v2='text' w='49200' x='50000' y='50000'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>Key Takeaways:</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>COVID by Age</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>-&gt;   The spread is high among middle aged people</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>-&gt;   The casualities are very high for old aged people</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Casuality/Case Ratio by Countries</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>-&gt;   In recent times, the casualities became very low in singapore.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='10'>-&gt;    Singapore was able to overcome COVID faster compared to other countries</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#cdedd3' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{57CCC284-2752-421B-BC75-F9F9506B485F}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Calibri' fontsize='20'>A Visual Journey Through Singapore&apos;s Response To COVID-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='207' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4253' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5083' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15560'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Overview of the Storyboard' captured-sheet='Overview' id='2'>
                    <capturedDeltas>
                      <dashboard name='Overview'>
                        <zone id='3'>
                          <formatted-text>
                            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Calibri' fontsize='18'>Navigating the COVID-19 Pandemic: A Visual Journey Through Singapore&apos;s Response</run>
                            <run fontalignment='1'>Æ&#10;&#10;</run>
                            <run bold='true' fontalignment='1' fontcolor='#00007f' fontname='Benton Sans Book' fontsize='14'>A Story of Solidarity and Determination</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Initial Wave: The Early Days' captured-sheet='Initial Wave Start' id='3'>
                    <capturedDeltas>
                      <dashboard name='Initial Wave Start'>
                        <zone id='48'>
                          <formatted-text>
                            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='15'>Initial Wave: </run>
                            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>The Early Days of COVID-19 in Singapore</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Initial Wave: How  it Unfolded' captured-sheet='Initial Wave End' id='4' />
                  <story-point caption='Delta Wave: An Outline' captured-sheet='Delta Wave Start' id='5' />
                  <story-point caption='Delta Wave: Lessons Learned' captured-sheet='Delta Wave End' id='6' />
                  <story-point caption='Omicron Wave' captured-sheet='Omicron Start' id='8' />
                  <story-point caption='Covid 19 Vaccination Compared to world' captured-sheet='Fully Vaccinated ' id='7' />
                  <story-point caption='Current State of Covid 19' captured-sheet='Recent Times' id='9' />
                  <story-point caption='Conclusion' captured-sheet='Dashboard 9' id='10' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E9E263D8-6559-4B90-B327-FF38E13F4A09}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='245'>
    <window class='worksheet' name='Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368 1:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D95BF6D5-5443-41F0-A76A-64CF8149FACD}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{415178F7-007D-4DDC-B296-74CDE49F8E97}' />
    </window>
    <window class='worksheet' name='Initial Import/Local'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:case_id:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:gender:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:imported_local:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:nationality:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:place:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:residing_location:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:residing_postal_code:ok]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:suburb:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:date_of_confirmation:qk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:date_of_confirmation:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[dy:date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[mn:date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284905926657:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[qr:date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[sum:new_cases:qk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{8E3C83D9-C3DB-4240-BC06-BBAF6C2503F4}' />
    </window>
    <window class='worksheet' name='Dorm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='224'>
            <card pane-specification-id='0' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Initial Phase (copy)_1068760499334897667:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[tdy:Date:ok]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4720E0B-2F73-43F5-93DD-AB9DC5A4827A}' />
    </window>
    <window class='worksheet' name='Location Initial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19i01500m549t41ecxjdx1vdyo2n].[sum:Count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19i01500m549t41ecxjdx1vdyo2n].[none:Suburb:nk]</field>
            <field>[federated.19i01500m549t41ecxjdx1vdyo2n].[none:case num:ok]</field>
            <field>[federated.19i01500m549t41ecxjdx1vdyo2n].[none:case_num &amp; date_of_confirmation:nk]</field>
            <field>[federated.19i01500m549t41ecxjdx1vdyo2n].[none:residing_location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{708260C3-E1B7-4247-BD94-C65DAD7D14EA}' />
    </window>
    <window class='dashboard' name='Initial Wave Start'>
      <viewpoints>
        <viewpoint name='Dorm'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Initial Import/Local'>
          <zoom type='fit-width' />
          <highlight field='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Location Initial'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{70487759-0D8B-4E3D-9802-83E9388A0B7E}' />
    </window>
    <window class='worksheet' name='D/C initial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:date:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{368E3B36-BBD6-45A2-950A-176A5897A219}' />
    </window>
    <window class='worksheet' name='Vaccine Initial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E6F1848-A52B-42F5-B17B-11053BBAF988}' />
    </window>
    <window class='worksheet' name='Ward Initial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Discharged:qk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.0tyr6pw1bh94to1e2o61j12kb908].[avg:place_visited_latitude:qk]</field>
            <field>[federated.0tyr6pw1bh94to1e2o61j12kb908].[none:case_num &amp; date_of_confirmation:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{98BC62B4-943B-44C1-9B40-ABFBDA3876C6}' />
    </window>
    <window class='dashboard' name='Initial Wave End'>
      <viewpoints>
        <viewpoint name='D/C initial'>
          <zoom type='entire-view' />
          <highlight field='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Vaccine Initial'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Ward Initial'>
          <zoom type='entire-view' />
          <highlight field='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{705B242D-4DC2-410B-9087-868E39B85BDD}' />
    </window>
    <window class='worksheet' name='Import/Local Delta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A305B6C-477E-469F-A189-69E1533C84A7}' />
    </window>
    <window class='worksheet' name='Compared Delta Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32B44E00-DBD2-45D6-B710-E634A9E332D4}' />
    </window>
    <window class='dashboard' name='Delta Wave Start'>
      <viewpoints>
        <viewpoint name='Compared Delta Vaccination'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Import/Local Delta'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{562A98CD-4BF1-4B40-8C5A-AB24713750C8}' />
    </window>
    <window class='worksheet' name='Death Delta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C88F2447-3DEF-42B9-A662-65D7862D3D88}' />
    </window>
    <window class='worksheet' name='Ward Delta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499288686593:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[sum:Daily Discharged:qk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.0tyr6pw1bh94to1e2o61j12kb908].[avg:place_visited_latitude:qk]</field>
            <field>[federated.0tyr6pw1bh94to1e2o61j12kb908].[none:case_num &amp; date_of_confirmation:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3AD0362B-90CA-4DAA-981C-7F8EC5D53E95}' />
    </window>
    <window class='worksheet' name='D/C Delta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:date:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{700470E2-B03E-474D-A366-26E1933F2363}' />
    </window>
    <window class='dashboard' name='Delta Wave End'>
      <viewpoints>
        <viewpoint name='D/C Delta'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Death Delta'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Ward Delta'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DDD31156-70C5-4957-A8DA-2FCDBC8B887E}' />
    </window>
    <window class='worksheet' name='Import Omicron'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[yr:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A225DBB-F111-4C26-8FD1-39A2575C0F4C}' />
    </window>
    <window class='worksheet' name='Local Omicron'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[mn:date:ok]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:Calculation_703687454926925824:nk]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[none:type:nk]</field>
            <field>[federated.0iig7j51u9d4ao1dkqp601hj62uk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02F33A83-707E-42BA-9872-91906B7C1090}' />
    </window>
    <window class='worksheet' name='Death Omicron'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[none:Calculation_1068760499388448776:nk]</field>
            <field>[federated.09a30pc0p4ow1713v51ha1x0dsp3].[yr:Date:ok]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CEC1C2E-D19D-49E4-92D0-72DEAFEE4ED9}' />
    </window>
    <window class='dashboard' name='Omicron Start'>
      <viewpoints>
        <viewpoint name='Death Omicron'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Import Omicron'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Local Omicron'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{474FBB5C-E246-4A97-ACCE-163894C5668C}' />
    </window>
    <window class='worksheet' name='D/C 2023'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_285415639882964993:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:date:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D15A5A1C-B47E-49E3-B4B9-BAC4A32515E1}' />
    </window>
    <window class='worksheet' name='Age Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[none:Calculation_334392284898234368:nk]</field>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]</field>
            <field>[federated.0t2ymoa0ecjbot188uid50n62fus].[sum:Incidence of COVID-19 by Population:qk]</field>
            <field>[federated.0t2ymoa0ecjbot188uid50n62fus].[tdy:pr_date:ok]</field>
            <field>[federated.0t2ymoa0ecjbot188uid50n62fus].[yr:pr_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF8420C3-5990-4A98-856B-ECB74581EC47}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0szl8rc1hsggqd17ogu140j7lt9t].[yr:date:ok]</field>
            <field>[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]</field>
            <field>[federated.1s7wxf80rklod518yolfw1czlkx2].[none:as_of_month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B151265E-9524-42A1-B38A-F8F07634DFBA}' />
    </window>
    <window class='dashboard' name='Recent Times'>
      <viewpoints>
        <viewpoint name='Age Covid'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0t2ymoa0ecjbot188uid50n62fus].[none:age_group:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='D/C 2023'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:iso_code:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 20'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1s7wxf80rklod518yolfw1czlkx2].[none:age_groups:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C3994D8D-C150-45A7-829D-0808AF244FC9}' />
    </window>
    <window class='worksheet' name='Fully Vaccinated Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-05-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5DAA928D-32CD-4CB2-A871-2E51A3778E05}' />
    </window>
    <window class='worksheet' name='Fully Vaccinated Singapore'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-08-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[avg:people_fully_vaccinated_per_hundred:qk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:Calculation_1068760499342897156:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:location:nk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[none:people_fully_vaccinated_per_hundred:qk]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[tdy:date:ok]</field>
            <field>[federated.1szpvtj1xg8hkq13nr3l50n1sjaa].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{733F5803-6DEF-4372-84D5-F50D4201BE15}' />
    </window>
    <window class='dashboard' name='Fully Vaccinated '>
      <viewpoints>
        <viewpoint name='Fully Vaccinated Country'>
          <current-page>
            <multibucket>
              <bucket>#2021-08-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fully Vaccinated Singapore'>
          <current-page>
            <multibucket>
              <bucket>#2021-08-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{80B67CB5-3553-4C0A-A0E2-E913C90B466B}' />
    </window>
    <window class='dashboard' name='Dashboard 9'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8AE766D4-3343-4820-90A1-5A6AB33772AF}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F2494672-C69E-4B33-AC92-D349F4B7C2E5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Covid' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARiUlEQVR4nO3daWwc533H8e/swT24uzzEmxR1UKIkUhJFWZZoR4ojx5Fr15YDuwnq9AjQ
      FE2AIijQFwX6uu/6pigC9G3RIm6OHknsOLF8xZIty6Kok6IkUrwP8SZ3Se4ul7szT1/Ipkwd
      szb2ID3z/wCGvIdmnl3Nb+d5npn5j6aUUghhQ5qmaS4A3UhiqNR6t0eIvHMBGCqFbqysd1uE
      yDvHejdAiPUkAVhvStHbeZGR6aUv8FaD6x3n6OwZQUZu2eFa7wbYnZGMceHKNVKuWf781RPM
      jg0yPBVly7YtOBNh+u4ssHffbjwujQ9+9QtKDn6LWq/O4vw00aTBSsqJXy0yGk6xb/cWxsfn
      qKkMMDGXxIjPMR9epKZhN2Uh73p/1A1J9gDrLDJ+G2/1QYzoGNH5O/zmvauUGlO8d6mbn732
      a6b6LnPqXA+QpHcqxd5yBx9fuM7YzUv8/PUzxCLjvPF+J/7oMO+cu8pb75wlGRnh/bM3OfXm
      W2yqLObXvzq13h9zw5IArLPrHV3EFsdZnJmjZ2QKV2ERhV43hpEgmnDS9Pgx2pprARclnhST
      ST+RiSFSBjQfaqOhwoPDV0zZpmIWF5ZQhiK5soICXAVeioqLULpMcDyKppRSST0us0DrwqD9
      k4s81vY4i2M9DMcKiQx2EZ2bIl7zODsKphiL6DS1tFJfWUQ8Ms3Zc5dxBcvZU+0j7KmisSbE
      lXMfMbmoc+ToE9w6/xHK48FZWMeV9/6b2t0H2LnvILvqy9b7w244voJiLS8B+GzApmk5W4U1
      rMQ4e+4C8wsJ2p4+TlmhO6PFffiH0xx56ikKZD//UPkLgKGBpiQAYkPxFRRr8tsgbE0CIGxN
      AiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE2uB8gyfW6e2BvZPf3YUVxE4UvPZXWZ
      4i4JQJYZi0vE3z2d1WU6a6slADkiXSBhaxIAYWsSAGFrGQVA6UluXr7GfPyzawkU85OjdFy4
      RN/IFFK4QGx0GQUgHo2idJ1Y4l5VuYHBCfa17mdubBQ94+YJkVsZzQL5Q8WUhvz3NnQFJUEP
      lzou4fQU4VCglIZSGihliz2CykXqFRjya5ITGQVAKYVSn/2pAIOpuRgH2w7Sef4SKwq8DgUG
      oNnjmmDNmYuFgiMXyxWZBSA8dYc7izGIDhDcuYWVhEFr625uXrvJluZ9eGWILTa4jAJQUlnL
      Y5W1954I3v2j5eD+TBYrRN7Ib7SwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1
      CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwtYwCsLw4zx9++w5jkfjq
      c7NjQ5w/f5FbfXcybpwQuZbRRfEub4BdO+s/LYkCYNA3MIrHX4jL5WT1aaUB6t5jK8vFZ1Sg
      jBwsV2S2B3C53Tjuq/WjcNHcsp/E7Bhx/fPP24RtPqg1ZLQHmJ8cpau7D2NyicCBRhIJg7rq
      EBfOX8Lp9lHgvFsMS2kKzSaFsXIyqtJAk9FaTmRYF6iOb75Yd++JIFBWRG1Dhq0SIk/kd0XY
      mgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoE
      QNiaBEDYmgRA2JoEQNiaBEDYWkYBMFIJLp1tZyaaWPP8xMBNrvdOZtQwIfIho4vil+MJikOF
      JJL36p+kYvNMzMdIuQozbpwQuZZRAPzBEH6Pi882f6UMrly+QXlNGb2jEVK6wqk5UEoDpWxR
      Mkfp6d/z5RcKRi6WKzILQDKxzFIsjrEUJRUowDAUWxq2k4iFMXQdhUJzKDC4W9vGBnWBNGcu
      FgqOXCxXZNgFii2iewshtkRipZBkUlFeVQ1GGaFyHbdTxthiY8soAMGScnaVlD/4gsNNKOjO
      ZNFC5EVGARDr7+PhUWZj8fRv/BLaNtdQXmiPSQwJwFdc9/Qsg+FIVpe5p7xMAvCZ2bFBbg2M
      A9B08DAlfhmNCetIO0pt77hEMBQkFArikjGtsJi0ewBjaZ72jiu4NCit30XQK3sAYR1pf9MP
      PfkkHociULaZ8qBs/MJa0gbg8o0+Tr7yMrtDMfpnV/LRJiHyJm0AqoJu3nzzbS70hqkIyqSR
      sBbTLVpPpdj75NPsWE7gdhfgLpAukLAW0wCcff9tlqIx+kdnADj5Zz+gvlSO8ArrMO0CHX3m
      WQpLNvHDH/2Al47tJZaSUxKFtZjuASZ6Ozn9wccMDIziC1XwQpP8+gtrMQ1ATeMB/u7HNYxP
      zqIr7p7XL4SFpJ3WOXfmNINTESoDhRTVNRDwFOSjXULkRdpp0EBpJbtqN7EQj7K8YodruoSd
      mO4Bhntv4Q+EIBCgobhajgMIyzHdoqMLESKR5dXHMgkkrMa0C7Tn4BE8K3N0d9+m89p1lhJG
      vtolRF6k7dO0feskh5VirKsDnQcDYBgGmqahfXrFu1IKXddxOJw4HDJrJDa2tAFof/9Nrg/M
      YmgevtN4aM1rscgM505fpPHrx9hc7AdgfKiPibko8WVoe7IFOXlCbGRpA1C3eTO9E3ECZbUE
      PGs3Z2+wlKbdW9fsF6q3NFBSOs/Nvkn49NjB3eMHCmWDSSSVi16iAuMRy83FV6pM1mc1aQNw
      Y2Ccb79ykpFLZ+idSbCnwrv6msPh4P5OzuLMOH3jSzTv23V3gKEpNKXxwBvzSM32Z32ZWulW
      0B4cQuWq9lE+ayppNqnhBF8gAHp4kv/8j9dIhOfh8hDu73yPHVUBAOYnR7nZO4SaihJo2Uki
      oTN4owd8IXq6B2lq3o4TUNrd36n1+lJTv/h+1n+aXT98D83tffCFXHxGkw0yV1+pBOBTz3z7
      FT75uIPizY3s3Vm7OtgFKKms4/jzdffeHISKp76Ri3YKkRNpjwR/8M67VGzbyWTnWQbm5Yow
      YS1pA+BxOxgbGWU+msIjZSGExZh2gRamx1hWPooCIfa/eJJNciqEsBjTn/QPz3xMfcNWRkbG
      KCsJrun/C2EFpgFYWpilv3eQ4d4ufvfmKaaXUvlqlxB5Ydqn+fo3n2UhlqShYRsAfreMAYS1
      mAagun4b/nCYYFERDun+CAtKO6od7enkWt8kFTV1NDc3UbkplPFBkn/+r4sMjC9ktpD7/P13
      W9m5uTiryxTWlzYAVbV19A1P0n+7j/DEKAe+8SwNlcGMVroQXWFuYTn9G7+EpG6Tk1dEVqUN
      wNT0LK1Hn6a6rAj0ZZYNuSZYWEfaAEyPDXL+ai+xxTjf/au/oMwvxwKEdZhO68xOjhNOFnD8
      +Ndoa6piNibToMJaTAMwOtCDw+niemcXd6IaZT759RfWYrpFt7Q9xX712anMMg0qrMc0AENd
      F3jrzBVi0WXq9hzg5eeO4pTrfIWFmHaBugam+esf/YD9Lc0cLEtyezaRr3YJkRemAagr8fCz
      137JsrMId6BM7hApLMe0C7T/yadpbjNwOJwsjXczt6zAHrePFTZhGoBf/ftP6ByN43RoJCJT
      vPTjf2LLpnw1TYjcMw3A4aPH2R+op6GmiLnedu7c9259JUb7hxdpOHKYioAHUMzfGaZ7eIqS
      ynoat1WuZzEIIdIyHQPUNu6joaaIiYlxSnccZm+Nb83rK0mD2ppykqtFQxXDExEOHznEyvwE
      cthMbHRf6MjW0OAgVVXVDzzvKwxQ4NT4fM1ch8OFhkaBw4Xx+cJYSq0WccpFgSxlgJHH4r3K
      APWQ9T3sucxX9ujPZoXvcj2Z3yUyucztm7dIJDUm5xapKA2u6dLElxaYmpnHUD42+SrRdYXX
      uUL/4BARw0GBBpqmwGBNbZtcHFPTHOB4xCRVLv4tNQdoD1nfw57LfGWP/mz5/i6txrQL9Mm7
      p7izaFBdUcy7r79JePnBTk3Zli1UBD2rj3c07SXg89Kyr1H6/2LDM79Bxp07hHQPPfPgXJlh
      aCZJSd29v+ILhPAFQg/8vcqqyuy3VIgcMA3A8RPPsRBL3n2ws4Haco/Z24XIKqXH0RevZXWZ
      msOLM9Sy+tg0AH03rtI3sbT6+JmqrRR65MJ4kR8qOcvKwL9kdZlaQSW+5n9dfWwaAIVG/Y49
      7GrcRmnIj9stp0MLazHdog+0HWWof4D2Dz9gcnKOF773l9QUyc2y7Ww+No/K8l0Jin3FOB5S
      aj4fTAOQjEcZGxtnLhyjvLoar9QFsr1//O0/sKJnt0jyT17+Nwo963OSmfn1AEPD7Gxt41u1
      ZTKlKSzJNABBr4Pf/9//kEzpFNU08OqfnMDjlL2AsA7TANwem+dv/vaHuDQYuPA+fTMrNFU+
      5K4oQnxFmQag2KXzu7fPUFPioatrmhf3yyyQsBbTLfrQ8ROMDAwQiaV44ZWTlHhscoKIsA3T
      Dv3pDz6kfuduDhzYS6TnAr1yTbCwGNMAqHiYazf6mRq/w9We8QfuEyzEV51pAJ468UdEJ/r5
      pP0Ke7/+DFUBGQMIazHdog3NzeNHj+HxyElwwppMA/CHd94hhcaxo0cB8AdDuJ1ySExYh2kX
      qKVpB6PDY7Sf76D9fAcLyza5Tk7YhmkAqrfv5pUXvsHc7Cxx/BT5ZBAsrCXteQ0XO3t4/qUX
      2eGPcHtapkGFtaQNQHWRhzde/z3nb4epKlo7ZDBSCbquXGVofO7TE2QV0fA0lzouMzYVyfJJ
      s0JkX9p5zZavPcOelRVc7gIc91WGHuzuoWL7LqZ6u4iWlRBww61bg+w91MrVC1eprHjsi9Vd
      EWKdpN0+ldKZCy9QXBTE4/GsuU/AstKoL/SQKi4kvqwTcDspDXnoaL+Iy1uMU+oCZWll1q4L
      ZDxifYaemxnHz68rbRfozFu/5TenTjNz6wp9c2svhPA6FHPRBHPhKD6vE5TBdDjB4SOHcCci
      LBugORSaplZrzTicua1l87D/cuFR68tlXaCHrs8C36XjkevLTSf6858lbQA0pxtHcomzHV24
      7usCbW1sZLq/m2D1dnwsMzW7xJ7dW+i83En5tp14ZdJIbHBpu0A7GndRXLMVPaWoDK59u8Pl
      ofnAvRITFWV3a4ceLK3IcjOFyI20e4DO7l6amvZQqs8wMJvda0GFWG9pA9BUX8ZPf/pLzvbH
      2V4mN8kW1pI2AEld4S1w4jSihKNGPtokRN6kHQMMToQ58ewzaECgUEa1wlrSBmBldpSf/XwI
      pwZ//KffZ3OJFMYS1pE2AK1H2ohcG+eplu0ECqUkirCWtFv05ZuDbAoYGJFhBmZkFkhYS9oA
      7KgppauzmzfOj7G1XGaBhLWYdoGunjvN8HSU7du2gqaxvKwIyhBAWIj5neIbGonHo7S0tlDl
      11hYkSvChLWYBmBTRTUNFYV8cOYcHV3D+AtkECysxbw26I1OCoorqUmG0arK8TgkAMJaTLdo
      X2EAh+agpLwcv9eDbP/CaszHAFu2MTEzR+uB/WwO6EwuJvPVLiHyIu1veoXP4LXX/pdTF0eo
      ktsjCYtJeyS4vrGZJW0El9uNJufCCYtJuwf46KOPcLruXu4oVR6E1aS/JHI5Tk/vIP19g8SS
      EgFhLaZdIF1Pcez5kyQ+PQAW8t93OrQymJmcwhMqJegvWPOc0x+iJOTPSaOFyBbTAHz89uv0
      jt+7U/yJl1+ltvjeQHhi4DazupfY0HX2H2rF44Sh290kC4IEnAlAAiA2NtMAHHvuZY6ZvD4X
      S7JrTyNTzhiLcR1PwMHoyAS+ojiRSICKshI0qQuUhZVJXaCsru9z68qscJthkFKKxHISn9MB
      aHgCIVoOttLfeY2YDgGXAgPQ7tWwyWUtm4fJxb+l5nh4DaBc1gV66Et5/i5zwfGo9eWwLtDq
      /2eyoB3barncfpGIChB0JpiaWWDX9iraP7lI3FOEXEEpNrqM9gAFwU088eSm1cd36wIV8UR5
      babtEiIv5OweYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBh
      axIAYWsSAGFr/w9+NvFMicZabwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Compared Delta Vaccination' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXDk53nf+fkdfV+472MODOaeITkkRUqyDlKmJVGSZdmr+EhtuLK9UbSS
      Xdl11aa2shvvblJJKrHj2NmU44oj2WVHESPL8kGTuijxEiXe5NzAAIO70Y1u9H38rvfdPxoz
      nNEAMzgaQDfm95mawgDd/fYz6Of7ns/zvIqUUuLicpeiA5ilPLg6cLkL0YEV56+PACQKSp3a
      cnHZbtR6N+i6vkszUXcBuLg0E64AXO5qXAG43NW4AnC5q3EF4HJX4wrA5a7GFYDLXY0rAJe7
      GlcALnc1rgBc7mpcAbjc1eibeZFjVrg4NonuDxPxSZbzFUZGDxPwuHpyaS42JQApBYZl46gG
      HsXDwYFOMtkivs4YEgXhhla7NAmbEoBlVAhG27DKBWxbsrScJdwxiIpEAKpSZytdXLaJTQkg
      EGmn20rj6e0koEO2ZNAe8dXbNheXbUeRUkqzmKNekfwCBdXNCnBpEtxVq8tdjSsAl7saVwAu
      dzWbWgS7uDQ7uWKV18fmXQG43B1IKUnlynzr1XFefGcKR0hOH+xxd4Fc9jam7XB1YZlvvniR
      C1NJPvneI7z/5DBdbWFURXEF4LL3kFIyNpfm7350mR9fmGWkv53HHhjhvSeG0DXtpue6AnDZ
      EzhC8PbEIs/8eIzzV5Ps723lpx8Y4aFjg3h1DUVZPTzBFYBLU1OsGPzo/CxP/uAc7dEA/8OH
      TnJkqIOg37uu17sCcGk6pJTMJLI888o4P7owy32jfXz0wVEODbRvuC1XAC5NQ8WweObHYzz7
      5iS2I/j0+4/xvpPDhAPr6+1XwxWAS8NjO4K/ffkS//37Z3nkvoN85P4Rhrpia87rN4IrAJeG
      xbIdfvDWVb727DscGerk1z5xPy3hQF3fwxWAS8PhCMHzb0/x5995i+P7u/nlj5ymuzW8Le/l
      CsCloShWDP7lnz2Hoih88TMP0dMW2db321QohG1WmJiao2Q49LYFSeUqjI4ewqe7sXUum6di
      WPzv/+lbPHb/CJ9639G6zPHvxKZHANsoMp0oglWhtyNC1vLR0xGt3RAjxfZY67JnERJ+92vP
      s6+3jZ//4Al2Kqt2k8Fwktm5RQb3HeTqlTFy+QKeWNjNCXbZNM+9NUkqV+a3fvGndtR/Nj1n
      6e7rx6spHBgeRPqidEb99bTL5S4imS3yX/7udf7JL38AdQemPTeyyRFAIRiobUd5/EH6/ME6
      muRyN1E2LP7pf/4uX/j0e2iL7rwfuatWl13DcQT/z1ee5ePvGeXh40O7YoObEOOyK0gp+Y/f
      /DGDXTE+9f6jO/q+tX84CKvsCsBld/jLFy4wl8rxL3/9Z7Z93i8dC8cq4ZgFhFUBBCgqqh50
      BeCy8zz31lWeeWWMf/fFx1G3YctHSgfHLCHMAo5VAhQ0Twjd14Ia7gXl3fwAVwAuO8pcMseX
      n36d3/nCxwmtM2b/TkgpkXYV28ghrDJSWKieIJoviifUfZPD/ySuAFx2DCkl/+ZrL/DFn3uI
      9tjWdnyklCBs7OoydjWDonrR/S3o/hYUzYuirG9/xxWAy47xw3MztIT8nDncv+k2pHBwrBJ2
      JY10THR/K/7WERR1c67sCsBlRzBthz/51hv8s3/wyIZjfKQUOGYBp5JBCBNVD+AJdqF6gluO
      F3IF4LIjvHR2mpH+dvo7Y+t6vpQSpINdzWBXllE9QfRQJ6q+dae/EfcgzGXbcYTgye+f5Zc/
      cnpdz5dSYJUWqS5fASnwtxzAFx1E84TqHiHqjgAu286PLszS1x5h4Da9v5QS6ZjYlTSOWajN
      7dtH172Y3SyuAFy2Fct2+MrTb/B//o8fXvXxa1uYZmkRKWw8gXY8oW4UVVv1+fXGFYDLtvLt
      V8c5tq+Loe6Wm35e6/ENrFIC4Zh4Qt1o3siOJMHciCsAl22jWDH56vfe4d9/6RM3/VwKC7Ow
      gLANPOFuvN7ojjv+NVYVwPTEJSbnkiiKwoHDxxnqbttpu1yaHCklX376dT753iPXD72EY2KX
      UzhmAU+wE290aNcc/xqrrjC6+4awbZNjh4eJzydueVw6JucvXGA2vsTUxBhvv3OWouFsu7Eu
      zcNkPMNb43E+84HjSOFgFhYwctOouh9/6wh6oG3XnR/WGAH8gSBH9g9y9sJV7rn/oVserxSz
      FEoWjpIl6PUwuq+dTL5E0L0n2AUQUvIf/vJH/KNPPwSiSjU3h+pvxds6goKCBBrFRdZcA8zO
      ThFt7yMxP0/7kQM3PeYLRPB6FkEKpG0wPr3A8MEjbk6wC1A79Ar5PJzqA6cUxxcbRtUbM2V2
      TQGoqs75t17jgfd/7JbHNG+Ae04eB0VBUUAIiabtzLaVS2NjWDb/5alX+We/eBwpBb6Wgw0x
      1VmLNQVQtSSPf/IzxMKhVR9Xb3B41/ddoBao9rXvvs6DIzH6uzrQg50N7fywxiJYCIdYOMBr
      r77KQiq30za5NCGOVWZ+5hzPvDrJE5/6MJ5QV8M7P6whgMnL53jt/BjCqRJPpHfaJpcmwzGL
      mLkZvvpSkic+dj8Bn2e3TVo3qwpg5Ohpjh8cQtd0wuHtKUrqsjdwrDJmfo6k1cbYQpFH7zu4
      2yZtiDUjjfw+LxXDJuBvHjW77CzCrmLmZ/G1DPPfvn+JX3r0FJrWXAHGa1pbMmxOHDtGe2z1
      RbDL3Y2wDYzcNN7oEMm8zcR8mg+c2rfbZm2YNQUQDfm5OjVFrljZSXtcmgApnJrzR/rQPAH+
      +KnX+OwjJ9H15tsOXFMAoXCUlmiARHJ5J+1xaQLMYhw90IbmjfDWlThL2TIfuufAnV/YgKwq
      AMexSS4uMD27SKwlutM2uTQoUkqschrpVNEDbVRNmz/4i5f5zV94L3qTzf2vsarV01cuEl+M
      I70R/F43YtplxflLizhmHl9sH6DwlWde5wP37GN/b+tum7dpVhVAtKWdnvYY3X2DRIKNGcPh
      srPY5SRS2Phi+1BUnefevsrZyQS/8pF7dtu0LbFq9y6FINo7AthuZKcLjlnEMQr4Wg+gKApz
      Szn+5Jk3+Z0vfKxppz7XWFUAnb0DVB2FwYHNFzBy2RvUYvnn8cWGURQVKSW//xcv82ufuH9X
      6vnXmzXl+9oL3+HJb/4NV+aWdtIelwZCSolVjKP7W6+HMz//9hReXdu1ev71Zs0V7pHjxyHU
      jr/JhziXzSOsMo5dwR+pzQRyxSp/+Nev8P/940/t+FVG28Wa3p1MpRm/8DbzSTcY7m5ECgez
      uIAvOoCiKEgp+aO/fZVf+enTtEXqe1v7brLqCGAZFdq7BugLRti/79ahTjoGb7x9kc6ePjDy
      ZIoGI4ePEPI230mgy61IKTGLC+i+GKpec/ar8Qxjsyn+18++b5etqy+rCuCN11/B6w/geGPo
      q+Q3SgGBgJdisYRP0xgd7iGTKxFwc4L3BI5ZRDgWemQAsfJR/vHfvc7nHr8fRVGv/2wvsPoa
      QFiMTyxRKI/h9/80h4e6b34YSSgYIZMv4fHC9HyC7qERNyd4DyClwC7G8cWGrs/zx2ZT5EtV
      HjzSv6c+WyWf3dxN8VJKqtUKuseHpkgMyyHg9wEgUFA3eOu8S2MgpcDMz6CslB+/Nvf/J//p
      W/zCh07wwJGB3TaxbiiFHNrc1OojwNj5N3n5zQu0xMIMjtzLfUdvXgcoikIg8O4ecEBzwyWa
      HSklZn72JueH2qUWqqpwZnTvnAkpxTzazCT2yNHVd4FGj9/LYHcrsUgE4Vg7bZ/LLmCXl0BR
      8Ya6rzt/1bT5w7/+Mb/5C+/dlsvsdgMll0GbnsA+cBh8/rXPAXq7OzE8ETpbmjfQyWV9CMfE
      rmbwt45c/1nVtPnTb73BR86M0N26B9JipUTNpFATC9iHjoO3dkHfmgJIppYpGnGMXoX+Xrc2
      6F7GKsZvKkn+9I8v82fffouh7hZ++4lHm6K6w22REiWTQk0lsA8dA/3dNN81BTB6+Ci5kkl3
      d8+O2OiyOzgr14pqvtrlFW+OL/D1H5znP/7jnyUW3gORwCvOr6US2AeOgH6zy68qgOzSHN98
      6hn27xvGxEtrbA8MgS63IKWsBbpFaqe9VdPid598kX/1P390bzg/ta1OLbGAPXLsFueHNUIh
      Yh39nDk+SqVcxhfYO8feLjfjVDOoug9lJdDtT555k48+OEpfR2SXLasPSrmENjeFffAIeFav
      brKqABRFQWo6LbEguXRmW4102R2ksLHKS3hCvSiKQjxd4OXzM/z8B0/sjTl/Pos2NYZ9YBS8
      vjWfumYw3PDQMLrmZ2Cwd1tsdNldrFKyFuaseWqBbn/zCk987L7mT4GVEiWTRpufrk17Arcv
      67OmAC5dvkRbZxdevcl7A5dbELaBYxbRgx0AXJpZYilb4gOn9u+yZVtHXV5CSy5gjxy9bc9/
      /fmr/bCQz7KciPPsD55ndtGdAu0lriW3e8I9KIpK2bD4o795lc//7Hua+7BLStSlRZRMutbz
      e7zretmq412pWGDk6Cn6qgadrXtjQeRSQ5gFkBLNG8FxBP/8T7/PRx88xIn93Xd+caMiJdr8
      NAiBc/AIbGANs+oI0NM3iCUE77n/JMn4Yt3sdNldhF3FLCzgWcnw+rPvvEV7NMhjDxzaZcu2
      gJSo6SSYBs7Avg05P9xmDeARJs98+zm6BvdG7ufdjpQCIz+DNzaIqnn4yxcucHYywZc+83BT
      7/oolRLq0iLO8EFQN56+u+Yripbkwx98iPj09JYMdGkM7PISmjeCqgf5xvPnefHsFP/vr34E
      r6eJs/ikRE0las6/yYjkNQXQEfLw1a8/Q9/Q4BrvLbAsG+E4VA1zU2/usjNI4WBXM2iBTr78
      9Bu8dnmef/FrjzXVRRaroWSXAQUZ3HykwpqymZlfoK3Vz/zCIv3tI7c8vjAzyWJBEvM6mLZD
      3/AoLaHm/oXuVexKGlsN87v/9QVA4befeLS5e34A00BbmMEePb6lZlYVgBCCY6fvZ2r8Ih1t
      t0aCVgvLzC4VsB2IBVrY3xMlU64QDXndnOAGJJ6I88//4gqPnBnlsx8+CdDceb1S4pm6gj2w
      H6F7N5LMeAurCmDi4ttcnkkSibXS3nJr9S9vMMrJo4eYnk/gURzGpuOMjB51c4IbDMOy+e5r
      43zte+f5Rz/3fh46NrjRTZLGQ0rU+AwyFIZYy9pz+HWyak5wIZvirXfOs5zNMXLiAY4fWH84
      hJsTvPuYlsML70zx1WffZn+7wud/7kO0t+6NxCalVECbm67F9W9i1+eW9lYTwOL8DL5oB62R
      jdd+dAWwe1QMi2+/Os6TPzjH6YM9/Mqjx2nTUgTaD++2afVBSvTLZ3EGD9RGgDqwZlWI8csX
      6R06SDiwviPla7gC2HmyxSpff+4cP3hzkg+e3s+nf+oYHbEgZmEezRNED+yNjD41GUcxqps6
      8FqLNXeBWmNhnvzzrxDpPsDHHvsQYV+TRwnuIWxHkC1WWEgVeOncNC+enebj7xnlD/+3nyUc
      WClP45gIq4Q30rfL1tYJy0RNLWIfPlk354c1RgDLNHn1xy/RMTjKQFsQSw8RC65vJHBHgPoh
      hMSyHeLpAm9NxLk8s0QiUySVKxP0eRnqjnH/4X7ee2L4lpHazM+h7pXeX0q0mUlkOIJo76pr
      06t269NXLrBcMFi+cBbt9BkO9m9sGuSyORwhWEgVeOvKAu9MJLgyn0ZRoC0S5MxoH489cIiu
      1jA9reHb3scrHBPHKuHZI72/UimhVMs4Q/W/iG/14riWSblSux7VdkTd39TlXYSQXJlP85cv
      XOCdiTi97VFOHujm8YcPMzrQjt/r2XCYsl1OoQc7UJQ9UNp+JdLT6R+u69TnGqsK4OjpBymW
      fsBCapl80aj7m97tGJbN2ckE33t9gvG5FN1tYR67/xBf/MxDhPxbG22lFDhGHn+oiSM8b0DJ
      Z5GajgxtT1j+7Ve2igdFupXh6oGUkmSmxF+/dJEXz06xv7eNxx8+zP/ycw9teKftdjhGDtUb
      vl7jp6mRshbusH90W3p/WGMRnMlmCOggfa0ENhje4y6CbyWRKfKVp1/najzDxx46zKP3bXx7
      eT0Ix8TITOJrPYiqNX9clppOopQKOEMHt+09Vh0BLl14B49dxuk4xpGhLmJhtzTKRpFSMj6X
      5psvXuDcZILPPX6G3/rFn0Krw+nl6u8nMHMzeKMDe8L5ceyVMobHtvVtVh0B4rNXmUvWcoEH
      943Q077+2+Lv9hFASMml6SW+8swbVA2Lzz5yigcO9+Pb5moLVimJFBbeyN6o4qzGZwEF0dO/
      bdMfWGME6B3cj21WsX0x9L0wl9wBpJTMp/L83n9/ibJh8z997D7OjPbvSKJ5Ld5/GX/r3lj4
      YlRRs8vYoye21fnhNovgydl5vP4Ui3orHfef2FYjmh0hJH/3o8t8/blzfOkzD3Pm8M72wnZ1
      Gc3XsncWvvPTOD0DoG3//2dVAeQyacKBAOevzPHY4/dtuxHNSsWwOD+V5MnvnyUa9PH7v/EJ
      oqGdrakppcSuLONvqf8h0W6gZNMgJbJl+0+wpZRrlEUpZKlYks6uDoRtb7shzUbZsPijv36F
      dyYXOTTQwS8+cpJ7D/XtSnK5U82geUOg7oFYLctEi89ijxzf9qmPlJKrlcnVBdA3dJCLly4T
      DUVILC3T1xH7iRcL5mZmCMQ6iPggmSkz0NvV/MkW62A2meWf/ufv8Kn3HeULn34PXs/uOZ6U
      Aqu8hL/1QFNXdgCux/s4vUPXL6/YLoQUjJcv40hn7TWAFDapTJbs1XkGB/roiPhueEzS0d3N
      +PhVvF6dtoiPpXyVrtjeKKm9GoZl89TLl/mrFy/yf/z9D3F4qHO3TaodenlCKGrzb3uqy0ug
      qts69XGkQ8JcZMGYp01vYzR4ZG0B9PX2Mjmf5rGPf/Im5wdQNY1sPAm6B13XCYWC5C0LQWBP
      5gSPzaX5d0++yPF9nfz+b36SSNDXEDm1VmUZT7i/IWzZEraFnljAPHQcULaU47sWeSfPpdJ5
      Oj2dHAkdJ6CGkNzuiqRMgftOHWJmZo7etpszimyrSr5k4PP6iARUri5kGB09tOdygm3b4a9+
      eImnXr7Eb/29n+LocGfDTDWEVUFBoum+5p56SokWn0F09aGuUcN/a81Llq004+XLnIzcQ0i7
      uVr0mhlhl976IVdSFg/edz9dbbcvMX0je+EgTErJC+9M8effeZvRwQ7+4ScfIBy8c6XhncTI
      z6J5I+j+lt02ZUsopSLa/FTt4ro6K1lKSdJKMluZ5kT4FH7t1in6miNAIlumIxpgcnKSrraT
      dTWskZlfyvMH3/ghmqbyfz3xCP0d6z8F3ymkcBBWuflPfR0HbWaiVtltG5w/bi4wX53jdORe
      vOrqC+tVBSCFw2BfP1MLad7z8PbGYjQKUkq+89oV/ut33+bzn3qQB48ONmy5cLuaQfNFmzve
      X0q0uauItg7kHS6x2HjTkgVjnqSZuK3zwxoCeOu1l0lmiwwfvo+Qbw+cLt4BKSV/+q03OTuZ
      4Pe+9DgtDRz8J6XErmbwRZu4aLGUqAszICWiq69uvb+UEkNUmalOUxVVTkZOoyu336ZetQvJ
      5TLkcgWe/fbfMDaTqItxjYplO/zBN15mOpHlX/z6Tze08wNIYQESRWveNFUll0GtlGphznVy
      flvajJUv807xbQJakBPhU3d0flhjESylvP6dAhva+WimRXA6V+Zff/V5hrtb+PzPPrhtocr1
      xCzGUTQvnkD7bpuyOUwD/crF2s2NvvqcG5nC5GzxbTo9XQz6hzbkr6tKRFEUGnP2Wx+ElDz/
      9lX++KnX+dzHz/DB0/sbdr5/I45VrqU7tjVp1KfjoF8dq+X31sn5DVHlXPEsA75Bun0bv9R9
      DwSQbIxC2eD3vv5DDMvm9774OO2xjVe/2w2klFiFebzRgeZc/EqJNjuJaG1HRuuzdVsLaRhj
      0DdEl29zVzzdVQJ4c3yBf/u1F/mlR07xifce2W1zNoRTzaDofjRPfXdMdgo1lXh30VsHhBRc
      KJ0jrEU27fxwlwjAcQR//t23eensNP/m8x+lrwH39m9HLegtia9l+3JjtxOlXEJNJbZcy/8a
      lrC4UDpHRIsy7N+3pbb2vACEEPzBN17GsBx+/zc/gW8Xozc3i13JoHmjzZnrK0TtsGvowKav
      MbqGKUxmqtOkrRSD/iF6vVsPQW8+b1gnlu3wzRcvMDabomLa/N9PPHrbamqNipQCu5LC14wJ
      L1KiJhaQ4eiW6vpIKcnZWS6XLzHgG+TeyJnbHm5thD0pgNcuz/Pvv/5DPnTPfj587wHOHO5v
      SucHcMwCqh5oyt5fqZRQs2nsw1tLqU1bKa5WJjgdvnfVeJ6tsGcEIKRkcn6ZP/32mxQrBv/q
      H/4Mfe2Rhone3AxSSuxyCm+4CWt82hba9ATOvhHYQq5y0kwwXbnKyfDpujs/7AEBCCF5eyLO
      l59+A4+m8kuPnuLe0b6mONS6E9KughSonsY+nb4FIdCmJxCdPZuO85FSEjcWiJsLnI7cV7cp
      z0/StAIQQvL62Dz/7dl3sB3B5z5+htMHe5q6x78RKSVWOYkeqm858G1HStTEPHi9my5lXsvX
      nSDv5DkVvgfPNma8bVIAkvRSEtUXJuxTSOer9HTuTB36pWyJ7785ydM/HmOkv51f/fj9HNvX
      ZE6yDqRjIBwTr7eJtmylRE0nUQt57JGjG47zkVKSttLMG7N4VR+nwvegbvOh35oJMbdD2BaZ
      fJH4YgKPphAOePG19NIR9W9LLJCUkulElq88/QbTiSyPnjnIzzxwiI5YcM/0+D+JkZ1CC7Sh
      +5pEACu3tqu5TK2Y7QZr+uTtHOPlMcJamE5vN6166458tpsaARRNo5BN09XbT2E5RWssQtY0
      tyUnOJUv8x++8TLpXInPfvgUDx8fQl/Z0ZHAHks/BkBYZYR08HijTZPvq6aXULJpzANHa7c3
      bsDulJViqnKFo6EThLTa5Xc79dluSgB2tUgqW6LdUyToU5mYT3FodLSuOcFSSr73+gRffuYN
      nviZe/nI/SN7tre/ESkFVmEOX3SgaXKr1XQSNZ3APngEdQPbzdeythaMeU5F7sGv7nxVkU1N
      gW5HPaZA6VyZ33nyRby6xm/8/MO0RZsjYG2rSCmxSouAgje88cjG3UDJZ2s1/EeOgr7+xaqQ
      gqnKJHk7z/HwyW1d6N6OhtsFOn81wb/+6vN87mNn+ECThCnXC2EWEGYJX2tznPoqpQLa7NUN
      O78lLMbKl9AUjdORe3Y1urVhBGDbDn/10kWeeWWc337iUQ707YHbDTeAdCzMYhxfy/6mCHdW
      ykW0mcl1J7ZcS1ecM2ZJW2kGfIP0+fp3fVrbMAJ46dwM86k8v/OFjxMNNVYJku1GSolZWkQP
      dqA2QaqjUi6hXR3HPjAK/jsf0kkpma1Os2DMcyA4wpB/37YdbG2UhlwD3G0Iq4JZmMfXenDX
      e8TbImVtzj83hbPvEDIUvuNLbGlzuXQRgCOhY2hKYxVZaJgR4G5FSolZjOMJN/gptmOjzU2j
      mEZtzr+OaU/BznOxdIE+Xz/9voGG/P+5AthlhF1eifdp4EyvagV9ahzR1lmL67+DI1+ryzNv
      zHEkdIyo3riHea4AdhEpJVYxjifS25C9I6zs9ExP4AzuR0Zit32uLW2WrTRz1Vn8aoB7I2d2
      bXtzvbgC2EUcI4uielH1BjznkBIll0GLr9zTG1jbxmt7+gkzQae3k5HgISJatGFFfSOuAHYJ
      KRysUnJl27PBHMU00WYnUYSDffDYmhdWSCkpOSUulS/QprfzYOyhhlvk3glXALvAtRNfPdDW
      WNue13Z55qdwegaRre1rzvevzfPnjBkOB4/S4mndYWPrgyuAXUBYJRyrjD/cu9umvItRRZ+Z
      RGoa9sHb7/IU7SJXKmN4FS9nog+uqwRho9K8ljcpUji1Pf/YcGOc+F6L4U/GcfqHa0WrVun1
      K06FRTPOspUGYH/gAK16W+NN3zaIexC2g0gpMfOzqJ4QeqABnEcItIVpMIxajf5V4nkc6TBb
      nSZpJuj3DdLh7cSreHff9jrhjgA7RC3BfQmgMZzfttGmxiEQxNk/WovhvwEpJVk7w5XyOG2e
      ds5EH2y6Be56cAWwQwizgGPk8TXClaaGgX71MqKzZ9W83aqocqU8hilMjoVP3HKv1l5icwKQ
      kmR8jmB7H6KcJZEtcXDfUNMkcOw00rEwCwsrzr+L8/4bY3l+4mCrYBdYNOPk7dp0eMi/jw5P
      41wKuF1sSgBSCuxqnmylh0oqQ2drkGSmRPfKZXp7MU1x80iMwhyecC+K6t21341SLaHPTiF1
      HfvgUeTKLo8hqkxVJik7Zfp8Awz6h2tz/JUC+Xv9s9xcTrCqEQ2HyAKKoqKpGlJKVq7TQLqL
      4OvYlWUURUP1xXbntyIl2uIcWj6D078PJ1yLy5EI5qpzLJoLDPuHGQ0ehRtuhbhbPsFNCcCx
      TeZTBWzvIn0tIebTZQ6NdF93fXcqVMOxyjiVFP7Wkd25y9ex0a6Og8+PPXpiJVldkLJSTFeu
      0uJp5b4miNfZTtxt0G1C2AZGbgpfdGh3KrtVK+jTE4i2Doz2dhbNOElzEUvaRLUo+wL7Cah7
      t6zMenEFUGeklAirjFmYxRsdQvPscKDbtYOtpUXM/gHmvSXmq3N0ebvp8fUSUAN3vdPfiCuA
      OiKlwColcYwcvtg+VH2HUjulBCFQl5dQ00mE389ch5dZJ06Hp4Mh/767eppzO1wB1AnHyGMW
      F9B8MTyh7p3Z7pQSpVxETSxgVrIsBQW51gAZSnR4Oxsq97ZRcQWwRaQUWMU4wq7ijQzsTK8v
      BEoxj5ZcwBIWV6Mmab9Nu7eLFk8LUT2GhuZOddaBK4BNIqVEmEXM0iKaN4wntI05vVKCbaEU
      86jLKRSjihMMEo/BjJqm29vLgH9wT4YqbDduKMQGkFIiHRPHyGEbORRVxxcZ2MGCvy4AAAuE
      SURBVL5dHilRCjm05ALCqJAOCtJRFSvgJ2enaPG0cCpw766UFNwruCPAHZBSIuwyTjWHY+RR
      NA+aN4Lmb92ea4ukhGoFNZdBzaYpqiZj0TJlv06rp41WTytexUtAC+JT7676SduBOwKsIKVA
      CgspbKRjI4WJsEoI20TVvWjeKJ5QFyh1mls7Djg2imWilAoolTKKUQXbBo+X5bDCdLdBVXUY
      DZ0irEXcKc42cFeNALVwDQlS1hzeqSKsMo5ZQgoTRfWgqHrtq+ZB1YOouh9lC3dcIWvvh2Oj
      VCu1v/ksimmAriN0narfQ9EHVY9CWTGpYlB1qoyGDhPSwq7jbyN7TgBSOEjpIB2r1qM7BsI2
      kI6BFM5KuIuComgouh/VE0DzBFE0/9Z6duHc8G+BUi6hFHKopUKtV9c0pD+A9AcpB3TyPkHB
      KZK2UuiKTlgL41N9BLQQPtVLRItu++0oLg0sACklSFFzZmGDcJDSRkpR+7ewV/7Wpi21nh1Q
      lJt6cUXzomr+2vbkT/Skd3R4KcGyUKrlWo9tmSimgVKt1hz+Wu8ONyeUqCoyEESGoohwBLy1
      uXpVGpwvnkVFJaJHiepRWvVWdMXjblnuEg0jAMcsYJUSK9MTCQhQ1FpPreq1ubeq1w6YFA1F
      1d51ckVbyWNV1udI17YVTQNMo/bVtmuDg2Nf/x4haj13IIT0esHrQ678RdNXov6U6zm0Ukoc
      HExhYogqFVHBEAZVp4IhDUxhsi+wny5v94Z/Py7bw5YFUC3lSWTKDPX3oCibF0BtEWqvOLC6
      4vyrOPO1HleK2kLSslAcu+bAwgHHqS0mHbv2+E+8VpECLKvWS/v8tbh4rw+p6bXpkaYjvT6E
      riEVBanUCj8JxPU1hC0dCk6eqlPBlg6WNHGkwJYWtrTxql78qh+/GsCn+q5/1RXdPZltMLa8
      CzQ9t0h7NMBSrkJXy+b3wxXbRi0WavNn4dQc2rFqvbCoTYeQEsUya46tKDUn1j3g8dQcV1VB
      0xHRFtA9te9vRFWwpENCLlOVBra0cWR+5WKndxGmoFwpoSoaCqAqKuoNJ6u1OXuEkBZGV3Q8
      qgdV0dDR8KlbXEu47ChbFoCmewgE/ORte0vtCLOKXUzVnFpVEZqK7VVwFBVHkaDqSEDoQYSm
      4eBgSwcHB0faCGnW2kEipIMjHBzHXvn+XQcXCHq8vcT0GJqioykaKjc7rIJKUAtez4pyHXrv
      smUBxEJephazjB4a2VI7Wa/NdKwI1BxORUVTtOt/WXFHFRVFqmhoeFQPPmpTi2s7JsrK61RU
      dFWvPX/lD0rt9e7uiss16rYIlte/KigNeg7g4vKT1PkkeGVXZAtck85WJx31EGJ92gAaxpb6
      dE6NYks92qibAFY2AuvW+2991i0bpI16tdMobdSrnfq0AVvzlYaLBarXcrMe7TRKG/VqZ6/Z
      Uo82dm01KKXN+OUxJmYWyGdSXLx8BXNls2ZibAzDufNI4lgGZy+Ng5TEZ66QyFUBmLoyTsWW
      LM1PsZgt394O4TAxMc741BzF3DIXx65QtRyK2TSzi2lss8LF8avr+j8lF6ZZSOcp5ZY5d+Ey
      ZbN2DrG8mKAq1jcyZtNJLl68RLZY5Py5i8wlUrUHhMlCYnldbQBUijkuX51FCotLFy+ymMqt
      PGKwEH+3nWRyac0x2zbKXLw8xuxiiumrE1yemL6+YbwQX3z3vfI5ChVzTVsS8TkuXBrHWvkd
      TIyPYa7j871GPpPi4qXLLBcqlPMZJmbjNfsqOSZmFu/w6hpSSqYmJ7h0ZQohJUuJBS5euryb
      I4DK/v3DXJqcZSK1gD8YRQiJcKqYjs1iMoNVSFCxoKc1wkLB4uToPtQbtiSF5PpF2q1hH1Ml
      i+6YH0c6JBaXMDIpNMJMpOZRfCF0JLoK3X39aNeaUVT2DQ9zaXyKK5kk/mAER0gqZYNMoYzX
      LlK2LJKL8ySXS0QiQXragyxXA/S23XzuEQoGiBerVIwixw8PMjG7xMi+HgrLy2Rw6G1pJZXK
      ks0sofrCnBi99ULsaGsHwjHIp7KULJvYtX5OWKSXUljCQbUNbKtKuVJl8MARooFbP0ZF9yFt
      g3x8nvb9h8nNT0FHDLBIJxPYgGKXqVSqdHZ1rv4JefwcGOpjaiGNWSrgDbdd73XT6WVs2yai
      a5SEjSfsIRJY/ZAvky/T3x5kYanAULtOpWqSXM4jjAJeXUNXFRZTy4RiHezvv7VUYzjWRo9t
      USyXSOVz189t5uPLtHeEWZydo6W3nfRihuVsFjQvJ4/+5K6kpFAuI6SCJSCbzRGMtu/eCIB0
      uHxlisOHDuD1B9nfH2MhWSCdXKRkSZaWkui+IF0tQQqlCsP7b3Z+AI/XV3NkRcF/wy0mmieI
      XUqi+6JYRolcocJCPIF0DIqG867zAwiHsStXGTk0gs/vZ7C3nWQqA0DEp5MoOYQ9Cul0hvTS
      AsGgnzcuzNPVeuuhn99Xi/mRwqFaNVBUDSEEFiANA9M0KJYqRFo7CPlW73vSiQUqhOjr7+L0
      8SNkU0sgJZZloXl0KpUq+XwBqXnZN9hFpbr6+Yvf71/5XWgYlSqOUwsxsaoGutdDuWyQyxdv
      +xE5RpGJuTSHDgxycOQIPrNI0QYhHBRFpVypUioUsO9QPq6ns5XJmTg+r4fEwgKWopJYXKRc
      rlAsFFjOlNi3bwjDqK76+kxqkYLjpcMPJcNiYXEJRwhSyykuXlmiVKpgGFXyywnCXUNoOLc2
      IiWK6iHk07EdweDwfoJ2dhdHAMcGBWYXEhwcHmA2keHAvi5KRbivbz+FQp7ZqUmU9h76+9tR
      9FtnfKV8BtuyWEimqeYyOJRxRJiOjnZsI4g/HMKwBGkEfdEYSjWLL9h+UxtCOihI5ubj7B8e
      Ym4xxfDwEI5RJaqpFComHhWMUoFAJEY4GCQaCd4solpLzC4kMSzYP9TP3GKSfcNDlAtZPLE2
      +tojTC8s0t3dgdejr1lzUACFbJqgz0M2vURP/wAIm6mFDAcPDJFcmEO2ttMaDeLz6qhy9aSc
      VDKObVlYgT6c1CI9/f1Ix2RqLs/I6AEWZqbQ2tuJBtZOqrFtB4RJPLmM7lQh0k5Yh/jcPH2D
      gyhmkXSuQk9rO5pn7RAPKQStPUN0twQoaF3cMxglX8hjVUtkSjY9LUEunL9ArHNw9d+JhHJ+
      mWqon3tPHCGXz6MiOXT4KB4VLNsmmcjSN3yAq5PjGKxii6LS2Rqm4ugEPCrZdI6s7at/MFw9
      MU0T7xr3U22GfD5PJBLdUpW2armE4vHj87gx+vXCsUyWMjk6OzrQtlJWUEpSqSWC0VaCvvVl
      6zW0AFxcths3JsDlrsYVgMuOU62UyBdK6yq9XioWEVJSKhYoliorIemr41QLvPrWeQzDXGlf
      UiwUcITEqFYolatIJIZhUMgs8falicY7CHPZ+3z7macZGB7CUFvoDQsIthPQJVG/ju2NodsF
      JubT9LfAH/7Zd/mNL/0qTz31FPv7O/H1HcdbTRHr7Of57z3Ne973IYq5DAdHD6PkF5GRbuam
      J5m6chFvrAcDBRyF3rYQZy+N88j7HuBrf/s9vvTr/4D8pSvuCOCy8+jeICdPnSIVnyWxtMS3
      v/cs5958g+dfeQuPR+XZ514iJpYZT5Y4cfp+Ql6dQCjGAw/dw9SFSyyls3zn+y8QirSSnhlj
      cnaOV98Zv95+OKBT1lpRikVO3H+GciGNB5OuvmE6ewbobo1cf64rAJcdR1dsXv7RK4wcOcxi
      Ik17ewtnTh9iMWfjUxV62mNcnsvQ19lCKFjbpnXMEs89/ybHT+wjVajS1hqlLeLHFAoef4iD
      Qz3X2//Biz+iqz3K4Mggrz/3PF29A7z4+jnCfg+L8VmWMxmm47UTdncXyKUhmBm/ALF+hrpi
      d37yGli5ON8/F+eRh+9Dv0PXXsgs8erFKVcALnc3/z8iimAos/A/xAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='D/C 2023' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D/C Delta' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D/C initial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3xUx7m/n61a9d67kBAqoEYHAzLY2GCqMb0Y9x4nNze5JTc37f5iO7lJ
      3I1teq9CIEBUIQTqvSIJ9V5XbaXd1Wr398eCQIALjh2Tq/N84AO7OzNnZs75njln3vedERkM
      BgMCAqMU8Y9dAQGBHxPprf9kdxb+mPUQEPhREEYAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0g
      AIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGN
      IACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFR
      jSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACB
      UY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0gAIFRjSAAgVGNIACBUY0ggIeY5BPH
      +emql3l7489JTi35u8pqLsjit/+x5Vunj/n4Y3ILG/6uY/4zIAjgISX/bAy//90elr/yPEuX
      TuNX61+lvkP9ncvTdCspLqz41ukjoqPxdLf5zsf7Z0H6Y1dA4P6cOhDL2p//hEeiJwOTcfL0
      xVohpjT5Mr96+10GtHqiFizj1//zCv+1ZDka+0CabxSikjix9/xWCk4f4U9/2IZ2CDb8578z
      xflmwcpqomb8jKziY9RcvcBbv43lyLFf8/aqt+jR6BFbOPHRoffZ/T9/IGrzfzHJT8Qvn/83
      WpUDeIdN4p0tv2Xfb/6dnBoN2o5m6hr7+OLCIc7+7be0mobyX/+98UfstQdHGAEeUno7erB3
      sB/+HDwpEktzOR/8x+958X8/4ERmLI1XDpOUUQPApIVL2XvlOKYdedS1KHnv53/hd0f2cejC
      Vsy+4TbXWVnGjXYDb/3hV/z5y99iaXL7stj17l+YvPYV4nLO4C5q4PChKwB4TJjM1nMHmRJo
      SnFhLS+/894/3cUPggAeWtz83CkvKRv+fOCv71NS3oKysxNvfy/EUgXePi50tXcC4OTiDCIJ
      chMpDKpQqkzx9LDB1M6FhYtnfu2xnMOm86t/X82JrVvZNG8d16uVw791tSvx9vMBkRgfP2+U
      bcbfHN2cEQEmCvn33vZ/JMIj0EPK8hef5dnl/4KhuxFxfxvx5wrY+/LrzJ7/KJ/8+l2ip/uS
      nNfB5veDSP/srswm9syc6cDHf/gcX+t+0sp1vL0m3PibXIFpdzOH9x4n+8RxwJK28kKSs2p5
      YvXTtNe8R2PTbQHMWhDNjr99iK5lLseOX+Vfd7xA7r7Ue+qbeeE8KqkTs+eE/XCd8gMg+c1v
      fvMbgKaB1h+5KgJ3YunkxhOLZ9FUXYupgzs//3+/wN5aQeSjs5GqlbR0annj97/Ey9UaAL/x
      odhaKwAIiori8aVP0FFbiVZmy0s/3YhCLkVhbUtIZBgTxntQV9vB/OULcfZ0Y/KcKRhUSkoK
      bzBzxVqiZ4cA4BMcxKRHZ+FhK6Wyqpm1P3+bqAneALj5jcHNxXY4nUbZzKDYHB8flx+ht747
      IoPBYADI7iz8sesiIPAPR3gHEBjVCAIQGNUIAhAY1QgCEBjVCAIQGNUIAhAY1QgCEBjVPLAA
      Dn/8CVvevf23tqWLjCsZP0TdvgI1OVeLvpeSyjOy6Bu8+WGgi7SMsq9N/21oLC2itqXv7y7n
      fnTVVlJe2faN6XS9bWTmVv4gdfhHkp2a9a3S9ba30t2nJf9yOg/qL/vAAnjm9dfYtCEaXMby
      8i9fw8tZQWbSdxPA9ne//A65NOReK/5Ox7ub8owsVLqbH9TfkwDKiqn7ngWw/S+fA9BdW0l5
      Zfs3ptf1tpOV9+MI4Lud0/uT8y0FcIuCxHQ03yLdlr/druP34gvU09LAka37aW1Rsubtlxhq
      reRETBISuYIVL6zG3EQCwJnde2nrGsTOy48gL1Oy07OwPuTDsuWPcHTrfvq1Q/hFTGHmzLHs
      f38beqmCwCBfBq29mBbly5WYk0x4YiaN5dc58Plu+voNrH9jA6qGCk7EJGIwwBPrV2NvouH4
      3pMMqAfwmziTSD8pR05kI9aJeObVpzn1xV7UyKgvrCHqjna0VJRy6MseOpQanv+XzVSmJ5OR
      VY6qd4A1P3mRsqQLFJc2IlFYs/qF5UhFMKjqZO+WI4hlUsbPigag8No1aq/1IbFyZuW6J8g8
      d46i0npklg6s3vQkpw6cZdGap9jzwTbWvPUcmXGnCXhkCofeP4S1sxVKZT+bf/4CplIRNYU5
      ZKdkY77vDFO8ZJRlZdJbkYFGYsnGF5aRfeE8BdfrsXHzYcny6BHnZUDZwtnzBSx9JprTuw/Q
      3qMhcNJ0XOVK2mTeRIW6cenwcaYsXYK5TIS2T8mhbUfRGUQ8unIFpYkXmfb0MixkQ8QdPEf0
      vAiO7I7DIJKyYONq6tPOUt4qRtvThpWHP6HeZsPnNHqaL8cOX0IqETN7xdP43IwtyDh3jtLy
      Rvo1Yja/vZGTW7cjlZvS2tTOlKXLCXRXsH/rEWQKM2obuobboqzI5/DJHCwVoDHIcbCQ0NzY
      yuTFyzFRljHoPGE4bXlGKteSS1DYOLBy4yLST5+itLIVmYU9j0UHk5ecxU6FDeteWf79vAMY
      5BY8/fwa5s8YQ05uA0f3xLPx7edZ8fQkThxOuplKR119F2tf28QTC6YzJmISkZOjWL5yHqkx
      h/GZtYCNbz5PWeJFVEN6CnIrWfXqJibOnkxh4hXAQEVNCzamYqxdPVj90gYWzPbl5Jlsjuw+
      xbo3n+PZ11YRs/0AOp2ehc+uY+GKBaQnXGZooJf6jiE2vrmGqsSz2IbPZv2r6xnj4ziiHQpb
      Z1a+sJYQDwNVzRpsvfxY+9JqApwlZOfWU5JfyfLn17F682KkImOe7rpqTD2C2Pjmc4wP8QTA
      MyiUNa9uorulCl1PE2nFSja9+RyT/WScu1JBZ2sLBm03mo52yupV3Khrx04+iLJfypqX1zFx
      nCXFNT0AeIdGEDktkpVrnwTAyc+fVS9vxNDVhlrdQXJuK5ve2IzNQD3lzQPDbdEN9PDBO9uZ
      v+xRqlIT0LtHsPGN5yi6egX3kFCyLyQAQ9Q0dGIuMzbmxI5DzN24gU1vrOfcgeMEBdiTdLWU
      tuIsxI4+HN1+hGWvPsfGl5dzal8sXS2NeEdOYcMbz9NeVjLinNYUZDMu+kk2vfUsHs5Ww/Xy
      Cglj1XMrMdfUUtmioa6qjnlrnuGFn68h7UQy5/ccZda69ax9ZR0O1rLhfFpVN1I7d9a8sonu
      pioeWb6U5994mqS4ZHo72uhWaYevs3NnM3n2J5uJ8pFwNbOW68U1rHhxAyvXL8DRx5+w6VFs
      emUF9akJ388IYG1rjQiQSiSgN9DR1MDJ3UcBCA6LuJlKyqa3NlCQmkltfTuLVj05nL+toZuJ
      TzoA4GAppmcAPP19kIpFgCn2ZnoayvJxCpoMgLmFBQDOHq505FSgl8iQS0QgsUCs09Db3syl
      y5fwHz8W+U13Xd+xPgC0t7biPOPRm+WYjWyHnfEuJZFIMWCg4Oo1tBILTGUKDEMG1v/0eUqy
      iqi+UcX0pYuxNZPiMC6SeZZ1ZCQmo9LJsACs7YwOamKxBI2yFQtno4OYq7c711JaGedhTcK5
      dGa/uIny9GsoLOxv9qPx+GKJBKOH1r3Y3EwjFYvR9SqpLK8gZtdRwIxA2e1MGZdSmDvVl6a2
      Ptqb2yi/0UhMQwm2bl4gt8RapqW2IAPPqEeG87R3KEk+EYcY8A8LxSMyjMufHCC1WsLcDWv4
      8vwBLh48DsC4iBAGypOwudVW6ch7afiCZ6gvLyf14mVkNt5ETfQH9KSfO4/czgW5qTkGgwG5
      uSVmcgkgRWIw0NY1iLOD8byYWZjf1XbjsUSmlliby2FAhEh/d0dpaCypvNknED7blJlvP09R
      Th7V5bXMeWbJcMrWptYfZhZo4tRQLJxccXIwR8/NW6Vew5nD8UhN5JRlFDAIDPR1cL2kmumL
      ZhPz2W5yk1Op7FXgYjGyvEfnR/G/7xwneu54AIrTkslIyWH/9pPMmjORsZ5WnI5L4tLhI7iF
      hJN7MQXnQH/UHS10dfePKCt85iPEb99NXmoGKdey0On4SgpyCvH0cqb6RhVD+iEuHT3FoEhM
      e3UFrZ3Gu21nVSnJaeXIZWIKs+99OTf3CkZ1PYPstBz27TlPdHQkkfOmcjYuEz8PZ1pzE/Gd
      Mu1r+1Pb10Vx0b3P9FJHX8Z5WOAdOAbxkA4TU5Ph36YtnM/aV9cRt/MgE2bNQqIdYMw4P/R6
      HWJgTnQIH3xyhVkzAobzRM+dzIBBgY+vK7pBHYik2JhL6JOaYSaF6TMnYTCzxtPDgUGd/r51
      vXVOy9JTuFHTgdigpTj/hvHHwR6Ki1txdbGhpqKWoaF7y5gxeyx7PztGZsIVcvKqvrZf7o85
      IRP9cPXzxVxuQCRXcP5oHHqRjOYbpXR0azHVDZCRUcL42bO/mzeoXqOiWam96Q6rp6GmCXdv
      d9TdSgYwxdbahOriEvQKG/z83Ibz9XcrKS2uxC80BGtLBb0dbdQ2dBMywZ+e9laqqlsJiQxB
      KjYMlwmg1/aw9dOTvPiTdYCOppoOejqbsXbzxsXZeEesLb2OTmqF3xg39DothVmFuI7xZ1DV
      i5OTJR29epydjGm7W5qoaezGw9UKExtnzBUSGFRT36rCw92e7tZmZNZOaJTN1DYoCQhwR6WV
      YGcloyinCEdvP1xvugIDtNRU09yuIiQ8mAFlG3qFDdYWcprqG3H1cEM/qKEopwiPseOwtTHe
      3epr6vHw9qCpuh4nHw8kQ1oaGrpw93Kit70VzO2wNDUO0CplB5U17QT4OqHSy7G3NaelrglH
      T1cY1FCYXYT72LHY21rcc34aq+pw9vFE091JaWkdQRGhKOQShlRt7Nxxmedef2bEuW2traGt
      S0vQ+ADEIhjo6qRXJ8XJwfgY01hRQY9WQmCQD13NDZjYumJmIqaprhFXT7c7zukYqkuuM6CX
      My54DKKb98GW6irae3R4uttgMLGmr6MFd29P43mt7cTVy4nmqiq6NWKsTKU4ebsjwXgT6FaL
      cXSwGu47bvaZlRnoFTao29uw93FHoh/iek4BNu7euLrYolP3U5RbgssYf5wdrdH291JUWE3Y
      5PEPvzt0VV4WF89lsuDZ9bg5mn9zBoFvpDwzjcsJeSx5cSNONoofuzo/Kg+9AAQEfki+0zvA
      4EAfuSlZdHR+9/nupvr/m2vO6IcGKcrIoa7umw1W/2gaauru+31jTQP3f6J/MNpq69EO/f31
      uZuW6gbufFXTa1Q0Niu/Mn13azO9A1/zcncHDyyA3qZq3v/jVrSDQ8R++hk5xY3fmEfd2UB+
      Uc2I7+KPxD7ooR8K0q6kf82vBrb89j2UvRpyL5zmeGzyQ2WVjd13BIAz+0+N+P7knhi098vw
      gCTtj0H5AAXdqs8tvsqSe2FnDKo7Pms7ajl5NovaojwaO+/NUXj5HKUNqhHfnTkUd986PHBM
      8KEtu1j9szfw9/ckfHo4tWV1eHg7k372HJfOp+Ps7c1AczUtKgm21qbkXsvE1tESZZ8eJwdz
      Lhw8Tk5uJb09XUycbpzWzLuagZ2nO+0VJTR1gb21mJy0cqwtxMTtP05BfhUB48eSeTUdD28P
      tMpmiquUWMkGOb7rKO29Q/j4uFJ/vZDj+0/RoxHj7W2ceixLT0fm4IampZrSul6cnSzJScnB
      3s6MMwdjycy8jl9IILnX0nH38QCdiqz0Gzjayondc5TaZhVjAjxvzWXRUNOAh5M5SdcKyL18
      hdKKNgKDfW/+PkRmSiHLNy4nMCIcd1cbZCIdzUotdDdyo7qVy8dPozIo8HB34HpaKhfjk1Cp
      BmhXDmAm1nByXyzXy5sJDBlDTlom1Xm5JCZk4TnWH1MTKcXJVzkdexkrJ1dsbczJuHKV0ows
      sHBB39NMzJ5Y9CZWuNzxkn6LjKup2FlI2f3ZQdQiBUEhfgBkJaVjZSkh/ug5bNy8sLFSkHXh
      IudPJWLh5I6djQnnDhwjNSUfFx8fzM2MU8v9XR0jzk9ZcjpeU6bQUphJ3JGzaMRmuLs70Fpd
      QcyeWPp0cjw9nW7X58pVVO3tpKYWEzB+HB21jdj7uNNRWc7po2fpUPZRV9dCd3U9Jg4mnDsY
      j7mzO1aSfvIqewlwM0ds6YBU00XcgRNU17RRV1WLVNtN95AJGafj0UosGOyoYecn++nTSQgZ
      H0De5QQunk3Dzd/vwUeAAR3YmhotuyKpGVMeCaPgbCwdck/WPb+M/R/vwNrZhstxlwADeZn5
      6DobKSiqJWH3XuwmTGPx0kdorr/DpN9bS0FpJ4VFVZRnZ9NSmEPboIzS/FLmrVpBmKeYKylV
      XE/PRqOH1PhLmNs7sOPDHTyxfjWmyhtkFrcQd/Qy69/YjIezxfCQrkBFWmYlednlVBYX0N9Y
      SmXzIGX515m+eDFzJ7txOj6bpuICWnp1lCcnoTaxZvcH25n99NP4mnVz4eptF4m0pHRQd3Fo
      33keW/MM8vbrVLbdciiS8vTaJ7l08iJXziUhUZgNuyU0lhWTllPHqlc3kXX+LNqOGq7mtrDq
      +VVkJqQQGuZPaeENFm5ag6u4heyyTtLPnsN5/GSeXvUouz7aTVNhGlkVWja+tpbzO3bSO2jg
      wIdb8J8Rja+7Cbu+OMnKVzdxIzGelt77PwLcaawaZlBFv8SGdS+t5PS+I/Q21iB28mfja+uI
      P3CU5rxUVJZjWLVpEQO9vcPZ7j4/tzh7JpUNbz6Lg5UUg7aHPdvjWf3as2gqM8gqbh5O11RV
      Q2j0PCJ9TbiSUnHTlWGImIPnWPH8WnrLc3EZFwqo6dGasu7VNcQfODacv64oj8ZODYe+OMT8
      Nc8Q5DxEn8Qo/JaWXla/upG0M3EjjInV6QmUKU1Z/ewijn65/zu8Awzp0dzxwFhReoOizCam
      zwlGLDfFy1RKr4kz0sEeuqsLcQicOJy2pHWAyGA35BbWeN9hhQ2dPYuytDQMIikig47svFqm
      T/XH3ExGwol4srJK0Ko1zHlkLCmZNTT0GvBzltJUVcOFIyeo61Cj6e1i2donyUhKp66mZdiQ
      5BU1ldaiHLQGESYiyE4uZtrcKKysTEk6dZ6Ua/loNWrmLp7J1XMZ5F7vYEq4O3V1dVyJPUVR
      lRKReuRwChAQPgEzEylWthYMDt568DVg6+7N3EVzmTYznF3vbx+RZ/yUCMQiEQpzUyQKc1Rt
      jdwouYFBbopEBAoTERdjTlGYX4lGo0Vm7YCflwOmNk6YijWU5uYxae4MRGIpIUFOVDWoGBMZ
      iZerDYNt9dS19xC35xgag5Ru5b11/kpk5oROGINYboZcDiZWNtTmZnD66Fl6+7S4hE3Dy7Kf
      nNQ8BtS3hXX3+bnFouXzyEjKoKGxk76GCpxDw5CKRUydM4m8nNtrnLqOGYODrTnWdlYMam7d
      RMRI9GpulJTT3KXBxlwGKBgfORax1ASZQnJP9S3NpZQUlFF6vR5XV6NRMThqAiKRGFPzkesW
      Xc8toKe1gRMH4xGbKB5cAI/Pj2T3lycZ0hvIOxdHQWknoZPdSb5UhF47QO2ADlsZTApx5ou9
      6cy+abwCGOdkSlZRI5q+LipvNA1/LzFzRK6uQWzqiI2JiI4hBRYyEefPpbJ49SK8PR0AA96T
      Z1GfFIOlix8gw9Pfj8dXLmH2vKm4ujjR2t7HpEcmo6nPp6zxpluAxBQzuRrECrzt5OS26nGz
      khIXk8jitYsJGOOKAbBwD0LXXoLU3AapCHx8fZi97CnmPfkIHh5OfBv0ml7+9uv36VVp0aoH
      6O3t/8q0EoUpvY0NZKXmseaVDYgYJCkxn6dWPoWLsxUYYLCnk+r6TtTdbWhFZgRGRJB+6SoG
      vY6iklZ83W9PC8scPfF1tWPR+uVMnhGJo4MFlaX3f/fQatV8haEZgCuHDhH02FM8Ej0Rg16P
      sr4ex7EhRM2I4kLM7feHu8/PzV5A2atl0iOTac66isp2DC1F+ej0BlIvZxAWEfQNvShCox4g
      62oG0avX4GBx7wV/N/ohHUXpWdiPn8bE8e73b7NGg94AQRETsHPzZun6pYRHBD74O4CNmzc2
      UhXH955E4TGOJ56YiPOYsXSV55BwKZslz67C0twERy93VH1agoKM68hITS2Z+uh0Ci6eo7Ck
      kQmTw/Dyvf1sLR5U4xMRiaerBXqFLe5u9ij0A5yPT8Y7OBgbBzucHG3R9vUSNmcmpjIxQaH+
      nNp7jDaVlImTx6HtauXkodNY+ExgcoTPcNmmokEcxobg6+eETm+Cl7cz1qYGTscm4OI/Flt7
      e9xc7ZANDeAVPhlrSxOCw8dx9sAxapoHmDIzHIlYNNwHHt7uIFPg4X7ThcHJBTMTMSKpCaGh
      3pw6cJzS8iZWvrgWUxMpYrk5bi62WDo4YW1hvCNp2urByQ9vD3tSYo+htwvAxUzD5YRMAsIm
      YOfoSF1VFWZDKlLSynh68zM4enghUzVx5sQVoletwMXOaPhy9/YEsYwxvvYc3xOL1M6DQH9X
      slOy8Av0G3H+3L09sVDoSEouHX4HAHDzdh++G4ZPn8SlQ8dRDogICvLFL2QM6fFnSbmWz5Or
      l2FlaQpw7/lxsMLByxN1aw2njp3HI3I6IYHe+PvaEbs3FseQyUyJvLc+AHILa+xszbGxMlDT
      oCY41I+a/AyKylWMC/LE2cd92G/HzcN1uE+tneypzC8jZOJ4+lrqOXc+m6jJoVg7OQ8bEl09
      3LExF3MxIZ8ZTzyGpvE6F+JTCJ4ySbAD/FjU5qYSn1CCna0FfZ2dzF23Dk/nkT4gW//2Oc+/
      /dKPVMMfB42yka2fxuDo6oheo8In6hGmTPL/mhw6dr33KQo7R8RiA6YOHixc/MjXpB+JIACB
      UY0QEikwqnlgAfQrO+juu7+1I3bHsft+/w9Br2X3nz+h9I6X6+9KY72xjOz449S2fzvLTkVW
      Gp+98wlb3vmEG9Xfzgp8t1GtNPkypQ0/TDhleUYKXQPfnO5Bid+1ly3vfsB/v/rfbHn3E0pK
      Gzi6J+Z7KbulrukrLNRaYvcc/16O8cACqM1KobCy876/Ndb8iO4N3Y2oHAII9Hf9u4s6ecQ4
      09HV0ki/9pudBLRdjcSdL+Hlf3uNl37+PLHb9nyr40yZNXnE596ONnoHHsCX4AEImDQNG9Pv
      v9wnNq7j5V9uwsVlDC//8jWCAt1p+J6ugwuHT32FhVpPY803eyB8Gx4wIEbNxROJdFhU4mG3
      kbyzsfSoDdRVt/KTd35hrJpGxZd/28nqN18iKy6GmqY+BtRaNvz0RfLPnaaipoP22jqeeuMt
      Evbv5aVfvMoHP/sV6/7ndxQe24fX48vIPLQfNRIamvp46+3FHDiay3MvLyFh9248op/k/Jbt
      WDg74OQXyBMLpgNw6cR58hOqqJgTzLb//ANjp07m0RXLSTmynwHk9PUNsvlfXuKLX/8nTn6h
      9DTV0Ysl7q5WVJQ28Ys//ytyERRdu0pechan/MdhCiQcPU6WuJ+eQQWv/mQl+/76OTqZKSJz
      WzY8txSAgitXmbRwgXHWSWrCz377NqDn0Ief33Hszez481Ze+49XyT8Tg8ZrOinHD/PWv73I
      F3/8BBNbe1rLC5gT9Phwb8d+uZ0uNWh1cp57axVb3/mMZ3/5Crv//CUbfv4sv9nwc0JnTaa5
      romVP3mDwbp8zl4sRGrQMHPlairP7KZK44iXnyeShmxC1vyU5uQ4im60oOnX8MwbL7DvvXdw
      8vJnoLsDa99wnno8iK3v78PM0hRzZ1+eejyEbZ8cwcLKFNdxYTz2+KRvvEqU9dUc3X6AxooK
      pq3ahAvNnDydhYlYx8RFy9FWZJFd3orMoGfhcxtpzblKcnYVBs0AC557Fk9nC7rrq8lIyUL9
      oQXrXlrIwU/2I5JK6RoQ8dYv1gDQ01zL/oNJvPDWGo5+tAU1Cobkljz78nJituygf1BMXZ2S
      n/56A3u2X+KF15fw32/8kd9+/Bt2v7+NpevmP+gIoGDu4tnMXb0Sbw8bFm5cTXDIGMT99bT1
      AAYdH/7LfzF1xRqszIa4ejmP0KhQfB3FXLl6nakLFjB1+gScHUwoL23AwUpB70Av/mGB5KWX
      09gnwtfRnGUvrCVgrA8D1U0MOnhj6GtBD9R2DRLgaoGdqytT5kUz/8npwzV7dPFjhD36KGN8
      7LHx9GPTm5ux0VSjdQhi05vPseSxsVy8XIjUyoHVL63l5bdWIXPwYM1L6wl2UqC86VISMmMm
      YdOjWPiUcVOJOcuWsO7151AM9dFenEm92ozgiFCUJTm03pzmHxwcHLFRhEgkore64K5jl+Ji
      K6dLraewspfIEOOeRQ3ZKbhMeoyNr29kztzbI8JQdx1ZRZ2EhIdiqq4jv0rFms0L+csv/sis
      NauQSyBg4mTWvrKR13+ynPjYK5w4coGo6eGET5vApaOnjfVfvoxFS2YPl3vxXDIToiYwfqw9
      8fEZYGrDqhfXsvnnb9BdW0BKbCyzN73App+8yGPzJ5J4OAa3CZEER4aRfTnxW10lNu7ePL15
      NS++uozSkipiD8YTOSOSCdMiSDx+CrFMwdjxITz94nqcrOWcOZlI5OQJREz0I/7oZQCsPXyY
      NC2KdW+uRmFiwaoXVuHr50FTfT0A2r5Ofvezv7D+9bX0V+dT3i4mOCIUTU0RtUo9SzavJTDY
      F31nI91iB2QGFZ2lBfiHBFHXpUaqMMXS3vXveAkeVPH5n7bhOi6USZPHAaBsqGXR22+QdMzo
      6GZhbYOTmxPBsx9j5iQ/Dn74OTozB+bOnwrAjBmBxG47gd+8ZWiaC1GYW6PrbeOL9/cxJnIi
      YeONc8ZTJ7iRkpiMrc8EkChY/dp6XO0VbP1o932rZmF520B0c5IL0c2IDJFIND72waQAAB4I
      SURBVGwfEIm+ufmiW/P/IkAkwtbRESc3J5a8vBnbmwFYQVETyLuSMpzn4Gd70N3n2HOfmETS
      2avIrR24Zd75aoOUCCsHO5zcnHhkxWrGeZij6u7B0taKnu6RVl6xRIIIEXJTM5zdnHDy8OaZ
      jYuMfWE1MobCzMoKJzcnvCKmsvCxcBjuD5Hxj0jELTO6wWBAJJLg5O6Ck5sTa19Z9439dWd7
      b0XByBQ36+XmzsrNy4l8fB6zoydSkXyRhORSFBaWOLk54TImhOWrZt1TXndtGXt2xhM2exb+
      fsYbR21lE6/862rijiWBSISNgwNObk48+dwmnGW9bPnfnXiNDyciwhjx5uVgxqXcdlasn0na
      gYM4BkVRnZ3y4AKwc3Pl0u7d1NZ1oGxvJzHuLGmppajVWmw9/PDz9yPIVUxeWTcREd5cjLtI
      QtxFulSD9HUryUpI5NyZFDQaNc6hE7meX8xYdwtU9TfwnDgVvU5DZ2srCcdPk1tYjFZjIDj6
      UWI+20/0/Cj0ml52/O8Wjh+IR6v7OnsmWPpMQKEsZeeH2zh+vpS5c0K/VRsNylZOx12753uH
      oCjM+2q4fOoSCedSMdw8z9Y+43GXdbDl3U/5/J0PsQ8IxvY+x7b2HU9Z/BHC580ZLtMjcir1
      KWfY9fFOEi9koO4zDisSaw8CXEQknLpIQlwCao2auDM5vPartyg8G0ufRk9lXjb7tuxmy0fH
      eWLpLJ5YMJ3TR89xJT6BG1Ut923btKmhnD9xkcRTF2jtuNdSPW3xYi7v+IKdH24l8XI+s1Ys
      JvfMaRLPXCY7swR6m/ny8wd7AV2wZBZnDsdzJf4y5eUNZJ0/z+5PdpOVdQNzcwVzoiM5e/w8
      V85cpK7xtpuzm6OCbX/ZR9+AmvbGBs4ePkFxUR16wH9CCP4RUxmozGbIORhHURuX4y5x6cw1
      hoYGUba1cflEPFnZRWg0eqZGR1BS3ICplTtleUVMmRaAur/vn8MOMKhSsmfHWTa/vvrHrspD
      hJrtfznE5p/9821M9zDx0O8R1lpZxtmzmSzbtOLHrspDhpTwaf9c+3E9jPxTjAACAj8Uf5cl
      uL6m/vuqx0OJpq+H0pLvsjTHQ8SgmvqGjh/8ME31I+flu1qaqK39bhsvNlT/466r72YIqzAa
      wo7t+3YWv4yklG9O9CBoOjkd+z2XeR/2fLgVkVT2zQm/FbpvvYhwdvxxmnsfLM/dXNl/ij6A
      vmaO/QP66vSRkSGHOz/cilT2za7M9+PEzu/HkvxteEB3aDV73vmE7KIafALHUZqXzaCyg6tJ
      efiHBiFlkPOHYsgrqME/2H/Yhbixth53b0/SEy5TlJ5NVtYNbK2lnNwXy5CJDS4upiSfSiYt
      8YoxBHGsJ0PqPk7uPUpRUS1jggPoqi6nvLKVK5dS6Sgv4PjRy9h7eOFkKxsR2liRmkFrRztn
      j5xBYe+Cg50lN7IyOHn0POaOrtjbWnA9PYUzJxJx9PLG0uLWsiAGkuNOk3gpCxc/X9orijh2
      4CxOPn74+3ug7mikuEqJs5M1NzIzkdi50FScS9yhM/RjgqeHIy2V5RzfG4tWYo6bm/1dn21p
      rGnG3hIys2+Qdv4idS0q/AM86aiv4eS+WKobevBzN2fLe59SUd1OQFgIyuZW3L3dKctI5VTM
      RUztnLG3syQ18Rrl2TmkXCvAPzQImeS2u7aqtZ7P/7SVhlYlQcHeZGRX0nGjiJIbrQQG+6Lt
      URK7+whNHVr8xtz2n0+/nEhJRg7p6SUEjB+HWDdA3N6jlFW0ETDOFxE6Lh45TnbODcYEj0Uq
      0pNwLJbMjDK6enqZPMMY/JR18QKXzl3DPyIKW1MDsbuPUlXXhX+gD9V5GTS19ZF6NZ/AYF8A
      +tpbiNl1lOZOY30yE9OZNGcKzTdKidl3Eo3IGFp5d8irsqmWmN0xaMRmuLkZXdMZ6OJKUh45
      iUlU1HUhHejg5OGzWLt7YmNlRv6VRM7GJWHj5oGNldnfYwizpq2mhoDps5g5wY4LCYWc+GIn
      3tOiiZ7hx+G954ZzZVw1bqx8fOdBop54EleTDk5drmT1a5u4cjQW0BB/9AqLnl2HvbaWhJQK
      9n+wjclPLSZ61lh2f3GM9soyTpxMZenqhcxa/BgRM2czZcq4e0IbS65dpaFHyvrX13P+0HF6
      aku4lN7Ixtc3UJaZSXtZLsmF3ax7cSWxOw7crmPMYbQOgax+dhF7P9qB180wuvlPGG0WClt7
      0s5cAODqtXyspGrqWwdZ/8ZmMi5cwKDpYd+eC6x5bTNdVaUM9HeP+KzW6chMykDT2cjJEyks
      2rSWzvwMOrVQVlLD8hc3IG4qoE5jzZxHI1j20nNGsSRl0HEjn6S8Dja8voGkA3tR9us5uesg
      wbMeHe77OzF38mDa5ChWv7kBcynU3qjh0ZVPD4dv7vxwO/NWr8JxqJGrWbXD+Y7vOED4vMeH
      QxQPfLSNyCcWEjXWlNjYDOK378YxfDrz543n0M44kg8dQOYbydJnHqWl/va0a9TceUROjyAq
      wp8dH2zj8XWrGe8j5cihJKryMriaVsmC4YV8Dez6eBeLNq/HQdRNfYfRIjnU38H+/Ymse/1Z
      OvISKaroHBnyatCy6+OjrHhpI02Zl6nruBmRpu7i8IGLzF+7ks7sJKp6TVj/ykpO7jxATWYi
      Ja0yNryymrjPd6Ae+jvfARx9/HB2sDSGtGk11NTUUpx4mcuXCzE1Fd2T3iNwLPbWppiamxMc
      NR6xSIxMYhwmfQMDMZGJmThrCiVF5fQaZLjam2PnGYBOaRydZsyLRn7XGpR3hzaCnLDJoYjE
      MkwVMioLSwidOQ2RWMLClQspLyiiV9lO7L6TiMRybgXi5Zd1MG2qP1KFBQ5SCfcEFIpNsDUX
      0dvdhpm9OyKJHK2ykdOH4qhpUNLXWIFz8HgkYhHzVixC11I54rPijvm24KgJyKVirC0VDA6B
      XKzj7JE4rpfVoLnPuiJleQVERM9EJBIzYYIXpdWdOPsHjOj7r8MvNGRE+GZjTRWXjp2korEP
      rapnxPm5M0SxoaqR9PhzpGXXYSJSc6OqloqUa1w4l4WJmZTS6l4mRnojM7PEx+9+PliDSEws
      sDKT4RU+HWVNDmDcfV5yy1hGHzKZC2YmEsIfewwPe+OIrKwqxTsiErFIxLTZ4RTmlY4Mee1p
      obqpi1P7YujTiunpuN2OgPAJmMolmCssCZ0YglhmhkSspSQ7n6lzpyGSyBjnp6C+Y/DBBSAS
      idD0338bAl8/X8ZHR/PUisfw8fV4oHJry8vR6vTkJGcSHDoWa4mOpvY+OuvKkdreFZIoEqPt
      N7o23h3aeDdjxodQcOUaBv0QZ46cYWxYKLaOzizbsIyoKSHD88Dh4xxJTilHp+6jXTfE/dag
      i547gY//3y6mPjmbppxkesx8eHxxNAqpCAt3Y+jfkN5AwtFTSFxGfv5KH7fBTtIyG1n4zAIc
      bMzAYLRQD9zRx4HhE8hJuIrBoCc/v5ZAH7t7ilE2N6Dsvp1HJB5E/RUH9fQLYO6KxUTPn46H
      21eHe3oFeDF1wXyeWBKNp48bAf6+jJ3xCItWPoG/nyeB3pZkZFUz2N/LjfL7vbjKMGhV9PQP
      UpubjK13xH3SWDA42Ey/Zoi8SxepbzeeV1vfQGpys9EbDKQk5hIaFjgy5LXPGn9Pe55at5xp
      j0Ti5GL9le24RVBUGKkXkzEMDXK9Uo2Hvew7hES6upBx5jRWbn5YW5oY12jEGPI4fe40Mk6f
      ITe/msmzp2Iiv/0SdCv07da/d4YHuvs4UJJWSUNNKXo7Px6dM56QyFASYk5SWafimY2LkYpF
      mNnaY2utAKkZ3XXFtPdLCfa3uye00cHLg1uH9gkZj7Wkl7iYS0Q9Ogc3Xz/kAy2ciU3APyIS
      BztLANzGBdGUn0bSlXyWb16Nuamxbq6et9c2NbN3YUClIjIyEAsHJ65fS6SsooWw8BBcA/wJ
      8LLm+N4TeEdMwtPDBb87P7vaAmLcvN2QmloOr1Nq5+nHUEcVKSlFBE2MwM7ZGf+xPlw8HINH
      yHhM5VL8IyKwGFJyOuYSM5YtG15u/M6+7ypNp13ihtvNlZVdfBw5vecU/lFhyE1Ghm9OnBTI
      6X3HaOwcYvKM8dwR7TkiRHHGo5O4fPQEpTdamTJnEoER48m/cI6M7HImz5lGQOR4ypMSyM2v
      JmxSOJ5jPEfcUV093AkJDyT+QAydOkuWLJ+FCLB1ccfM5FZKEUGh/pzcexSpow8TQryMbQsI
      wNfdguP7TuIV9QjhoZ5oRoS8jiFgrCvHd8cwZOFMyDjP2we+I1z1zmsheOpM9O1VnDt9jfnr
      n8He2uxhsQN0s/3dc2z+5TPfnFTgvqh6+jC1shAinB6Qh0QAAgI/DsINQ2BU88ACaK8sG94F
      8YM/fvidDpqWlAZAZmr2t85za8fAf9Ram1v/cnsjNV1v2/Dapp/88a/fKv8PEYL4IP31XcmK
      i+WTT44Of976t8+/PsP3tLvmD01LfhKnL9xelKvw4mk++MuBBxWAjtST8Vw6e214xqGjsZ7i
      worhGZimqkoqK0aGxGlVPeSkZKG8uVuLu5c7LdVVnDxwgpLiKpTNDfTfXG6uqc5oUtdpBshP
      y6Kto5fe9lZOHTxBZnohYrnZzY05QNnUSEHOdfQGjJsl1LZSV1pKZeX9w+XuLBOMqxO31FRz
      /Q53h9rr1+8x4V9PTeZ0zMXhFYkHupXkZhQweHN7np62Fgrzyrhztx47Nw8UUuMxetpbycsq
      QW8wUFFQSGOT0ZLeWN9EfXnZiP7qaKinMK/cWNZNN4a60lKqyyqH++tWutyMQob0BvqVHSiV
      fRRn5g63TT+ooSA9B2VX/4jPfQOD3Im6p4vctFzU2iG0fV1cOZPDhCkjF6/qbmka0T5VVwf5
      2cUM6Q0gVeDuZk9veytd3SqKMnLouLkqnbq3m9zUHPoH1LS13Aqj1dFU20J5XsFwP9TX1KPu
      7aamugkwUFVUNPxbW20TXZ3t5GUUortZAU2f8Xrq7lUDOhqqm2mqrKBHpWVQrSI/LQ/1zelk
      naafvNRcBjS3Z8R0Az0kxqcRNDn0wUcAmYkMuYkCsVhEW1U5+QXVVKecJyGlkoy4WK5lVFCb
      k8zZC/nDeb748xYkMinJF69hwOhCIZHJkMpkyE1k5JyNpbbDGP0ZfzgO9FqObjuMXiTlyz99
      hkEiQSqTolCYDK8MXJ11laMxyQz2tvHpX3eDtpP3fvYONU09XNy9g6q2u6Zq7ypzCPjoV7+h
      +HoD1y/GkZLbSMK+veRcb6GuOI+G1t472ixHJpcjlYgZ7O3g8qVMhvqa2fP5KVpL89iz+zya
      rib2bD8xnCct9ggtfXDgbx+SlJRH941s/v2td+no1bLrvc/QAF/84T0qajspuXyG+IuFlCVf
      4uSZLNSdDXzx0QHoa+ZXb/2WGzXtyEzkw/1VnZfFtdQSdD0N7N56htqsFN5/dxcaPXz+5y2A
      js//5wO0ejj06Tb61Bo+/d0HDBpg55+2cOtaUHc28Olf9yJCz6e//wCtQYJMJsPE5HZ022Bv
      J2np1+lrqmTblhh6Gyv58uNj6Ae62f7JwWFXi9KURD75234GDSK+/PNnGLS9fP7XPZiaKfjT
      v/yevuElFVX85e13UaoGObttG0UVHRz7/HOOHjiPSCTm5BfbqGzoIeXYYQrK20jaf5gz59IZ
      GlDy8XvbGVJ1cHjPaSRSMV/8aQug4p2Xf01BST0inYqP/rAFPUN88ecv0eu1fPjf72MQw7VL
      qbevBZEYmdx4PT2gO7QUb39PLJwCsbY0wdE3gOj5M+m+YcLFkg4KrmXiFRyOEhHNdTkwz7h1
      5dRHJjMwoGFs6LjhaCwHdw+c3J0ZM8aDmqt3HUYsZ8rMMAqLa+lt70Vua4+TmzOhEwJQNxqH
      sYTz+az9xWuYiSE/qYB+IHDSNGbOmYSit5qObg2+joqvLHMQ8AwOJXr+DFpc9WS1dlNXreTl
      /zBGPV0vvr2cu7e/Dy7NFjg5WiOztOfJZY8BavJzDpF65gamlh7U1rTTUHHbqnoLMwdXFi57
      DHVjCSVqZyZPj6T8fDJqwGVcCLPnTgUm8tkfP6NaJOKFf3sdKZCZ9jE6IDx6HtGPzwAY7i+9
      zoHqmsu0tqtQdarA145ZTy0gYrIP6cmZDLZVI/EOI2pqBFFTI1DV5FGtHMSttBK9up2KRhXB
      nubkJ15h5qo1hI2zQ914nZLGQdxcnRkbenshKpmlHY8vMlptc//nA3IudyIxN6eqopHa6lpg
      6nDa2cueInyCC1nJ6Rg0KmQ2TgROGIeXpwdu3rftDcFTpjF5eiSR/pZ8cTITzOxZ8+IKxMD2
      rCImmNggNpGTl16AGWYsWL0AayDtWh4Gc3siw7ypqqynp89o/AqaOp3HF86mIfMy3YMSqkqr
      0LTWUHX9OnZh0wifHI6ropesmwO7VGGBh7szY0MCvls8gOGenfmM2Du7Mm/VUixNxLQ23n6M
      GDdpIuaW5pz+YgumTs/fU45EKkOnG8KgH0TZ2UdvXTGXs5p59tlFtNwwXoiGu7ZNdLGT09jS
      h7+rOf0GHSZ8Pfcr825k4iH6Bw2YSoboV420ruq/YttGR3dHvCPnEjbGlpbG+0dhfRUDff0Y
      gMHudqQWTtiJlDR3DOBhr0A3NIQEEItvD9K3+uvwZ7uIXrcee3MtW/924p5ypZZ2aDuNd7zq
      wiJsXRwJCA5k2can6Wl7BNnN5SGc3JzJq2mAcXY0N3cTMcuCu7esGFIPoNbpUUj0GJDh5OJM
      yJhQoqf4MKOxBbj/i47Y0g590w2ObD/MlOWLRpyffpXxEam9uRVHZwcaW8XDjyIuPv4s2fA0
      Ir2WtjYVV3eW0q/SYm0uQ28wUJt6iYo+RxatmkpthXHzPdHNPrJ2ccI/NJRlG+bS+fhMzE31
      qM5fB0DV28/9AlAfWAAeIaGc//IwXo6bcPcyOlJJTC1xsIeoacs48uk2JHI5Ex+bj1HzBpJP
      n6a5TYVBaoezlXQ4n7uVjNNx15g5Zx57du6gyNkJRy9PFLZOaJoucWhbF9ohCbohmBDowdYv
      Y9iwNBI3Z1vmR0/j4JcHuabTM3nhU0jEcty8jCtOW9o7gqmEbb99jyX/9gvsTbhvmW5eRkOS
      3NwaO1szpq5dyJ6/bsHCxhpzW/vhNps4eNBXdpa8Qu/hPCDGxcOZqUtncWTrAfLjxfiFR+Ls
      ZoxZtXP3wEQKbjeNVWK5GW7OxneXWxu/6fo6ObhlD/39WpY8txZbmZaDW/ei08MjS5Yikspx
      d79dj1v9NXacD3G7D2Ln6IC9mw1mtvbYyI2jnZuHKyKFHVPDnNnxwTYsXTxZHhpCuJ85Oz/c
      jrmtE0vXLQTAZ0o0pXsPsPPDTFz8w/Gyl1Pt5cqdPpyuHk6c3LqHvn4Ns59ZyrgAR8q272dX
      RiKe40JwmuKBu7s9lvYaFDdXYnb1cKOvpQWtVI5WqyUt7iQmZqsZ42lsf2ddNfs/24VWL2PV
      S6s51X37hrTk6dnseH8rcrkJ81YtA0RcPRHLQGs3E+fNx95dSv2ueA7XX8dgaosBCW7exj63
      8AjGy6KMXR9ux8rViyUr5hLiIWXHBzuwUOixD7rtnWDn7oZc/H/cDtBU04Cr9/1XC34Y2PK3
      L3n57Rd+7Gr8IJReiSe9WsTMqQEUJyXgMPFxpoR58qBGz2PvfsncX77ANzs6fDf+TwvgYaex
      vgk3j79/Ia+Hlba6WmprW3H3H4OL860da25vh/qtyqhtwtbL9QeL3RUEIDCqeegtwSWpySQm
      5tzzfVdtJeWVD74To7pbOTxPLSDw0AsgITGP2bNvu9Fu/4vRMtldW0l5ZftXZRMQ+FY8oDu0
      gRP7YgkcP47DH2/DNyqCsisXGDB3ITPuBNcup1JYXMdYdxMuXKnAP8CNq8fjsPLx59qxo1xN
      SKOrH3y8HTjy6Q4y0/JQqgz4+Bqfgwc6m9n3+QFyU7MxdfKgpTiHUzEXsHXzwdPLiZrCHI7u
      iaNPJ8HDWsK1tDJqivLIzq0kLDKI7AvnOXf6CjX1XYwLMobbFSWcpVvmgr2VnLiDJ7CTD1HZ
      DpWJlygsr6Siso3r6Vn4TghCgjG21cvdht0f76UgKw+xpSPOjlY/UPcL/Ng84Aggoq+9A61h
      ELFGSV5BE/nFjXg4yBk/azZPb1hGXUERIkcv6ouNvjuV9W3oa3NoM7iw8Y3NNGRnMKDqpllt
      yvrXNzNz5oTh0g9vO8ySF5/l2Z88y4V9h4bX6Zw+w7ii2527/QE4+fmz6uWNGLraUKs7SM5t
      ZdMbm7EZqKe82Tg/HRAeTMrZRIZUbXSrxGi6lXQq+2mvrcDeP5wnF84YsVF0U30jHVU3sBkb
      ycY3nyMowOXv62GBh5oHfgSaGOZK0qlEvJ9YS9eNXORm5oi0ai4dP0VqciFmZmYYEOPlYE51
      xXVsvEJRNrdRWVhIzK6jmDo4Y1A4sHnz4+RcTeP86SvDZffrDNiYSUEkRSr95mXJbWyNQSVS
      sRhdr5LK8gpidh2lc8gMS5nR6CG39USsbifn0jWmLnj0jtwKfAPuP0XqFj6dmeGOpF++Skpy
      wYN2kcA/EQ8sgIDpMzl39CLjx7ky0FiE/dgIeurLaFXJsDEXU19t3NRg1oLpfPS7ncx6PAqf
      SVMwlw7iFzQGnV6PRNPJmZPXkCvkFGbdvsCmhPtxcN9ZUuPPYurkd9/ja/u6KC661xtU6ujL
      OA8LvAPHIB7SYWJ62/YY6mtLYpmKMS5m9y3TzUZG8uVMzh48RnvXIC1lRWTkVCGTiijIKaKx
      tIiS0h9x7wOBH4zvNA3aUF2Pu48H7XV1WLp6YiKF6pISdFJLbBQirNzckUugpqIG7zHGXSK1
      qh6KCioYGxaKuamM7rYWKiuaCAwPxeyOiPHm6iq6+hneff3uuXKVsoPKmnYCfJ1Q6eXY25rT
      UteEo6crDGoozC7CfexY7G1vbzhn0A5Q19yLl5cT6m4lKr0cfa8Sa3djuJxhaJCirELcAwNR
      93bh6uFGU2UFbV1aQsLH0d/ZhhoFjg7Cu8D/NQQ7gMCo5qGfBhUQ+CERBCAwqhEEIDCqEQQg
      MKoRBCAwqhEEIDCqEQQgMKoRBCAwqhEEIDCqEQQgMKoRBCAwqhEEIDCqEQQgMKoRBCAwqhEE
      IDCqEQQgMKoRBCAwqhEEIDCqEQQgMKoRBCAwqhEEIDCqEQQgMKr5oZZdF/jeUbP73W303/HN
      069tpCqrgklzwr51KX0tNdR1SQkKHLkqXsqla0x71LgXWW1BDlKXQNwc77+Q2P8lhBHgnwYF
      G375GkufHI9j8CRe/uVrOFgOkZmY90ClqFpqKSm7dxtZaU8j13JqQa/lZGwKLqPg4gdhBPin
      R9lQw+Ev99PW1sWGn71MS0EmKWklqHr7WfH6C+QcPc6AmRRlYyte4VMJtjPm626s4mp2Ewuf
      mg7ApCXL+OT3n6KvdGb6iuWIgZyES+QX1iA1tWbV88uJ3XeMp9ctB+DMkeM8uWLpj9Tq7w9h
      BPgnR2xqzYoX1jAr0pWCsjYs3bxZ+/Jaxvuak5FeQWtNHeGPzWfT2y9TmmXcOVLd3cqWj44z
      f8G02wWJpCx5Koyz2d1EjHPBoO7kakY9m97czOwIO07G59JQe3t91Ob6/9/e/bu0EQdgGH+j
      ScSiJE1qNVwaI0Wkbk6dC3Xo5NKte/8rnQSHlk5C14KCFhpFjHaQ0kh1qJi0/jrExIvDpXWx
      4CSN7/OZ7w5ueLibvu/NY+Tdhi9Al8vkskpISvYm1W639XX1s06jtHKpdGdaNq3Mw/h3JtEb
      7z+ufKpoajyr+klTw5nrUexgrKTHQby92zppqC8fry+OlIr6ufHtTt/rrvAFuGfWK1WNlguq
      7dQUXbZuvObFzCu9eftaH+be/fM5qaExaX9TX1bXNT+7qJfTzzX8oEfLS2v6uPBejXuyMsXh
      uF3m4vS3js57OidVt7RfO1RQHlH4q65malAKG/q+e6iJZyUdh5EUnilfDpRUfNL2o2z/3/v3
      aj8UlJ8o8efhzXPtHZyp2Nkmji6b2l6rqvB0XPncgKLWhbYqVZUmJxUe1VUo/r8TtLdFALDG
      LxCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsXQGlgExcEFAfuQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death Delta' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death Omicron' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delta Wave End' width='192'>
      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
      dOveAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delta Wave Start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dorm' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAduUlEQVR4nO2dWWwj25nff7WwWFwkUqKohdop9Xq7r6+vYY8dY5KZBIEzA0wSIDDyFsxL
      EuRhnpKHIAgC5yFAgADBPOUhCPIyQAADQZ6CYOAZe4KZGB5f29f27U2thdQukpK4r7XmgWqp
      u8m6arZJLc3zAxpSn0NV/c85/FedqvrqO5Lrui4CwZCiApRbJggbCIYQFQBXfP8Fw4l83QIE
      g8d1HdZerHGw/gX7J2XWX77s+MzOxksalvNGmdUo89lPP8d2XX76Vz/is89+jmlfHCpPT04G
      rn3QqNctQDB4JCS2U5uMRzTs4xq1lkXpJIMhBRgLSuROK9hmg5NqmcWVR1in2zzbzTOh10kd
      KHwNl3ypxjcex/npL58RdioYrsqvfv4Tfu8P/gE76W3C41N88vj+dTe1Z8QZYBiQJEYCGk1p
      hNrxJtGJOL/61RN8qsovfvFz/H4VyzB4vpYmHPDzbG2T2bEINSfA8soKytlmWi0Dp1FkL1tg
      Zz/D3PwiQeuUzcM8inI7v0qS67puuWmKa4APnGJ2n7yp4layxJcekk09w1JHiAZcMvkasWiU
      cFjDlEJE/BYvNve5m5yhauhMxcL8+uc/QQqMcX91nqdPXzI6FkNzG/hG4uT2thibWWJhduq6
      m9kzAzNAOrXFcnKlz1sVCPrLQK4Bnj97yg//7Af803/2zwexeYGgb/RkgHzukMzBHlo0QbN8
      ii84ii61KNdaJBJTHBydMDo2wcOPHpHNZtGDoUHpFgj6Qk9XLuOTCUKjY8RHfUzOruCXXGw0
      VhZn2UtnuPv4MW6rPiitAkHf6ckAjlHFkkOEQmGyBynqpg1Wg/TuAdOJcTZfvMBRtEFpFQj6
      Tk9TIMkXJLkUQpIkHj76CElSkHCxHRdFkZmYtlEU5fINCQQ3hN4MIF2cMBTl1Z9KqGfFqiqe
      qwluF7fz6YVA0Cdu/yHbKCG1TjuKXTUAgZlrECS4Tdx6A8j5z1F2vt9R7kQ+wr7/R9egSHCb
      EFMgwVAjDCAYanoygNWqsfFyjVqjweaL5+wfZimdZNjcTGNZLTbXnlOsNAalVSDoOz1dA6Q3
      N0H1Y7caFKo1FuIznBSOiUdDrD99ydyDhxzvbtOqh8keHWGZxqB0n6PYNt2ePLiueyX7F9xu
      ejKAg8zy8gI720d89aufsrH2Ak3TePVCpYuLCyiycvZATOq/4reQvnQXg9+/4HbTkwGSySXS
      qV2m5+bYTW8SjU8TUm1yxTp3H91ne2uT+OwykbDOxOQkqs83KN3nyHL3J8+SJF3J/gW3m54M
      4AuMcPd++7W30Tv3zstHY+2fq/ce9E+ZQHAF3PrnAJlshL3PVjvKI4sJVm/fK6qCK+bWG6Ba
      0zk4jHWUm+EROm0hELyJeA4gGGqEAQRDjTCAYKgRBhAMNcIAgqGmNwO4Die5DKblUCme0miZ
      WEaDfKGE67rkT3JYjkixJbg99HQbdD+9iSlpaFqezHEZxzpBlSw0n0rlNAfBEU630ty5kxyU
      XoGgr/RkgEqlxtiEzu72LvG5VerFY1xUJsZH2Ng44O7KKpmtFM+fPeXpF7/mW9/85qB0n2MZ
      3QPeHMehWa8NfP+C201PBphJTHGUyxNPzFPIbKOFx9Alg/RBjuT9RbaePmUsnmB5deXKEmOp
      Wvc0LLIsi8RcgkvpyQDReIJoPAHA1GT8vDxx9vPR4/G+CRMIrgJxF0gw1AgDCIYaYQDBUCMM
      IBhqhAEEQ40wgGCoEQYQDDXCAIKhpqcHYYXcIbl8mcT8HAepNOHYJLpkcFKqs7w0R3orRWxm
      ifj4yKD0CgR9pScD1Oo1XMfGMU2apknQdSnXW8xNRlh/tkHyk6+QTW9xfLQjYoEEt4KeDDA+
      McOUYrC1U+Teg4/Y3tpAVRWazSZ+3UejXsey3StdJE/EAgl+E3q6BpAlm93DIsmVOU6z+0zN
      LTI3N0Pd0Vh9cJ/6SYb55eVBaRUI+k5PZwA9FGFlJQLA3NLFItgL4Wj757JYGFtwuxB3gQRD
      jTCAYKgRBhAMNcIAgqFGGEAw1AgDCIYaYQDBUNOTAZrVEhsv16jUW+QOdylVGzRrJfYOMriO
      w952iqZpD0qrQNB3ejLAwd4uPj2Ealep2z6y+zvs7R2i02Bz7QX6+CS7qdSgtAoEfaenJ8HL
      dx/Sqp2wvrHP1PwSbquGCwQCATKZEsFQiIoiicRYgltDTwYonWbJnuRZWF3h9HAH/0gMXTLY
      yxa583CV9IunxGYWScZGP6xgOKsOThejKX5QAv3Zh+Ba6MkAY5MJxibbabDGRj86Lz/LlcWD
      R4/7p+wKUV78MZJZ6ii3k/8EN7yMtPO/kLI/7qh3Z7+Du/gPr0KiYEDc+jXCLsUxkGp7Xavc
      kXbwntTMIRn5zg/YLQB++etldn9mdlSv/q05Hi72T6rg6vnwDdDKoz7/Tx3FLjLWb/2XaxAk
      uEl8+AZ4B1qGCs3OrpAdWaw1/4EjDAD86P8+olHsvGP0rbkw8bFrECS4MsSTYMFQ88GfARxH
      olLVOyskmS6lgiHjgzdAva7zoz//Ske5JEv8wd++BkGCG4WYAgmGmp7PAM8+/xmLDx6SfrnB
      2OQMilWlUG6ysJhgZ3ufsckEianYILQKBH2nt8xw2T0kXxDTsJBkiVarhWy7LM7G2Vzb5u7X
      PiGTSvH85OjGxAK1mo3uf+hyHivkut2XdjVbLZr1GrZlda23TVPEG91yejJAo2VSKx1zUhgh
      MbfA0cEBmk+mUCwSiYY4yR1jutKNSoxl1bp/eZE41ydJ3e/2+/x+9GAIRe3eTYrPJ5Jv3XJ6
      MkBiIUl8ehZJUSme5FhavYMm25SqLWLjUU5zWWaSIjGW4PbQ8zWAT/MDMDE1c1424Q+elU33
      SZZAcDWIu0CCoUYYQDDUCAMIhhphAMFQIwwgGGqEAQRDjTCAYKjp2QBHu9u0TIv99CbHpyUq
      +Ryp1A62ZbC1vka51hqEToFgIPT0IKxVzXNwkEX2+0GPUjrNUsJlIhpi/dlLZu7dI7e3gz0x
      QSGf94yh6Seu43Qvd11sy8K2PTS4XOjrHgqEYzvYluW9D8e5kjYKBkdPBtjf28exG5zmC0TH
      Z85iaCRkWcZxHGRZQUKiUa9Tr9VwnMGnSfQKZANwHNvzy/uqHsD1cIDrOO1teOzDdd0raaNg
      cPRkgJUHHzNdKqAEwmR3U4QicXSpRbZQ596j+6Q315iYTTI2GmB2fv48bGKQyIrStVySJHya
      H9XXPVgO6SKswysYTvGp+DS/5z5kRbmSNgoGR8+xQKFI+y3xxdV752XRePvnnQcfdfsTgeDG
      Iu4CCYYaYQDBUCMMIBhqPK8BNp/+DDc0wUggwvT0+FVqEgiuDE8DZDJZmvYhkfidazWAVF4H
      ozNzsxuah8DNeAFHKjxB2f4fHeVuIIF9/4+uQZHgXfE0QCKRYC11RHJ16QrldCIf/Rly8UlH
      ub3wXZwbYoBSUeXg85GOcj0WZPn+NQgSvDOeBvDpIRYXJkmndol9Ikbxy6hWdTY2ZzrKI/Vx
      xBvSNxvPi+Dc4R7b6X0mJuNXqUcguFK6ngFe/uon7GTaC0aY1sXCEOXTLEfZLKFInOOjQ+KJ
      OdxGgVKtxWximv3DHKPjkyzOTV2NeoHgN6SrAe598i1OT08pVKo0mxexLuHRUeTjY5AUPvr4
      MXvbO8iyj+X5cTY3Drj79a+S2dri+bPjviXGCth219OUaRqY9dqNSIxltrpHwIqF+m4+ntcA
      E4lF6ql1cC7OAMVCAdeVcKwWO1tbOIpGWHVI72dZvjvP1pMnROPTLK+u9C0xllccjs+noQRD
      NyIxls/fPR6orwv1CQZC15HdePIZBycN7n7l28zNXkxnxicTjJ8tkvc6s2c/H0UnBiJSIBgU
      XS+CVx5+jfvJGX70v7/PL55tX7EkgeDq6HoG2H75a3JVl+/+4b8gpHuEE18RXzxdJL/ZGdOf
      /DsxZjvvPAoEPdHVAMmHn5K8aiUeVKs6hWK4o7zZ9F2DmvfDNRvU/+Lfdq0L/s6/R9I62ye4
      Gj74FWJuApal8MO/eNS17jvfVvFf70l2qBHRoIKhRpwBbghy9i/BKHaUO7FPITh3DYqGA2GA
      G8LBL1/SOj3oKJ/49jLhJWGAQSEMcEPY2JqmuN85HJ9+FERcIg+OngxwEQs0Sfk0iy8UJSC1
      KFabzM3NsLefIRqbYn52clB6BYK+0pMBwqOjGNvbqHqNWCJJo5jDcBWSC9Osr+9z/+tf5Whr
      i+fPcn2LBXLs7nl3LNOgeUtigayW2bUeoNVo4Ere+YtMwxDxRAOkJwNUKjViU5OUSw3yzX2Q
      FDTJ5OCowcRkhN1UGllS+7pInlcskOrT0G9JLJApdTcpgD8QwB/UkeTuN+R8mibiiQZITwYI
      jYwiqRrTiRGMZh1F05FxaBoWwYBOvVZFD4oZq+D20JMBVJ/G6FmmtYujkkJIbT+VDYU7XwsU
      CG4y4kGYYKgRBhAMNcIAgqFGGEAw1IgnwbcFo4DUJVbIVcOgi8wd74swwC1Bzv4VyuH/6Sh3
      Jr6JvfKHV67nQ0EY4JawsTlN+v990lE+8/EiH61cg6BBYdXpumaVrIPc/aHob0JPBnCsFjs7
      B8wtLZLZSSPpI0yOBTkuNkhMT3C4t0s8sYCmikuLfmOYKvV65xNnw/iwjmGf/bf/SbNY7ih/
      /I//PmPLC33fX0/f1FqtzvTUCOmNFLlClbGxKDvbe/jsKltra6ij46S3Un0XKRgeypUgxVKo
      459p9f/oDz2eAXwK7BwUSa4msYwmWxsbBIM6oWCITKZMYnSE+kmO58+eimA4+hsMZ1vdt2Hb
      1gcVLOfZD2dj0W96MkAum0UCyqUi+eMcgZEIYc1mN5PnzoMk6edPiU3PszwRFcFw9DcYTlG7
      JwFQFPWDCpbz7Iezseg3PRlgYeUiS3QsFjv/ffIsM9bDR4/7o0oguCI+rCsowQdP+oc/IvtF
      53oRM1/7lMW/+ds9b08YQHCrKFd0crnRjvKRqv5e2xP3KwVDjTCAYKgRUyDB1WEUUVJ/0rXq
      uhYTFAYQXBmWYXPwRbazQoLZa1qGThhAcGW0Wj5+8cvugUuz371iMWeIawDBUPMeibEy+PQo
      1XIenz6CLreo1g2mp+IcHRcIR8ZJLs5evjGB4AbQW2Ks6DjK8QlBXSY8ukq9mMNBZ2Vp8q3E
      WCIW6HUNIhaojedY8NpYXBIL5DkWlvle/dCTAVIvvqApBRjTdA72N9tnAKnF1naZxHyc9SdP
      CEfGeXgFi+SJWKAzDbcoFshudD+YwWtjcUkskOdYqL736oeeDLD66Gvnv8cmOl/Dm5wRWYwF
      twtxESwYasRtUEHfkEovkU/+uqPcDSZwZv7uNSi6HGEAQd9o5PPUnj3vKPfFLUZv6IqewgCC
      vnGUjfLkJ52PdON3EnzrW9cg6B0Q1wCCoUYYQDDUiCnQh0LzpL3S5NsoOs7c71+9nluCMMAH
      wumRxY//a6mj3D9i8J1/cw2Cbgk9TYEcy+Tg8Ahcm/T6GvuHWarFU9Lbe9i2SXpznWrD+6mn
      QHDT6OkM0Go2yOdPmR4Pk8uXuDM5SyZ7SCwSYOPZGpOrdzna22F2NkG9VvOM4+kFrzgd13Vx
      bNu7nnYckeMRWwKvxRl13wSuc8k+zjQ4jlf9Kw3e/eA6zpf206t9cKmGd2jngHE9+6EHjV7t
      fNVPnv3w5f3oRU8GCIRH0TUfsj/MN37rG6w9fYY/4Mfn82FZDpqmocgSuVyWbCaDZXoHgb0r
      rtu90xzbxjJNz0a7joNlmp5BZLic63M9HGBbFpZpegZoXWjwiDdyXSzTxPLSQFuDbMqeJnul
      wctE5+301EBfxuFd8NR41g+eY8E7jIX9qh88xuKsH3qlJwOUTrPUa1VyxznK+Tyh8QnCqs3B
      SZV7j+6RevmUibkksUiI5ZUVNP393tR/HdkjIaqiqmi67hkcJcsymq5jaN0jNZE41+cVDKdq
      PjRd9wzIe6VB9XUPVJNkCU3XkVzvmabP729/xkuD75UGj3YqCpqu4/N1Dwp8vZ2D5rKxMDXv
      6fHFWHTvK9WnfflYKOp7tbMnA0RiU3wlNgXA1OTUefn42a/3PhKJsW4y6uf/GtzOo6T18F9B
      YAZl878jlZ511j/4lxBMXIXEK0fcBRoi/vwHSRyrc5ryjXmNcADyJyqto84zyfiq9MF+UT7U
      dgm6UK3pXQ3gOO1px9p6guyLzvrf+aaf0cjA5V0L4kmwYKgRBhAMNcIAgqFGGEAw1Fz/RXD9
      sHu5Hge5+/11wTXRyoPd7Cz3jYIvfPV6+kDPBjAMA03TaDZqKD4dGYeWYREI6DRqNfRgCFnu
      /lCnq4Cn/wHJ7bzzYD7+dx/svefbirLzfeTCrzvK7YV/dGNfebyMngxQK53ydH2bTx/dIZU+
      QJIUNMnEcV2CgSA1G2QUVlcWB6VXIOgrPRkgFIkxHjnBaDWITc7RKOZwUJidGGF9/eC9EmN5
      nTiNVhMH74A6kRjrTMNZYizDQwOu+1rCqO7tNJoNmnXNs69brSbNeo2AbXe9aLQMA6NewzK6
      a3Rs+8vHgluSGKt0muU4myU6NsbJUQotFCEgGaR2MyytzrHx5AmR2FRfEmNpfh2CIZEY6x0T
      Y2n+SvcdSNJr49C9nZoeaE9dPfra79fRgyF+9vk9si86420e/L0FkoshVK27RllR0IOh258Y
      KxKb4m/8djvwJx6fPC9/lQ4rOt6ZLEvw4eA4MrbdaRLHefdrvpuGuA0qGGqEAQRDjTCAYKgR
      BhAMNdf+JPjp8wXcLq/zJe/68AevQZBgqLh2A2xuTuPYnfd+5wwf3W8uCgTeVA/3yfzsxx3l
      2miUhd/9Tkf5tRtAIOgnlbzN87+ud5SPTvtZ+N3OzwsDCIYL1wX7wiDvZwDXYv3FS4LRCUKq
      Ta5YJ7k8R2pjg/jsCuMRMXkX3Ewcy2T9T/74/P/vZQDbaFKpNxiJKRTKZRKxMC+fvGTp44/J
      bW9RKahsp1IY3/72pdvyyEmFabba8UAeuWZs28JoNT1jQxzHwWg1MQ2vGJl2vBF4xwJZptnW
      4BEj80qDVz4a13Hb9R4xMgCm0UJSvTXYlnWmwaud9pdqeL2dXlimgdFqesfhnNV75eR597Hw
      Dgnp21h4xEy5bnssbMNifeMiyvi9DCCpfh5//BW21l/i03xYloWqypiGgeO4TE5MMBGPe8av
      vAuKoqKoPs88MbIso6g+z7xB0lm9V+wIcK5P8oiRURSlrcEjPkWW2/VeMTRIEorqw1W9bN7O
      pdNuZ3cN5/vw0CBJ8iUauHQcZOXLNSiX1F86Fmf98G5j4VH/aiwu+z549QNtDbzl4fe8BnA5
      3NtmfHqWkGpzXKxz56P77KZSTM8tEw5qhEdGUDzFvC6r+1lAlhUURfHsdEmS2/Ue7x5ItDvN
      a1CQuNDn0euSLF+iQTrbh9eXs70Px0sDF+30QpLb+8Bj4C/TAFw6DvJZO/myL/hvMha9aPTa
      h3zZPtr1smc/tffhym864L0MICsaSyt3z/8fjrZ/Lt+59z6bEwiuDfEkWDDUDPY2qGOC2SVO
      XZJBiw501wLBuzBQA0jVNOqL/9xR7vqiWJ/+x0HuWiB4J8QUSDDU9M0ArutSODnG8lgkQSC4
      ifTNAOXsLuWWRXpru1+bFAgGTt8MUK9ZTCamUSXvZXAEgptG3y6CY9PjrD99ylh85rysWAry
      9C8fdnxWGwnz9U/7tWeB4P3pmwG00BiPHo+9UWaaKqf5kY7P6pYIlhPcDCTXdd1y0/QMSnsf
      nj97yg/+9E95/PhjjFpnIJYkS0iawv7+HomJBN2CIfzhAC9frrGymMTusqiDT9fY2Nrgzsod
      zGZnkJWsKhxkDpiZSYDZbVomoY8GWXvxnOX55a6BYFpIZ339JSvLK9hGZ6CX6vexmdrk7p27
      GPXOoDtZkak028m9RvTuKcD0kSBray9ILiS7Bnr5An42NtdZTa52TbCl+FS2tre4e/eeZ1/L
      fpXdnR1mp2a7rrJ43tdLK9hmZzsvqz8fi9U7mF2WyZVVhaPcEfH4JLJHaiB9NPSOY7GK3SW4
      8F3GomY0MFotIsHR8/KBGABgb3eX+YUFz3rTNDk9OWF6ZsbzM5dt47L6zNERsVgMn0fyrH7s
      47L6crmE67hEot4P/gatwbIsjnM5ZhLeuVYHrSGXzRKJRvF7JBG7Cg2VSgXLMhkbGz8vG5gB
      AOrlPPuHWaZmF8hn9ghEJpmeHH/jM7XSKfuHOabnl4iEAx3byGd2cQMT+N06h0fHJJZXCesX
      0Y3NWolcoU4iPkoqvUM8scTY6MUUq1Ursbt/SGx6Hquap+n6WJh703TNapG9gyPGp+aJRTuP
      1OXTDA1XZywok949ZH55laD/YvZoNmscZPPMxKPs7h0gqTqrK0vn9Varxvb2HqMT00xEAmzv
      HpFMXtS7js1OagPJP8p0bITMaZnF+dmLetdhN7VBtWFy5/5DNFXmOJcjPnmRnMw2m2zvZVhJ
      LmHWSxzmmyzOXSxk6JhN0ultgtE4YZ9D1ZCZmYq90c6DnU2ajsZkNEA2XyGZXEZ+LTgtvf4M
      OTDG4nzbSG9raNbK5ApVZifHSKd3GBmfZCp+Md6OZZDa3mNlJcleeh1ZjzKXuNDo2iY76RRK
      MMp4UOXouMhiMolPudDgOja7qU0kfbRjHM8+QXZ/h5ops7y00BFb5zo2W1spkqurFI+PBvsg
      TAuMkJiKcrCdQhudppA77DBaKX+MjYzP55HyDptyrYEeijA9OUIhX32j3kGhWSuR2T9gNnmH
      o730m3/vDzKbmKJwmiWd3sN1O1ei1QJhRkdClIrFrhokWaFSKZM5yrKcnCdzkHmj3nKg1ajh
      D46wvDiL+taSpZLiZ35+jlIhz8HuLrXGWzkyJZnx2AS1UgnLlWjW3wwfkSSZxZV7BPwa6tmX
      IZd7U4Np2ZitBq7rsLN3ROutbSCrzC8sUCkUkBQf1Uqho52TM/PY9QrZk1NsW8GwX+8pi/xp
      Cd9rS8K+rcFBplErg+JjfmGeUuHNfViWTctogVWi6Uao53O8MaGSFBLzC9RKRVJbm2drBr81
      WpJEYn6RernU9aDtOhaluoXPrlPtMmV0LJOWYeC6FqnN9GANUCudclJ1uf/wPmYlR7XL/DA+
      t8LdpWn29o66biMUbh+RK4UcxabK3MybU4lgKIwkSUzPz3GU3sK037S8UStxdFxhaTHByFgc
      GmWMt6aYruuiaX4sj5dnQqHwecS047odIbuB11LCHx1mmJ6ZfqPeMWps72dZXpjmtFDmNHtE
      03h9Muwiyyq4Fv5g+I2j7isaxSza6CSyJOG6TkfYrx4IoSgyrUqear3B4VGmrfUVtkFqe5+l
      leU32vO6hr3tLaaXkkiOiyY7mK8nK3AkPv76NyieZNsHEcdua36NYOhMu9UkvXPI8sryG/Wa
      HkBTFVAjBKQKhUrjTR2OxXZqm6WVFRQtwPRYkOP8W0Z2HdJbKZZWV7tGsUuSSjSkkTnOd+1H
      RdMJnJ29AyNjKN/73ve+17IGc+++XDilVqshqzrNRpWZ+WUco4llGaC0V5VvVArsHeaYXZhH
      kywqDROj2TybKzrsbu/QaDSQJYlmvYaq6Zimdf6Z48NdSuUq/kCIeq3GQnKFVqOdLdnv91Mt
      FajUakhqEF0xsX0hdMnFcQwsfKiKRLNaIps7ZWJqhoCmUKk1XtPgcrCbplqtMTM3z8HeAbPz
      szQbDYxW+zP53CHFYhlfYARN0xgJB6mUy1hGC8Wn0aiUKNdqOJKf1TsrRCIRFMfGwcawQFVc
      Dvf20Uei2I0SpVIFvx7AtN1zHbWGQTwWRZIkMntpwrFpXNM478ta8Zh8vogWjpFcXiASGcUx
      TWzLwJV9WI0KhXIV23GpFo6pVGvoeggHh1bLQtMkjo9yNJoGsYkotWaLsaAf03FotUw0n8xe
      OkVgdJzRkRA7Wy+Zmk9iNOvnfX1ytEepXEFComG0cFwJHOu8vl7Oc3KSx5V92K0a8cQCsmXi
      OAYmPrAb5PNFWpbD9ESEbL7G9ESElu3Qqjfw+/04ZoOT4wItyyYSGaVaLmO0Wmia1n5fQYJq
      uUggGic2Nkq9XMZ1TUxHwafItGolsrkTLEdhLOwb7DWAQHDTEcFwgqFGGEAw1AgDCIaa/w9r
      ijYsxkQWzgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fully Vaccinated ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fully Vaccinated Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy915Ml153n9znpM683Vbds+240GpYgQIIAOEOCXA45nB3t7Ep6kELaUYRC
      qxi9KGJDz9o/QK8KPcjEhiJk1kxsxGp3RtRwSM5wAJIgAcI0PNC2fF1v0mcePWTf22W7q7qr
      DZr4RnTfuvfmPXky8/c75+d/4s/+7M/ke++9x0FhWRaNRuPAx3+J+4s0TQGI4xhFUdjc3CQM
      wz2PNQwDRVEAEEJQq9WQUqJp2n2b74OG9t577/Hzn//8wD9wHIeTJ0/ewyk9WojSiNFwRJqk
      2I6NMAQylghTwUh0FKEcyXnSNCWKIjY3NzFNE8dxiOMYgFarhed5k2Pz+TymaaIoCmmaous6
      Qgh6vR4AJ06cQAhxJPN62PG7w+r3EVJKgjQgDmLUKZ2Zby0yWh/S/u0mx189zfpvV5l+Zoq1
      XyyjRxpqqKBrOgJxR4Tn+z6u69JsNomiCMh26kqlgu/7E+LXdZ18Po9lWYxGI/r9/q6xCoUC
      vu9jWdbvBBN8yQBHjDRNcRMX81wOIhXpS4K2T+2xKaJ+Joo0nptFdwyOf/80SZSw8bNlem4f
      NVVxsNHUgz+WMcEPh0NyuRxRFJGmKZ7n0Ww2yefzk2NVVWUwGNDpdPYdz/d9rl27Ri6Xo1wu
      k8vlHmlG+JIBjhDZyh+izhq4G0PmXzqGBFZfu05hsUjjuVncTZfcTEaUfs9n841VKo/XmZnP
      E3R9+j9tHeqcqqqi6zqNRoNut4uqqhSLRXzfp91ubyN23/dvO96YoXq9HoPBgBMnTmDb9qHm
      9EXClwxwBIiSCIFAVVRCKyJfLDDzjfnJyll9YgoUgVCVCfEDmAWD+VePo6iZHmBVbDaLMelQ
      YgrjtiuvlBIpJdeuXaNcLjMajfA8j1arRbVaJZ/PEwTBHV+XlJIkSe74918EHI0G9juOyIiR
      8wphGlJ+vErtyeltxJufLUyIfCuEouz6vPGNOQrfqBDvILw0TZFSAhlhfvbZZxOlNQxDlpaW
      qFQqk/O22+3J8XcCRVFoNBrbRKhHEV/uAHcBKSV+GmCfylF+osZqukTv8w56TseZPjjhCCEm
      xGrkDLz1EcqNz+I4ZjQasbm5SaPRQNM0bNtGCMHGxgaO41Cv11leXgYyC89gMAC4paw/hqZp
      mKaJpmnEcYyUklqtRj6fn5hIH2V8yQB3iDiNYV4luB4QLEdYsw7FYyVGG0M6H7ZJopTCfPGW
      Y+wl4kRuhHdxiCF0lpaWtllqhsMhQgh0XccwDPr9PtevX+fYsWMsLCzQarWIogjLsvB9/7Y7
      QLlcZm5ubs/jfN9HCIFlWYRhiGmaB7wzXyx8yQCHhJSSkeYRaREnnj+DMWsRdD28jkf1TI38
      XBGZSmIvvuU4Y+LfSnxBP6D3qyZGqtPpdDAMY9fvbNsmiiJqtRr9fh/f97l69SonTpxgeXl5
      smvcCoqiMD+f6SgrKyvbmKxarVKpVLh8+TLT09PYto3rupimOdEJHiVH2aNzJfcBUkp8M6Bw
      vkSukUcIQXGhBAulbccJRaDn9NuO5TZH2FWHaBiy9LOr2NLEwqLZarKxscH09PQ28UhVVdbW
      1nAcZ9tYQRAwGo22iT+3gmEYhGHI+vr6ts81TaNYLG4bQ0pJuVwmTVNGoxErKysUi0UqlQqW
      Zd32XA87vmSAQyLoBURvx4SnQoKhz/Qzsxi53Sv1GGmcItS9HVzhMKR5cZ3gukeumENJVIQm
      KBaLbGxs0Gw2URRlYokZjUYkScJgMKBSqWwba2Nj48D2et/3d5lEa7Xa5LzD4RDIdorx6i+E
      YDAYEMcx7XabXq/HiRMnvvBM8CUDHBAuHkIKynYJN/VQFIWFl44DkAQxSZzuYoRwENC8uMHs
      1+dhD+K0KjaDS13qL8xglk1Gv8isOq7rAjfjesbYGs6wU8HdL97noIjjmOvXr0/EJ0VRyOfz
      LC8vkyQJtm1PrE4ASZIwHA6/8Azw6Kv5RwApJalMMR9zCJQQVVURhiCNU/y2x8rfXifoeDQ/
      2CAcZnZ3v+Ox9psVGs/NIfawpvSudhhc6zH3zWNotsbwlz1UodLv9x+I46nX623THarVKv1+
      H8/zCMNwG/FDpovs3IW+iPhyBzgAQjtCLRmUTpZptzYRTcng4x7D631UVSX0Q/y2R36+iJHL
      rCWJn2AVLdI4RdEVhLJ9ByjMF1GOq0SjEPfiAB2N5eVl+v0+x44dm1hyHgQURcG27YlpdSdK
      pRIzMzOoqnqfZ3b0+HIHuA2klERxTO1CHdXSyJ0tgATbsFj45nGsqs3UUw3qTzbwOh7tT5qk
      Ucrw4x7u0pCNN1cIh7vFE0VTSZOUzhtNzMTYFpx27dq1B0b8kPkSNjY2dolgkCnK09PTj4Ql
      SEr55Q5wOwRhwCgYsnlxnflvHCM3U6BrtTBdg80freKHPuXnaribI5pvrFE+W2Xzr1bot/vk
      zhaYfWFh1+qfRJlS27vYRu+reL6372r7IBCG4SSEIp/Po+v6xPlm2/ae5tkvGuIkptaofMkA
      t0NCyvwrx7GnbpoeG68usPbaEkooKCR5/DeHKIpCxSoTr0ZoUzrHXjmN7uiwh2FGURWWf3kd
      fVOgS53V1dWHKuZm6+4zHGbXFkURqqpSLpfv61yklPi+Pwn6O6pQbVVRaa61v2SAvZAkCULc
      MF2a0L/aBSHJzxazbdPSsGo2XtfDG/mUXqwSdkNGnw9ofHsOo7C/13S0OSTxE0RPYmCSpMnE
      urPV5v+wwHEcDMMgTVMKhcJ9P3+SJLiui+d5TE1N4Xke7XYbx3EoFovb9JAkSVhbW2Nubu62
      DCKEQNf0LxlgL8T1FBIwehoiryBSgWbddGxJKak9NUXn8za9VpvQC6k9WcesWmz+ao3Zby2i
      aNvVq4kzS1fpfNJCdxWELlBVldOnTxNFEe12e2KDf1hQr9cZDAYUCgVKpdLtf3BEGO+I47yG
      OI7xfZ8wDJFS0u12abVanD59ekLsQghmZ2cPtTt8qQTvAbmeENwwZxLCzItzCHXHTVUE5dNV
      Ij9Cs3UkkJ8vkKqSNE5Ik+0KpLs25OpffU4apahSxdAyOXocb1MoFND1W3uPHwTGjrf7cZ4w
      DCfOtk6nw2effUaappimSa1WQ9O0bTukYWwPGVcU5dABfF8ywB4wdRMnzORM09O5+qNLkGZe
      3a0PQCYSvWaw8tfXCHoZw9SenGLll0u4G9lKHvR9wlGIVbMpnarQ/sk6ZlPbc5V6GDOver0e
      586du+er/3A4ZHl5GcuyuHbt2iSmSVEUFhcXMQxjm5/CcRwWFhbu+ry/8yJQkiQEIkTVVIxE
      n8j+YzOfEAIzb7Lx2zX81RHOyQKN5+bQTA1FUzj+907T/bxN78MW5otz5KbzOFO5bOww5tpP
      LyP9FFMzsTDJWXunGAZBcKDw5QeFe82cnufhui7Ly8v4vk+tVkMIwfr6+kTMqVQqDAYDkiSh
      XC4fSbj27zwDhETUvzODUBU2/3IZUzG3KVaKomC2ddREoNTzSCnxWi6FuSKRF6GogmDTw10Z
      UWi6WFU7i3oQgv5SnziMSYMEq2Kju/o2QhpHV/q+T6vVeugUYGCSY6woyj1lgmKxiOd5jEYj
      IFsQpJQTsahcLiOEmLweVa7C7zwDGELn+l9cZuaVeYzzDlEzRHSyXSBNU1RVRVEUYidl7jvH
      tukCzQ82cJcGpKlEEyprry0jDcmJ751BUQW6o1M+USFo+ig9EMZ2AhoOh2xsbBCG4Z5OpwcN
      y7I4derUfbFOmaaJZVmTOKh+vz8p27K8vMz8/DyFQmGX93mcKXenXunfGQaQUmY3a04gN1J0
      mV26qqgU1Dybb69z4odn8Dse/fc7yI0E65k8/kcjjFiHbkrzgw0qZ6sIVQEJUT/ALNrMfXOB
      JE7pX+mCwsTxZRRMZp6fR6aS9V+vkKxksfRpmtLpdOh0OqRp+lASP2QlUuI4niwC9xJjKw/A
      1NQUrutOdgAhBEmSIKXctgvFcXzXHunfGSU4VCM4p1E4X0Y5tt2akNQkhdMlYi/CqthoFQOB
      wKiYFJ6vEBUSbNPG/2yE3/UZrvRpfbTJ8MqA4ukySZzSu9Kh9vgU5ZPVyUMycgZIWHtzhXQ5
      npQluXz58iR7a1yF4WHFuGjWvYYQgkajgRCCUqnE7OzspHLd2bNnSdOUZrO57TdHEY7xO7ED
      SCkhkoQfujQ/GKIoKrZ+M4xXH6i47T6Di12sRYfCiRLJpwHdt1tMvzLH0O4RtkIszcRfchlu
      DIgGITndYbjap/XxBlbFRkq5y/6fhDGJG2OpGSENh8MHGudzGJimSZIkk+px9xK6rqNpGnNz
      cxiGMVGGIWMOx3Ho9/sMh8MjTdR/5BkgTmLCYow6EFiP50gVSfipt+0YDY28lieKI+LrEcZT
      Jn09JW6HjFYHpG6KObY5r0BJFhC2IDESgqsBQkD163W8tks4DCkfz8KE3fUR3sYIRhJNZLe6
      VCoxGAwe+pUfbtrV70fU59j6ZpomV65cATL5fqz0GobBYDDAdV0MwziyeKRHWgSSUqIqKkoo
      EDMalSfqqLqKGt+8bDd1SdIs9EHmQFqC1l+uYkQajubQf7ODUTdJ5iCMM2U1SjLiTaYkUz+c
      Q6Ypw/UBnU9bGDljIl6lSUL0oU8+diZihOM4nDp1apu7/mGMq9d1Hdd1uXr16mQXuF/nnZ6e
      plQqoSjKRARTVRUhBL7v31Wto514JHeAJElI0gTfDrESEysy8dZ9hst9km6Eqmwxc2oqgRJh
      RwpGoGOgI/SbMq8pDOJ+jCRFRSEIAwovV3Hf6JNsxghVoNQ02u9sUrlQy1ImhyH5uSKxmylp
      O02fiqJQKpXQdR1FUdA07aHzAaRpSr/fnxTKvV8lUlRVpdfrMRqNJrZ/yMyxc3NzkxKQR4VH
      jgFSmSKPKxRPVzBaLsH7I9I0RUtU/DeGqIqK2MIAaqgQlyJiP0HfoVRJKRGJIFoJcGwHNJBI
      uu+2sIVJHMPG22sc/+5pgp6PntPpft5htOHS/rCJM7Iwjd2BcVJKhsPhJP7nYbT/J0lCkiQs
      LS1RLpfv2y41LvsSRdE2s6eu6+i6PqlqfVR45BggchKmn5klTSUysfCDIaEaoinapOhsFEUT
      b6+u6agDdXesD+AHAVElpnSigvv5ANM3sirOvkJSkjRenkcxVBBgli1kKqk+Vs8K5G6M2Hxj
      DSXOKj+PMTbpra+vP/R6gKZp5PN5ut3ufRXTpqam9s2IO+qd6JFiAC/xKX+lTuTFrP1qidqF
      rKxIoqbILeH2cSFFxKDF2eXHMgYBBgbtUYdUlaixgqWaEEvsuRy5YwVW/uIqhmPiDl1UodH8
      aIPCQgkzb+J1vCwTbH1A4+lZcjN55HPTeL/eHd1pGAanT5+m0+kwGo0eughQyIiwUChgWdZ9
      jQIdw3Gc+yJ2PTIMECoR+WdKmGWL5sV1dKnT/3UbUVFQDQ2xmYkeYRpR/kqVwcd9aGe/TUkJ
      8zFhK0TNa1TOl1EMleH7XcyRQe/TNqqtUXq2ipbT8X/rE1x3STsx7qdDCudKdC62MG0TBYVm
      uI41YzP8TY+c5ew5X1VVCcOQ4XA4cTQJIcjlcvT7/QeeINNqtSiXyw+sQK6qqkcq6++HR4IB
      pJQM4xHKSMd738X9ZIgmVFRTQ58xyM0WiN2Y4a86mKpJ/4MuWlknXA+RCihSQagCN3YpzVVo
      fbTJmb9/nnDFR4sEg4sDTNMkqirknyrhbbpU8xVMLZPv00spNac6WbEG14fES8E20Wcv1Ot1
      kiSh0WgQRRGmmcUhNRoNer0ea2trD0w/SNOUS5cuMT09TbVafSBzuB94JMygQgjs0MR7e4D3
      0RDDNlDrOpGICYYBmqNnsfozmZKcRin2XI5R3if3tRKKUAiueqS6xJnOMfVUA2RW2SEMQ3RD
      J05itL5C0POZeXGe1JQT4hRCEBHhawFRKcHQdIQiEHvlQ26BYRgsLi6i6zq5XG5iMVJVlWq1
      ysmTJx9o8nmSJEdqcnwY8UjsAAC2ZU8I0pcBak/gaRGmbmV1OlNJ47k52u80Ea5AKILj3zmF
      uzYilZJKqYKvBTRfXycyYkrHK7ijEV5/xNTTMyidhHQoyZVt7LrD0sqAUeChJApxGjP14gxW
      JUsc713pMHyrd9sdYIz9Qg1s22ZqaorV1dUju0+HgWmaXzLAFwljQrKx8COf/LESTiPHyuvX
      yc1m5b7tYznyswVkkiJUhWDdQ1YgTlJyroOpG3BWI/Yjkk5EsVGm/pUGXtOl/bMNyrk6QggW
      vplVhUvjFCSoxk3TavFYmWDJm+gYd4MH2Z1l3HnG87zMYvYQZqzdLR4pBtgKy7RIr6X0LrVw
      hEm0HpA/WUS3dZpvrBGsBWiWhjICVdwQV5RM+Qo+D9j4bIVyrozrefhtDz2no6s6o9Uh9pST
      1fxUBFb5JoEO1wfkGwXCQcBwZUDFLN91INm4Le3OQrb3A2EYEoYhuVzuoY1YvVs8EgwgpcQP
      fDDAEjdLZiiKQs5wCPSQmW/N4bc9uq83MSKdnLDBB3aEuQghsDBJZYobuOStHOs/XsKp5zB0
      ndFbPfyaS+gGGA0LvWgwWh1ilW2CNZ/odEjUDilo+SOJohwngTwIBpBSEgQBjuM8sNV/q551
      L/CFZ4AwClHPm0ydnkfVFdpvbeJfc9GLOuowC+QyQp3Nf7uCoesYysHCe5M0wbEzW3Q5Vybs
      h6RKSs7MIQcSEx25LJFLMQXFgR7o2PBBjI6C0I4ugExV1fsuj48bYkzKwzyi+MIzgKpkNnTd
      zlao2gsN3OMjnOkc7bc3Sa8mKELB3qeKcZqm2x5ymqYMvSGxnkAsqZgVwnxM5WvTBL2AYNXD
      vT6koGYrfJwmxEmCoWbnl1JmxbDk0a5ad9vw7rBQVZVSqfTATaD3mvkeCTPouP8uZDcs18ji
      xStP14mKyZ629CiOGPku6lMmcS2ddFwcKS7VVxtMvThD5dkpkiQh0mM0S6OwUKT6lSkMMwvF
      jQoJxW9VMZ92CKKAqJKgPK4zVEekCxBNp4Ti7sqWj6/pXrco2hqZWi6XSZKEfr//UMYpHSW+
      8AyQklJ6bHucyvihDZf6BKOAsBjvepBREpE4CZEboeTUCQFoQqN3pUtutoB7dUiapjhTORQ9
      E2kGV7sYkU5ASPWlaYySyeCdDkElpvBkmfJjNaQlKJwrM/XiDLkXyoTR3TPBUVVB2A+madJo
      NLISj5UKjUZjEgn6KOMLzwCRGqPnbyZHSClJk5T136zgtz0Wf3ASc9EmyIUEaogbuIwSF2Eq
      LP7wFFKVhFe8TOGrxEg/RUgYrQ1JSRn4A4ySiddy8Tse/hUvc1Y1dDRLY3Cth1QyRtTMG0kv
      x8v0L3Xpf97Fb3kk1t1bUJIkYWpq6q7H2Q++7zMYDLBtm9XV1d+JDpHwCOgAes1A1bcrnM1f
      r2MUDCpP1AFIo5TSV2oIRbDyo2vUX2jQ/MUaSRCTny0y+DACBZREkH+lhlW10UwNs2iy8fNV
      gnUvq/j2aYiu6lmzjJnM/CljiZE3qL80g+5kjJimKaOLfaKySf6ZMr7uEoURunrnlpQ0TXFd
      955WaBgn6Ashbtto71HBF5rN4zjGPnEzYEpKSfezNulajJa/ae2pPl7HrjkYRZP5H56gcLyE
      UTQJ+wFWySJWs4wwrafQe6eNTG707C1ksefBpo8SCwwtS9KOkwS9kBG7mtOy1qiX2pPKE+2P
      N3FNn3a/Q+SGzH/vOL4dkso73wnGyTP3EkEQ0O12aTQaj0Tzi4PgC80ACBhd7BP0gsmqGC75
      iJzAmcvvWikVVcEsZA3fzIZN0PQRisCYsyaZWrnQpvfbFl7LJej7xIOIKIzofNC6KQ8rWYVo
      ALNkoVZ0ctP5ieVn+tlZzv7R4+RnC1jVbKdwTuYZjobbOr4fBlEUEQTBPenJVSwWMYwsldPz
      PNbW1r7wvb8OCvX48eP/7Nq1awf+ga7rt02OGK+E93rFUhQFLVEZrPTJnczT+6RDvBIiPNj4
      aI1wEBCMApz67rBaq2ZhVi0UTSFJE6LlYDLfZJDgpR7DX3fRVZ3CsxXqz0zjXh2iknV20eYM
      NEdHMzQEgqDl4cxm1iezlI1bPlGZiEWrby7Ta3cR0yoKClp6uBV2LJpMT0/juu6RhiiPGcuy
      rMk9GFdieNRxpAwwXtm0mqB4Lkd3pY8iFUAixL1jBhFC71oPbV2gCS2rZFDTKZ4pUVgo7erQ
      AqBoyqSESdDykRvJTQ+yECj9rEhuVEyoPzOdNbJbGaCFmd+h9fEm7Y9bWNM2xWMlcrPbPb87
      HUh2zUZRFAoLJbqrHfRE25abfDuoqorjOBOT6FHWFBrrFZqmsbCwwHA4ZDQaUa1WD2wF2lm0
      6l5BSsnIHTEY9bMk+dRHQ7vjxfbIlGApJUk+YupclfmvzDDYHFI/UyV0I5beWiFZy1aso0iw
      HlcNHo+jqip2qG7vxhJK3BtlSuJuhF40yB8vbgtaG6NwvMjSh22sIBOP4ijGsjKxSAaZyCIQ
      qFWdpJtkxFhzqH2zgaKre7rrx+XRx8xnVxzmXzzGyq+voxd12msdSoUyhquhHHBxCMOQdrtN
      qVSiVCpN6mjeLcYV4CC7l+Oy44ch6vtB/H7g0xt1QZHkZ/O4nRF2zSTVIqJ2iMnhO8ccyQ7g
      BR6lx3IUFh1Ov3wcVVdwyjZW0SRXc6ieKOPFHsUzeYoncrSvdUmiGyuuzGL0Bbd3uadpmjVI
      QNIPB9iaRZzEu34rhECNFPwll7AboqAwujpgsN6jdLKyq22RUATFM2WCKMBdHaGp2iQOX5YF
      hZNZSqDqqGxe3MDQDdRIpXOtzcb7axRPllF1lXAY4nc9dFtntDZk/TcrONO5bUyXmynQ+azF
      sW+fpHO9DYFEVw5mHRoTabPZJIqiu+4NPMZ4dymXy/i+T6VSoVQqPRRhEGma0h/0SeKY/qhP
      mAQ88x9dwO/5HHtpntrJCs6UjVHRGF7zJnnfB8Vd7wBxGnP+H52gfrI2+WyrqU4IgVWwOP+d
      M5PvF56bJXQjOle7REGMbulc/9kaIt6+Oo+9s0IIwjhCzgoGSwNM22LhlRP0f9Ki1W9TcooI
      S0HEYKjGpLBt7mslyqd2u/J3mhKFECRxglrSSCoS3dczU2Y4whiYRG6EkTMI+yGKFCjiRvpi
      7EAkufx/fYxWz8opxmFMMorILxahlbL2q2UWXz05OZeiKix+8ySrby5hVkzUKY3kanIgq8u4
      g8z8/DxhGB6ZLjDuujIuPZjL5Th+/PgDJ36A/qBPd9RBN3SqZ8pUTyxSnCugWRr9tRHD2Mfb
      HNG62KWQKxAncVb544Bzv+sdQJoJZ7+bPeBbycBbIYRAM1RydYfSbJH8VI7yqQJLGxtERoIY
      ZhaZ4WiIq/t4nkft9xqYZZPq43VqT0+jOwbeKMvikklK7ZsNcueLjDaGpF5GUOEwxJg2SaIE
      RVe3zUkIQdD1SfwYzdbpfN5i/ZcrGF5WesMNXPLPl2l92qT7fptg6FNYLOENXPrrPWzLRhFK
      thsUNRZ+cALFVul80KJaqBD3o2zFHkGqyW1N9lRdRdFU+td7eGtDbNU6kBhkGAZRFKFpmcx7
      VKEKaZpOdhfTNJmfn3/gbVDTNMWLXDrDLqXFAjNPTHPq5WOU54soisJgfURutkh+Jo/b9ji2
      MM+3Xn2ZzfVNet3BZEG5HSPcEQOMY0USEXPi1QXyU842wtrr31bs9dBUXaXT96g9NU0oIoIN
      D1fzOPlH56g9UceuOugFA90xsnRDIXBm85ROVCieq2AWTVRDxTmeR6lruM0Rsp/S+ahFeNlH
      lBXMkjU5/3Cpz/Bij/7HHRKRYlUspABlIOgP+thnc9SfbCAMgd5RiLWE6oU6+fkCzY820WZN
      hC9RUAi9EFFRKR4rY1RMkrUYw9CJZYKpG4zWh2hFbXJ+ACNvMFjqEbcjLN08kEKsadqkUsOY
      aI8yQM5xHI4dO/bA26CGYUir2yKIAs5+7wSzT86w+VmbJEopzRSQUtJfH2LVHAQCbVXhT/+z
      /4S5hVlOnjnO3GKDM4+fQEpJp9m9JRPcEZvHSczCd6aZOTeFbuvbRJU7xo2kFCEE1Qt1opMl
      zOU+IFEMbVtCxoSBBLuK0SqqgtPI4fxBjmDggxA0f7GGuzwkGkV4LRfNU7OCtccd8ueLrP31
      Eo6TI00iDM2gWCwSXQ1Z8q+Sm8mTpAlJN84yv0yN3FSe0vkK3tUhcllCTqDndGQqswwxJKrQ
      0NGwdIs0TFn6m6uc/MEZ7HrupnioCsJhgLAFUjnY/RNCEAQBw+Fw0lj78Lf6Zv8DyFb9cRDc
      g3aASSlpdZqQJxM1EShCMHO2ThAkXH9nDdVQMyueqhAHMS88+5XJjjU9U2eqUUNKyTPPP8lr
      P32D1378xjbDi+d5KKqCqqh3xgBpkhIN44kzaL8LudX7nQ9b3Phv/Llu61ROV/c9fuvnW/WN
      yd+KwCrZDFf7JG6M3leJr/voKPi+h6+HdC92OfX9c+izFmkrmbQviuMYz/VonF5g7edL5LU8
      1acrCCUbv/rMFHbVpvnLdaSX4szlsco2MpUM3u9Q1AokaYKqqMRpjP1YnvDjiOW/vsb8d4/f
      6CIjOPbKSdqNAss/vUY5XyKfu30STRRFNJvNu1r5pZTUajXCMGRqagrTNB8KeV9KSafXQVFU
      hhtDGk/USeMUVRXMXphGppKl9zconaygqBlBK6rC9Y0VnuWpyRhwk8lfefXrWJbBj//dzye6
      m2mafP8ffptiqXBnIlC9Xme07DPsDameKu9qn7OXiLOXSLTtvZSsL3W3iQk7j90Pt9I9wkFA
      3I+I4giREygLOomS4K4MOf0PzmNVbYony9gnc3gjj0RLURoaak6l8exspgDPmlQu1CfXZeQz
      McxfconciNrXp9Gsm6EXspnpIJqmEecSpl+eY7g0QE0VSMGZu+mYs6o2UoVusw2wLWgAACAA
      SURBVIOqaehi7wZ6Y/T7fYIgmKzgd5KqWCqVaDQalMvlXbVLHyTGZdillBROOhx/boGZx+o4
      FQdFzfw2SRATp3ISeCgUgWv4pBsJMzPTu8YUQjB/bJbHnz7Lxxc/JY6y8PjT509w6ZOrd24F
      UhSF3kcjVufXmT43hWbsr3kfmHi3vD9sKtzO342RnyuSnytuGy8JY9yhy2h9iF11EKrAKJhM
      vzQ7OU5KSZKmaDkNv+PvydTFZyuEb4ZYW5i2dK7C6ntXccxM6ZVuSvOtDUxPR1d0/I3tK7cQ
      gsazs1TP1fn4X79PqIYUc7tbAY0xdn7djagyPT39wEWdvTCuAO3FLjO1KSqLJTRzO4NqhkYY
      bQ/UC4chs481AOi0u1Squ7vZ16drPP7MOd587d0sSkFV+PDdT+88FkhKiSIUrvxolb/9H3/J
      sDm66fy5hQI8xtbv9tsxdp5vL11j69/jcto7H+7O8VVDo3isTDgMth2z0zQKUHtimrmXF/e8
      Bqtqs/CdE0hgtDEkckM2f72GtaX5hiUs1OsSXegkaYrzWGFby6HIi0iCTJxc/L3j9OM+nbC7
      r3XHMAySJCGO4ztauYvF4kNb3UFKScft8MJ/+SyVxfKei2qu7hAOt/s/1KFCYzZb/V/7ya94
      /WdvEAS7fSTj61ZVldXr67z6g5fvTAQqlUr4eFSezDNa8Un8lLVL6zQem0K3theC3SXr78MU
      Mr0pAu1H4DvHGP8bixtjoho3TRuLB3uNl58pIFSBWbh9ptWtmLh3ucPmT1cZtgd03m2R8+w9
      Pd1pmqKc1KlcqE1KokspufLXn9P7rIPqaFgVi/xMkf6lDnlrb31g3CVlrO8cRAQyTZM0TSkW
      izQajduaOKWUDAaDXVloo9HonopMvu/jqSOmz0yhAPn67paykR8zGgRYxZuLTKwklKIClWqZ
      k2eP8+///K/4xc9+Q7fTQ1EV8oUc7731AX/z/77Owsk5nILDwvFZvvbKc4cXgZI0oXjB5okX
      TmMXLarHWkR+TONcfRvxw94r+14QQsABdIitq/9WhXfcQG2siyiKcttzC0VQmC0eaH470V/q
      EbYDqk/UMctWFpezHGbh0vb+m6owbhJtHMckQUw0CCjLEss/v8qpPzzH5vvr5M3CvkRm2zbN
      ZnNyzQeBZVk4jsPs7OyBiLfdbk8YYNy1XQhBGIbYts309PSRBzpKKXGDERf+wTlGGyMWn909
      11HbZe2DTdxhSH4mj3qj8IBRMPj8+mVOnT6Oruv8V//tf87/9D/8c9799Ye888YHSLL79NK3
      n+eV77yYNTi8IUoemgEUTcnq52gqiqrQOHfnWUoHeYBbZfIxthL/+HXr6r9XMsdRrlqF+SLN
      1XVWXr+GMhQUzpdwPx/iyO1FrKSUeKqfzU0FQ2y/3aqpUT0/RXTRI6/k2Hx/HTZSnMr+xbDy
      +TyVSiVbLT3vlvdw3E19LFsf5B5IKbFtG9M06fV6uK476RU8FhM3NzdpNBq3HeuwSNSEQiNP
      PxrsFoFTyUd/eQm1n+VFNO0mja9mc5CJpJbf4pyVEnfoItMbYTGKyvRcjd//3ssT2hkzz6HZ
      WKSC5ns9ENmk0iSlt9pn+b217cftYZk5LBFulfvH78eWj53fjT8fr4y3Y66dvz/M3BRFYeqF
      GeZfOkbqpziNPMf/5Az6eYsoiSZjBklI7ZsNGj9YIPdkicKxLKZoa+fF2vkpgnyEkApcTygW
      CrdcXYXIKkjfrnWpruvMzMxMEmkOY0wYiz6u6xLHMVGUebXH9/1eeIk3m5ucfvU4/iAgX9sd
      hu33A5RhVp0uTEISdYtfKJXbdCLDNKhOVQijkJe+8zye73Hl8+tsrG3uGveOrsRUTH77zz9A
      NVWCUYAqVSqPF5h/ambbcbez6Gyz2+9xnp2m1fHxe0ZfbpGFt457EOwcb0+/wtZzxQkIQeeD
      NlqsYhZNFFWhcLrMQO+RfhiiChVVURleGzBaXUEOU0bDEWf+4ePbFXdN4cQPz/DRv7hITasc
      yAtrmmamh/n+vrFA41X7TjCuQ7TXPXQc58hLpURxRPmxAlNna4yaLuh76H2qQKiCVKYUHssz
      8+xNWlMNlaX2Ki/cyJkAOPv4STrNLp98cIl/8k//Me7IpVgqbqMjIcSdMYAQAj01wANbcbKE
      ksH2B7H1RFs/2/o6Hmvn2LfCzvHuhUJ2qzG9lovXchm81cU2bGI7JRyEKJrK8l9eQW8YUBNY
      LYGKgvf+kIKdAxVyeYeln1xh5qV5nHqO0doQ1dawSha1C3X6v+lQr9dvOz/TNNnY2LhtINzd
      hDSM+5h1u100TcNxHEqlEoVC4Y7H3Auu66JUwSoaDNaGpFFKubH9HEmU8tmPr6KmKmEuYO4r
      c7vGCeLtVp9vf/+bzC3O8uYv3iFfyDEzt91HMH7Gd7WXhXGITFMqTxWYf2b2lsfuNGHu5MTb
      YXzs7RTcwyjee3mnNU3blmiycxdK45TBu10K1o1etaFO760WA00lL3LIdUmqZCuRG7nEImvY
      Nw6xzgU2vc87OLUcSMln//pDGi/OIRRBkh48stM0zVuGQhQKhbsSVcYl2kulEmEYYlmHj7W/
      HVzPpRt3mJ+ZoX6mSjSMmH/y5soupcRte3zyF1dhKOj5HS788eNoe+R0+HbIJ59+zmPnbkYd
      P/bEGR57Inu/39zv+A5JKSk+5rDw3Cylmd1Wi52K6s4Uyb3k1/EI+zHFVoY5DKFvrf429hHs
      V/Vgv3GllHhtl87FJrZ6kxh0TUcNVUQkiGoJsRtjB5kMbWs2MVl4bhzHWTUJ06T3aY/r7hUa
      z8+y+J2TtF/fIExDyuXdDpz9UK/XGQ6HeJ636zvbtqnX60dCsKqqHnmFaikl/X6fzqjN+R+c
      ZeHG4rn5cWvbcUmYcPHPPyEnCgRpwOk/PIWZ39tsbdZM3rvyIecfOzsxg493yL18SuPP79yW
      lUs5/vX5PYl/60nGitNYEdsrRihN06y74wFOe5iHOjaJjjOcxrb3MfHvHCtN033TDGUiWf6b
      a5hdfVcCi6JkecUSieFnrvyR5hLEAc5LReIFSCoS7axFmIQUC0VyPYvuz5tErQDnsTwl43Am
      WUVRqNVqe96Pschyv3HQFM3BcEBo+Tz7Hz/J/NMzNy15OxoVti53MBN7YsnZWf4Gtuzag4jn
      zjw9+Wz87G+HO9oBpJRYswb52uF6OAVuiN/3KUznJ0wxHk9KCXK7R/Z2IRQH2QnGx+m6PrFk
      jD/fKZJtvb6d5x4s9XFCa98AQFVRUTuZfyFNU0Qi0JTMaTT9/M1tveO08H87xDItjFhBLkmS
      KGHgDynnD9eMbhwavXMXeFCx/Ac5r5SSWA9ZfGGO0lwm60+ewQ2r4jjQzW0FkzE1TWO06ZKb
      3k5zQgjSKOWMdoIzZ07uop/bLZh3vAMMLo+49vYycRDva3bc+tnl16/x2v/6a9yex+v/+2/4
      7LXLJHGygxFumjhvha0Xtp+neesqIKW8rVVk53g7GcK/OsK29hcFts5JURRyONl9SbZfS/l0
      FWVRZxAMsnROITANk0qhfKgk+fF55ufnyeVy2+oG5fP5Q41zVNiL2Pa654EfkkQpK+/eNJ0L
      IZBA5N0UTRPvZqGCLH5nDwkilThNi1e+/vVtzQaTJNmX+Lc9q0NfJVk+QOKltK926a8PuP7u
      SjaZvRhBwvK7a7Qud/n9//pFIj9m/f0mn/zoCr/5l+8warsT230SJLibNxO992OEg/oVxoQf
      RdHuG3eA+KMxwkGAbB4+9TBNU2S0YzcRMP3iLOWv3egn7Gert0wlQXj4EGfTNDl27BinT58m
      n8+64DwsNX3CMKTZau76PPYT0iRl5kYb2633x8zdtFxNXajiC48wDAnCgNV31hiuDzMRc3PE
      9deX+PzffU45LewpNRzEJ3RHsUDFxTyKoSJHAqFB67Muc0/d9AxuFU3cjsenf3GV0rE8vhew
      /Jt1vI7PVG0K1de5/s4KzY86XH9zFaegs/72KvmFEqqh4m6O0Gx9V1mT24k+O1fjcZzQ2CM6
      DprbaZna6/cA7tqQdCU+sPt/HOpg6AaBCMkt3DTrjccerg2gmWaNt4UgthK82MdWD0+842sa
      N7J4UDvATowNH1vNsUIIhv0huRmbqTOZop6ECV7PJxqGFGdu3iszb+A0TNbfa5HECVqksf7h
      Ov6Sz+C9AaInwINBb4BQFOYXZw+0y2/FHQmL2ujmBXXeHpIaKXGYoGoKcZigqAJVy7Twd/7V
      h+ixydqHTZS3VRzTYW52bjIZR83BCHSp4H0aU7ALiJZPv+WheTHtpjtpeD3GVgX7IEQ51gGS
      JNnmQRVCTHaHvUSfMVRbO5RjbaKYpRGFU9uTesbj2DWHTjjEsTNRKclJisfLBO8Hd1wKXdf1
      B17Pf3wvh8Nh1v3S2a0nmqZJHCSTha15qU33ao+FZ2Yn1hspM33g8i+XsC17YsAwExOzoDH3
      8jSxl9D/fMg/+bM/ndDbrZ7jXovdHTvCtsIfBPzif34Tp2DjBwG5qs0zf3Ih666yUKR1sUfO
      yqNYt3bxCwTC1+m800dWEoJhQPVYhaDtYd7Iotp5cfuZTHeGSIwJXdO0WzqQ9tpdjLzJcEYh
      3AgxlNs7l8bzicwYZ3p3RCOA13HRzpj4l31iNaH+5AxGweDaJ5cxpHFPHHz3GkmaIFNJJEPc
      yKXu7G2KLRQKVI9nCn9/ecDma12kmVJqFCb3P3QjPv3xFeIViW1lulEQBQyCHt/63jcozRTp
      LPdQVjU0ffcCtdXIoSjK5JnvpJcjCenLWXnsJIfsKhieRe6Gdeizv73C6tubNDvNA7vlhRBo
      UidaTulc7/HZa5dZ++U1knC3PDe+yPFF3U4vGCtHt/p+/Lr1n+7oNF6ZQ9QPp6RaoUnzjd0x
      UkII6o9NM/P8PMaTDnM/PI5dc0AIEiPB9/1DnedBY/wMNlobDNw+jVdqVKb2bxBo6AbNX3W5
      9ncrrPx0E1MzSQYp3bX+xJSqqAruso9pGIQ3dKNEJlSKVX79f77H5TevU6jnwL61AWavSISt
      748spnVCfKqkerLExX/7CZtvd7AXDWrzlUNlIAkhcGwHwzCyro39EG9tsO+xcHuFeefxe2Hr
      HPcyxxozVtY58QANL8IwRKaS8LJP0N+boIUiqF+YnphWVV3lxKun6YdfvM4sURQRhzGykHXP
      nHqhgmjsvegJITCFRXgpQUQKnuGhCAV30588rzRJQQqSfIyiZtX3yqcLqAUFp2BTPV3m2vsr
      zC3M7knYW7EzdHzr30ca1J2ImPJTBZZ+u4Z7JYBY0Pm0j5U4h97ShRAUnRK6oTFsD2m+v040
      3E14O3WD/bT+g1qNtr7u/L1ddyj/vSnK350inRfEcv8a+r6fpVEauoHbcvedy85X1dJQyvqR
      Fr+91xhfTzFfxO14VE+UKS0Uibu33vXTNOX66nVCNULTNbofD4j87J6GbkgcRNBT0FSNKIlY
      /PoMZ/7gGCe+PYdQoH6mQttv35G4OH7GR+IxSdKEIA44/f1FLr12FXVgZJlDmsisPXeYf2qb
      Nq7rkkYu/eU+08t9orKFc6MH2F6+gL1EpJ3H7Hsd+7jOJ/PZEqZrf82hP9Vl9GYPfY/Ok91+
      lzRNMS0TZ4eDa6ccunOemq3hD31y6t76w8MIXdcxTIOoFdH8rE3rUgd89ZZLbJqmnP7BGYSi
      0HxtA9mUxEHMytvrtD/t4di5SRpjmqb014aoukoaZ3/XTlUYRH1+9cZvuHD+PMVS4Za7wV7S
      wl1VhpNSZopPJWY0HLLxXpuccjMIa2sB2zuBEALLtPCjAMVQ8Ac+Zt7E2iNVbutvDvP+bmCU
      TfQFC3/kEXT9zCp1o/TGuNy4uqhTPb87wnO/eQkhqJys0lnvwFBOTLcPM6TMfBhRnIlB9TMV
      TnxjEZED95q/Lw1IKZF5aH/WIpFJVoCg6dH7cIgprcnCKaUk8H0WX5yldrJCsVGg2Ciw8s46
      J796jLgY8cHnH2JHDuXK3t70nfdwEn5xNxed5mOGcR9vOaSolVFQtqUlHsWDUxSFSrGClmqE
      rZjkAEPuVGLH8936ercYj22VLKZemmXuH52g/oezBHompkUyQn/SZvrFucnxO69rK2Fs3RWE
      Imh8dRblnMFId4+sDPq9QpIk9Ohz6u8vUp4v0bnUZ+ntVaqnSoTsry8pikLz/Q2Ctk/Q9vHX
      PLwrEaqSLaCplqAWM33q9OMneDL3FO1PewB0l/ssPDGHlTcxcjrVE2Va7fa257zf31txRzuA
      5VhZgnSiY2uZsqqpGrZl35PVKklTUlViYKBOZU0pNOvWydlbvxtboPbaDnfiMCLT1rGEIlA0
      FffSADVRSWVK+bk6qrm3+Dde2ccPZ5zYP45cNRyD4nyJMI6INgO029QLelAYDAYwJ5i6MMVw
      Y4TsSeJ2SuhFNJ6s48xbdD7q7ykGSylBl5z+wQmCbkDtfBUv8hARHP/6HL/3py9w4rkFnCmT
      wqJDJ+wQjAJ6m31iL2H2sZv+IUVTWFtaZ648i2mZ28+x5e+dZu5D6wBxHOO6LpVS5b51ElRV
      lSANqdkVln5+lfZMk/N/8iRCvTURH/a78ao+9hcctvCUUASJlhJ7CTKBsB9g5Lf7Dcbjj3sc
      jN8nSbLrXEII6uenaSmbDN/rUdAeDg/vVghFoOU1KqerRF7EygdLoEpQsvAOI28gnRQZ3iS+
      kTciN2+TGjEzx7Pymk/8h+dBZA0N07WY5777JJBZxs48f2JyPq/v89mHV5m/MLNrLnpd4xdv
      vsH3Xv0OsL8zbDJ3cQfh0JqmUS1X72sbTU1RMYIsUWV+ao7R2pDrr10hDva3wtxO1NlqMdp5
      U8ZhEneivOtVAy/yMHSdsHPr2J6dPoydSNPMpFg/P03Cw2kVskwLr+mRxilpnO1eqZpy4U/O
      omgKZs6g8XwNKjd34UHYY/FrM9TP1aidqeJU7EnBY0VTcEr7Bx1GQYRh7V3XKFgLefGrX2M4
      GB1I1JVSHo0n+F5DCEGlWMH1XAzDoJavMljukUQJ6h7Fk3Y6yA6CrTLi2HO4dUc4KKaebbDe
      XCZoB+Tk3jU3D3v/kjDJcnTj+9OG6DDo9rvMvbjA5jsbuJ+N0IRG/ngW3hGHCZqhUlossPlW
      G00quPGIl/+LF9i41KJw/Gbcz0T0VASD/v6db7obfQYbI5YvrlOaLjB9roaVNwndiPd+8hFv
      /PnbWJbFP/1n/w1O7vaJPF+YPsFCiElcST6fZzgcEQ4CkijBLu+vexyGeMcME8cxqqpOXg9i
      kx8ziqKp1F5q0L7YxJq5u0yqaBSy8XerhKOAOEmw1DuLEbqXKBfLdP62jWPb5PSs8vXw0pBP
      gkucefUkoRvRW+njtn2MQopa01i91EIocs+iZEmUsHGtReiGGM7usJP6QpWf/W+/ot8aoOs6
      mq4hFDBtk9Z6mziOyeVy/O1fvc4f/PGre/aH24ovDANsRSpTzJLF9b+7TOTFnPvjx7FK+zPB
      Tjv77XSErTvI7XSGvb43SxYzL80f+Hr8jo/fcrPq0yloOY3YjRh9NED3VPTTBUbv9+EhbNqo
      aVvaSUlJGIWYMzppX/LRv/gcGUo0Xceetqg9VyMaRRTmirQ/257+KISgc6VLzrF54ltnee9X
      H+MYFgvnZynUbuo+qq6iGdniJKWctIka9keTTL/RaMS//zf/H7lCDidn89RXHscw947h+kIy
      gKZmyeXqGYNwEPLp//MRZ//ocewtBaW2BkPdKh5kL4yVUshMfGmUoujbzbpbEy/Gv9nPuXWr
      8/gtj85PN9CERt8bYFZMlJGCoemYQscXPqaRIxAhSb9LIV84dB+s+4XxPVDbOqoEN3CzGkhF
      QePlBlbZwut4bH68ib/hb8v+AlAQLDw+g1AE9jM2oRvy0a8/Z3a2TmWxTBTE/OJf/ZbWSgcp
      5S3Nw2EQ8n/8L/8STdOYnZ/h69/8Kt/94e/vOu7hvJO3gRAC27TxPvVQ51TK8xWWfnqZxa/u
      LpcxhpRyknO8dZ/Yi0TFls8FEA5CZMHArjqYxWzbDr2Qtd8sY1dsao9Ps7Ow0UEYrftRm+57
      LYrnKmgFDevdCOELuNEsI0kSlDmd+oVpCgslgp5P6+/WKFrFh04XgGxRMBSDIAxI1ZQgDJj5
      bgO7Zk/EGafq4FQdgkHA6sVNaidKk+rahcUin75xBV3TQIGc0Pnj/BlOUWX57Q7DIOXPP1yf
      ZPntXIR2Yswk165cp1Qu8J0//L1di9QXkgHGsC2bYD3AWtTwN2POv3xy8t1Wz+rW0Oid3x+E
      UIUQ+P2A3tqA7lKfYdej+0mHsiihNCWrnevUnmlkfQMOSJhuc4TXdjn2D07TX+4xWh1CKLGM
      mwkxkRpTOlUjjRIUTUF3dLqdLvlG/qEsbz5GlI849uoiqqliOnsX2DIL5sSAIVOJUARBzydO
      Y0pzBVRTRX/Tpbpo8pPNS6zWIkZuwPx0mcRP6LseF2bqPFMt8JeXlvlweW2Pmdw4l2lu8w2M
      ccdWoIcJmqIx9/g0o85oG7HvZQG6nUXmVsxglyzskoX4WNB+o0M+dRgEfWrlOk5bwV0aYJyv
      HYih0ihh4+1VKscrxMOQyokqYTdAkOVDe56HaZqoqPT+rkkPQW/QRSgK9kyOKI4eagZwfIer
      /+Yala+WOfbCsW3PYnx/3LbL6i/WuDa4RvVcBadhoagKU2dr6LaO1/WJF3R+NLdJvl6gDNi/
      2uC/+w/+AENVCZMUXVF496OP+cdPmPz3zc6urjlSZnVOz104w5/8p3+0Z1TwF54BFEXh6htL
      vPKnX9v13U7F91Zy+e2U5PFnURBROpdj9sI0oRuy+tYmTsOmudKleLqCou9R72jLwx+LYtNn
      61x4+RTv//xzzKpN+VSFz978ECeXQxMq3bRPRS1hqJnNWyvWURB4kY9pPHzWoK1QFIW8lWf0
      yYj+sT521UZVtzcUX359Gb/to2gKbjMgfzqribTxcYvyVIHNT5qcffEk+XoOfxDgtly+L6vk
      bqRX6uM4ITuHO3CZq1aIVI1utwtkDttqtYphGJw6e5xyZe+yM194BhBCYOfsPb3Ce4k5+xH4
      rSxFWz9feHqWhaezQk4ylVx/a5W1dzdRC4KNHy+TO12gcqG+rfDWVouSEFkZj1I1h6II1Bsi
      gNfxsI/lEKkgCmPCDZ+klJ84HPUbim9ePVwpmgcFIQR6aLD27hrHvnlsl5d75mszKHkdZzZP
      fjaz8gxXBvSvDZmfm2b6G49RaZS4/tYKj/lTzAx1njyzuyJ1lCT83x9dITUsbMPAsiw2NjYo
      lUo4joOiwnNff3pXyZbxs7h/7tx7CLtibbMm/P/tvWmMXdeV3/vbZz7nzjVXkUUWZ1GTJdGW
      ZUm23LZ7sNWdThrppBsZgYzIh0Y+JI3gAQ94QIAgyAMe0vmSFyTBy4BOOu62nXbb7kEeZVmi
      LUuiJIpTkawiq1jzcOczn/0+nLq3bo0kJbJYLNVfEAq899xz7913r73XXuu//utOuP+b4U7q
      BTr/v/H2JPUbLvaAyfN/71M4eQN5JaIxV18j4Rj5EXLRQyx5sOBiBwlDp/poll2yeYtr/+MS
      9Utl9KxBpi+HiUl/qR9d252dXO4U6wmJnYijmMyBLE6v0x7PxlgNtaby7p9fYO7KIt/4V3/O
      pe+N0XR9nn/+Wb596RpLjRUVjZXXfPr4CF954tSavsAtnpXv+wwfOUCusLWe6UO/A0gpsUur
      Gdf1Pv1Wu0DnNXf7fq0dQrc0dFPjzG8+QRzE+GFAEoKTKeLXferXKiRegq5KPvHrp9fcZ/7q
      Ihe/cw0t1DEUnczxPO57NQQJljDvcanS/UcYhwgp1lBIJJLCSGHNDppECYqmYBUspt4eR6ko
      aF0afc8PYg86NGZr0FSJiVFUhcWpJWrHXRzb4tjTT/KNP32FRw4MUHBsFucXiIXCn1+dQO0I
      DXcq5t24eov//Hu/z6//9q/QN9CDZa8GGfbEITiOY7IrheebuS3rJ/i9DB965QAhFQI3xMwY
      PP5rJ3n7jy8hpWTu51MUsg5Oyabvse41r2uWXa5+5ya2dBC6QNd03J/X2hKODxtcxcd6Moei
      KQhdJVxOSxvjRohXCzArPqqhEnkRM9+bRRgCLadhLOgIBI2xBs3jDfJHi4RuiHZF49bbc0Qy
      pCuf47Bj86Ozb3H8yCFOFLOcIoRmyKmuLH8yPk3AWldm/WHXdwP+4D9+nVN5k8cfOYp5dJj8
      oSGy+ezDbwCItG/xVhP9blb4Vv+r1irWyjaqqtrOOHbeU7fTeLWiChAwfXke3TRY+M4UxSMZ
      Tv7iEfRNpBTdqkfoRui20f6sH1YKZTcgqoeEbohZsLC6bMzSqnhwEiUsL3oEFY+w7GEEKmqs
      gpvKSQaZAHxYPruI8qJC8WQXc1PTsCwoZbuRYUitWiWTxPz7P/hj/s5wD4WVrO5Ytc5rM4so
      K1pKrQSmH6SSioa+uqAoqsalqs+vuS6HJqeZunSVcygPvwGoikp9rknvse5Nn78dMW794beT
      +9MS1NpKSXrg8T6yfQ66nfrqhqlTyFn0v3iA0sG1Ss9SShbGlpgbXWBxtIwXBDj2LuQ2fAjo
      qoZesPArPtne/Fr9VBMQEFYDlGWxQXjAL6e1DpY0Kf9kCeO4Rf8XhlgeXcI738C0bCardeKl
      Ctdn5/ivZsCPtDq91YS3SuB8fgj3R5MYuoGZ13n8l47RfbhEfanJ2NkJFi4sE3sSkFjdJt8z
      mxxb8iiFCn6t+fAbgJQSM/fhG0F0Iooi4jjeMrO4flfRdJXigdUSvANP9iM+sXpNp3EFzZBz
      X72AKSxsK4OdfziiOXcCqYKeM0maIUJbUXXo0HitXVxCvZFgCI1EroqZSSnJnMwRTYfggRar
      hBc8JiduMvT5g3hLLo3ZJpZa5MhIL+6LDlPn5/jhuUk0dJwhAzlewe4x42ICUAAAIABJREFU
      ePrXH6PYXyCRabQp35PlyZcfIfrFCLfqIVSBlU07+Vx86xb/MOihWnYffgNQFIXFy2UGH0s7
      gGxHiLudf62qKrqukyRJu81qix3a6QLdDuvj/u9/5yKaqZOzcmjK7ojstNyFluIafITzUUFB
      kPY8bmmxthB7EfF1H00zqPo1dKm1dz4hBEkgScJVxW5N01CbKrOvTYEn0WONn0/OMjHg09PT
      iz8fkNGyBGGAU7B57reeWU1q6aukvFZNR2Kmh+5O5E/38X9+9V1ORZmH3wAAmjMejaVmWlhx
      B9nerX7oJEnwfb896Ttfs9X9tnsvgLnRBZZvVbCw0e5AVW6n0JpsUkrq9TqGaWJ+yJZKXtUj
      L9JeXa17rwlCCPADn/wm7V/DMR9DM9IKspUFI45j4maEEimYmgkaXP7xTSJL0vSaRG5CLpNj
      5vICcRijGen3aP12LZboVouebml0nxlkwY0ftmDb5lAilTf+w9ssjC3d1aF3PVpdJqMoav/f
      KlXsDLPe6S4jhEC3dcoTVeLa7hS6EkKQy+UwDQPf97c872wHSxpEzbDNvW8n/PyY8tk5TNXA
      Mje2WBJCYOpm211yQ5f4kESc0ojrMSargQFLs5BxeqhO5EojkwBq69TEOzuItn7P9vOJpLHY
      YHmyjF8P6H9qYG/sAEKkIlqC2+sA3Ysw42aH6q2iTtluh2xXFkPdPav/VjBN80MJcmmoNF5b
      AAWCkoV3q4n0Y+LFECcwkUmC6Qd0SRgQCg0pGUAhQDJ5sp+jT53kh996HVM1SW4kRNkIx1gr
      ppbL5ph7awkt0rEsHdd10XWDv/h3r/LJv/IJMt02C1eXOf7iYUI/YvLcNJEbMFiXZJup0K49
      XqfLhGdyed6I6tQf7d8bBgBpNGjqzTlKw4U0Hv0hJ/p24dPOiNJ26Hw+cCMalQbZwkdrWrdT
      +FB10JqOTupzN99eQK3rKEKgC50uz+cl1eCTmRKaEGsWqUBKXnv0KEeePsXPfnAOvxmgSAWq
      0abtkCxsVKERKzG5fA5kqgYx8cMZEhJUoTH7/tsEQYCpWDzaDHg5KcLK+12I4Lm+Iraq8peM
      Lv7T1y/tHQMACGZjxs5OMPLpYYSxMTO8Gbbi/Gy2unfidvdtGcvke1PYirOjIgIPCpEMeeHv
      fpLKdA2ZSMo/neR35oqY6/SPWrtnhMQ0TYSioGirv1dLDW49WucW3/XxIw/HzJCxMyucntRg
      QgKELlBRkREIZbW2I1ZAaxEjgYKi7S0DEEIw/foCC+8vc+Az/Qw/PbTtofdOsZW708kyXf85
      4jDm0l9cp3qpQVfpwWr27wQiQo78wkGsrIl90krHpRFg/GBV6Hf9YvNut83hZ08zeuE65YXq
      HbFcFUUhl9ma2+OQBQFxGHBwuJdowqdJwozq82hXBq21wwOyx/5o0oi7EZqmIUOojNUIRYhf
      9wmaYSq1sYkd3Mlqv9njm3GPWmgsNxl9ZZzmdf+O3Z6PHIq8z2gFBTZzkUQGzvytx+g7vrFr
      Zf7dRfJbxFpMN2BiIM/h0yM4joH+3jUKcUw1jkjWSULqvs8jUUI1ConvYExDxadnyUO3dG4M
      GnzWtil2vE4IQWkx2HsGIIRYkR1UEarg1EvHuPHWJI3lJo1lF83SiIOYhbElyreqJInEWlEn
      2M4Q7qS4BtKJ/P7XrxBO31n3ms7XfVgW606gk2XZCSkThp7tpf/kajOMKIxZ+OOLHH51ht5Y
      JbtF8z8Hwex7V1k+2EX/d8/xFcPh07bDs5rBG40a8Qo1JQwC/qmd4XOZLI8IFcv3mIh8SBIS
      sdLtJ4lRk4hk5YxRLi/yOy+/RK1g8O7cAl8dv4miqhwyDdSVz5nfay5QJ4QQ1CddytNVFt+v
      kBvO8PRvPk51tkoiE3oOdJPtyVCdq1OZqlIY2r5Pb+f2nUSp9F99sUESJpSGi23Oj1v18KZ9
      TOPuen3t9jPCVoYZRRH9p3rWBAiWRuf57GWP45oD25ypBfAIOv/92z/hHwcKysp7FDSNf5rN
      c95zeTOKWBDgrEz0IdMkp2k8PuQwUsxxfqHC1VqTT/YUOFrM8fbcEmU/4E/6YoaLed6fnufP
      z18mjmOu1qq83t3N7wwepGslB7JnDQBAlSoTb01TOlZg4dISXs2j6+Da3avQn6N2voZb8Vgc
      X8Yp2nQdLq6Z8AvjS8xdXMDMmCQyQWhw/QcT5OzUaBLjBpnulPWp2gqJ2J0x/3uFNcECVSAl
      +I2A6sVZtHmPr5xr0KelC4Bpmmu0WVu7XKuRoKUInpmpoRbXcqf6DZN+w+QXpGQ5Cil1HIzL
      UUi3bVEwDV440MsLHa8TScKXR4a48l6da4vLfPPchTUKHz+bm+P/CAL++cFDHDOtvWkAnWn+
      yuU6+eMZ9C6N89++zKf/xtMbxJIOPDbI/PVFRj4xjFfzKU9VKQzmSBLJtdfHqVxuQEPQJO01
      HMuIvJNH1432+0ULkhs/mObxv3GC4vEs3ni0a92Zu0Urs5ogsQyTaq1KLpsjEQknXx5B1RV6
      /sN7vByaqEKgrivkaZEKYbVbi2EYqT4qgsY2yTdFCLr1tTmUg6bFaK3BwU34VLNNnytLFc5e
      v8V3Lo7RcDd257lZLvO7zSamouyNTPB6tMJlkA54lEQ88WuP4N4KePN/vJu231l3fd+xHnRL
      J9uTQQaSyI+58qNrzL2xjGgq7ZVLVVUMzWxP/tbrhRCQgF/36TnV1SZl7QXIlf8UIfB8D9u2
      WSovEeguty7M8NbX3+OUp2IoStu/bsH3fVzXxXVdGo0Gnufh+z7N5mrXHGWz6MRtoKjqmjNJ
      67d5+dhBfv/SDfRSN16wtW6QGwSUPW9vGkAnDMPAvelz/bUb9DxZoDnh887XPkAmGzuJtLb2
      rgNFZi/PE9SCu2o6rWs6N89O0XOkRMzdUwp2KxShYJkWpmFiWzZxFDM/O8/4exOc+7PzXH1j
      jOtqwK1wazHgrVS2JWBrd598U1UVwzBwHAfHcbBtG9M0MVSFp/u7sWybgYGNCtIbvttdv/ND
      CEWquDdDkBCJkPqtJjOj81teb2ZNDj95EHWL6MVWEEIQzUkuffcaQu7NoZVScuPGDYQQ/IPT
      x/m/zzzOv/7EaT4/1E2mx+T1ZoX4bvhYUqJxexW99QjDEN/323+DIMB103rhLx7sQ41CCoUC
      tr29Puve/JW2wOJYmdxIhthL+OCPRpm6ONsOm7b81FZHedMxUeXdU5dVRaU5GqApWruibC+h
      Wq22D5VHHZtninmeKubQFYVaGFFfijm7UGX+DrvaCCHoV3V+XqnSvAseUovsFgRBm8DYGuu8
      qfPyYEqB6O3t3TbC9rExACEEalPHnfLRiyqmbjL6rXGWbpYxDCNVDzNNLMtKG74ZBo2F5u1v
      vAIpJUEU0AhcXN8lCIJdLV71YRDHMbdu3QJgpFSk11gbQymaOl1C51iS4dZiwPv1OskdLABD
      uklWKvxgZonztTozQcAbS2XGXPeuF5DWueDZ/i7iKCSXy3Hw4MF2uet63LMokJQS13OxrXTL
      2a0RECVUSQKJooBIFC58e5TSPypsoPIiQTM0IrbwXdepTCzXykS2hEBijGSIVahMLJGXGSxz
      9RwRRVH7wPawYWFhoT0+vzHYwxFnrXvRZRh4K+M1IEzceszrXpUnShkKWwj6uknCO5UaxVDn
      GSVPsxzz/WCBX+3uZbEZ8nqjzNGcw+C6mukri2XWR5sVRQEhkEmahDwkEiaThEwmk54FV1yk
      TtzTMKht2YRRiOd56LreNobdhM5sq5QSbyFkabJM1/Bq7L/1t/tUkdk3ljbcQ2oJxeM5sv0O
      k2/NQl2Qs7PESUwsYuw5g6bvohUMwh6VaN7DdNW2zk8QBljKRn78bkaSJDzlmAycOIKUkpHM
      xnpmBfA75IZtoXI8znBx3uVASWfYXBtQuOa6zNQCTiqZti/iCJWn9QI3A4+jpk0/BhNVjxuq
      y7GsQ+9K0Y5zw6N7dvMdupWU+5vk+H8oE+Yza+q9Oxeve2YArR/T0A10TcdLXBI9QQl3r5eV
      rhgSw0knZmclE8DImYPMv79EUl/7uvxIlif/0mkaS02uvnID23DQ9ZQSjJkakKWbmA1J3XUx
      hhzqix5OPQYvwOnNEfkJCvemk+ZOQIi09evfOzy45TWKYNMZNSJsbiy73LB8Pl3Iowo4X29g
      NdV08q9DUdG4FDQ4aqYL6LBhcVBKxiseV9UmMZLMNgGK1m+oIOiRCjNC0NfXx/z8PK7rrql5
      uC+zUwiBYRhtHvZuhq4ZnPufF1gYS1f6zvauuq1z9AuHiJSQOIkJ4xAvcTny/DBIGPv5TYxN
      urbEcdw+TOcTG2dGpRA4EEQcqEQ8/5fP8OJf+yRaVkmrm6KwnRndrYdmIQTBbT6aKgTWJtqo
      AIeFTcHV+ebcPK/OlMm6GqVt6qNjNuZqjhg2jysZ4obkhHFnogJ9ceoSOY5DT0/PBtfzvmWC
      1fjhSDILIZBNOP/VUfSixskvjdB7tLu9Gww+0kdpuMDC2BKFgRxREGNdKTN7fpG5c4vomxhA
      OwkXhgwlAZN+jLqyIEwVdWa//lNkAEmS8tJjMyZuxu1C7iiKtuTE30/cjpE6G2+f3BNCEG+z
      pPYqBlOhxmPW1nTm1Xtt/rgiBFs0B90UL6gZLtSqRIUsjuOQy+WIg4AwDEniZG9SIT4MVKGS
      VCTnvzqK1XuD/id6OPjkIIatIxPJwIleNFNjYWyR0xXBcibHuJMhaG6d8FJ1ndnUMQLAbGlU
      xqQksZXFSE+AFff4Qe8AjUYDy7I2PagbYcTrU8v0Zy2O5TcKEEgpUQ0B2zTHVO7A5VuUIQfN
      uyMTboYIye81pphNQoYLWYQQ9HT38PRCzKMildPcN4B10FSNaClh8oezjH1/kuygQ32qgaIr
      PPLyUU5fqHOyp5dzs4vMT80Tr2SUDcMgk8l8ZJ++84C+0+cDIQSO4xAEwYYdKIljPuWZDEUG
      y4s+Z/t8EglBHNPwY1QEEknTi9d87pqMcJOYpSQkIsHscDE3M3ZXJnh6zJEtXJx3mjUcsX0E
      rXX/m7HPXBwQJwme52FZFnEcMRIZ5BV977NBPwqEEBiqQTAXYWgmSLj0zTGODpYQvfB6bZmE
      lHSXKTocemGI2fPzKA39I09cTdNI4hj1AdQQJ0myhrzWRhDSj44rY0pCY242ZDEMOKFmNvB/
      EFCVEZeiOod1i6txk2fMPAapHHw1ibAVFX2THeQmLp+y8212UOdYVpIIR6qM6PaWO2Xn9eUk
      4tlSF0O6Tgi8W62iOQ63hM+gSHeYfQO4C2iKxp9NV/jWzXn0bh2nz8Yp2TzyK0fRbZ2Zd1J6
      xXar91Yq1Z2Ioygt2YtCtB2WSN+qgk1YJn84P8MRxaSg6LxglZjES/sbsLbY7nrcpCZDPmMV
      UITAEAqjYZMnjByjUZOMqjAReyQybSqvKwrNJEYRgoaMGA1cTlmZDRS5Ua/JMc3ZMG6buWIS
      UFXJPxsYbI/5dBDwe9UKt4yEkcDnbcPbN4C7haIoGKYFdTCkhaarGI6B3wyI3BhN21r+REpJ
      KALiJMbEIgzDNFq2DnGS7Eql6LCQ5S3PpUuTPFoIUT3B9aRJJY54LMxioDCXBEQi4ZPmqmRk
      n2qwnIT8RF2mEGs8rmfbkzKUKdPUEKlrFEnJf1ma4OSQg1hnAgcMi0nX44Sxtav53foCT5g5
      akrM032FNQvOoGHwfAyvaSH/qxiiG/a+AXwUCCHwJiLe+qMPyB3MsmnRMStSfQMKhSM5Fq4s
      k0xJFmuLqKpKqVQiiqLU7VlhTCpC4Pse1i5KJAoh0Ao5MprC73Z3M9SRma1HEd+6NkefsJiO
      PV6yS8wkPtOqj6WovOe7/MJAkc8Venh1bGHNfVM3aHXcrgRNTmt5vCTBWRfrX5YhU/icIMNC
      HNCl6O1DdbBCP7dQmUsChCXoNYw1LF8hBEEcczRUuBInZKt7QBz3QUMIgTcXIByXzONZmu83
      0DWdWImQCejoBLHP6V9+BCFh9C/Gydn5ttao53mpwK9p4vs+iqKgaxqlrt1Zd607Dv+5XOYr
      lkUjjDieyzJkmvT3WpzKZTiW2FxcaDAf+nyhv4cB0+Dq/DwzMmE4jMhIDcTmihq+TGjEMa4a
      MRsGHDFTIYNGHLMkIw53ORyQNuemauiJwqWkgdNq0h1LTEXljFngVW+J3xjenAr9V4YGeHOu
      wi96OjlF3TeAewFb2MRjMQvJMsXhLPlem/L1GlJLCD2fY78wjJkxiMOE4qE8sxdXV8EWq9F1
      XZIVDouUksAPsE2QysZC9AcJIQTzpsm0F/LlUhffXJ7nuVKJ5TDgoJ1K1B/JOMx4Pm6YqkgM
      GwYf1Otk3JgT6kbXpoUPvDon1AyzUiOrqoRIJnyPRT3kmVKBkq5TiSKuJQ2+qPVyQmSIWkrd
      K8mBWhJhmgqZDtHfTmhCcKavwDvLFW42PwYFMTsFVVEpqkX88ZjKzTpJVSDLKoNP99I9Ukpd
      CEOl92Q3iiLaLk9nnWynG3Sip8S/+atfQduFlWVCCL4f+bxer/DCiUHOx016LHONu7EQBPTq
      RluEShMCDdFWqeqcnItJyIKMUKWCLVR6hcm5qMaY5jHQbfGlvl66Vs5ERV3nn5wY4Zbp4ckk
      vW+nmgeQ0zSCdT2hOxcRU1F4rrvEF4d79p4syoNEuxTTU1CEgpACxRb0HF8dr/xglqOfO0T/
      oz2EjRAraxI20pWyVZdgWRb/4le/yFCpSF/G5sqtKXQkIomJ2B3SKYmu80GS4AjJl0f6mag1
      GdT0dkj0WqPJiJ2GK2d9n7NRxEQYcF76ODF0KRoCmI0DvAgaYcSIloZUb+hNXj7Ux0HbJrdJ
      VEoIwZG8w9lqme7EWJNc0xH0SpOfNsscz23MJXSO3XjTvXcGsNuFnXYSrRUnk8mg5gUDp3vb
      mdVWDwIrZ3LwqUEWri3TmG+2C3MAVFXhSmOBzxw6jK3rnMwa/J0zp3EUwY8uj7Xv8yDHWgiB
      UBRGvYhr5RoFQ+VGpcGP6k1eqdW56HksBgFfq9d5UwikYeBbJg1L50rscixUmIo8znt1ntQL
      FDoOtAtqwPFCGu70koTXppfRNYGtKlytN/hguc7lxSYygZnAT41OgLEinRLKhJoeMxP69Bmp
      DpBYCdcmpMZ5udogqd3jRFjLh903ghRRFBE3V5s/tNByexRFIdubAeZRVZXsQAY9r9N1sojT
      b3N2cpw+zeZYTxFT0yg5qeSgH/sIA4zwwfcVUxSF0RguVQIQYjV5Z5i8KiVC1zf42VHG5v9V
      XYSiEDdiCkGFZ7XVsGne15j0fCabLuPNJk80uhgte7yt1OiWFj3Cbp8jaklEI4i5IZuoVkLB
      MKhrEc/l84TA+VqdBEkCeHGM5yYcFxmOCweUe0yHbrfHfABp/N0IVzY5+vTBTbvLtKMgGghF
      EMcxYRBy5MVDGFkDv+YzYOc4M3KYH73zLg05w/sz86iGytALA/gVn+Da7pFe2SxrvZ3MpLVS
      q5toGheXXXJBjRiJiiCraLxxs8zjToaiayCAPsWiD2tDpDmnaOTQMBMFawjO9BSJpeTs5AJn
      MgV6czqJlIRS8uZSmaeU1SzzB9F9CoNuleD5OCEIA/InHQpDa5mPrUkxfXGWuRtL2CU7bZWq
      6HSdLGFk0sOelbf43txNfnJ+klGzglk0cR7r4akvdCMUQeiGXLp4lZx5e2blbkWLNt6nQMUM
      +GKul1cq82Q0ha5EpVs1GA3T/l63g6vFjDhp9lgBZEehvSIEphCEK+zbUCb8cVLjUv4+SSPu
      5cnv+R6C7duaJjIh90yGruNdXH9rEsPUyPVk6OroHNmsePSe6sEpORQPFFKN0sLae9aPadSB
      LrGqLt3S15+7vEC9WsMsmujaR+cf7TTCMGxHvfKJ4LPZLjQheNLJIxPJkGbhJinJ7naIZEJm
      QHDQsVBVlXfml3nSzrafX404SQKZ8HXqXC+mIl77eYC7RJzE+L4Pgi3lvCM1pOfUEKqu0n2q
      m9ANGXtnmsANGTjRCwJ6j3RRa3jp4S1nbEgMrXcjO4MMiqJQPFCg9x90c+37Y+QGMtRu1kkq
      EtMwd70xSCnbRepq0+NLuW5MRUUCfbrB+UaNQdXksttgULl9NnxZhtxMPJbGZjEVlZmmS0+p
      RPc6RquhKnwtrjFWWB2j/TDoXcLQ035X20VhIiNGyQrsok0cJlQmq3Sf6qVR8ahP16jM1gia
      IYqltnsMd2J93XJr0rcel1JiZAxUXSU3kKV0tEjX6RKhErB8vQyCtqbRbjYGIQSJpjLox5gI
      vl9dYDYKKCga1ThC9Qwy4vbRrg/6Y248nuPRq5JjcYZDic14tcl42KTHNNAVhURKfuDWuJQ1
      1zBd7+sOsFcPw7f7TrImcZc9KnoNrxFQGulCKILsQA6JhASuvXKFR758YvPXb7L6bxVmtgpW
      +/H8gTyl3yoCgsZCA5lIaqMNWBYoYm2Xljv5HvcLne8rFIWv6SGfbQacMrKMGDZSwluNCv2s
      aq9u91nlZJ0TtzzyTqbdovWgYiF9eG26zOeGSvy0XuU9x95QkLNvAPcYUkq0Qzq6beDXA7rW
      dbBvzNaJmgFdI8VN+2B13uduJ2oaUk1hF1PD6Dnezew781Tfr6Mq6q6TYxFCkJgGrxLwYsNl
      ouYRJJLu2MTYQtBq/bhkhU6PqZET6lq6OfCYyPLGdJnvmgHCyG64130zACnvrkHEXoEQ6Wqb
      P1za4Nd7VQ9NhZ7TvXd8r4/8eRRB/zO9FI7lmH9/kfjG7lyUpGnww/I8n44dFCFYVHwcqVEQ
      qYvYGsfN+D0DqoUuNuZbAFQEQQCLesLG6X8fleGE+PhN/hbiyYjlK0sbRtedb5Dr3+xnuHvc
      Te2wEOl5pHiiQBzvXtFes5DjL5/o42+dHuKvnx5kUU+Li2/hcl5WmE9Wi407J3pB6CzEW0sx
      DqsmGbH5Wr+rZul60aKHFbqq03y/gbu0VtpPKKB+CCXkewEpJYqmsJtHNzRNXqvVgJXuMQMO
      tzINin0Kv3m6nyAbbSC2ASwmPrdCj+l4Yy8AgKyiEcThpnNrVxmAlJIw3PyDPmzQFI3l9xaB
      1dXa7sky/cEsQTPEq67+WEEjIGyEbb9//fdf//jtnl+P1uPlKxW0LSQKdws6l4eTuQy/fKiH
      T3cXV/g8G6+PZAK5iN861I9TUHk7rnB+Javcgoagi43aoHEc76wB3G5ip8XYgji5+27luw1C
      COK5GHd5dRcw8yZ2X46liSpL42WCeoC8GfGSeILMxNqJud1k1jQN0zTRNA1N09B1fdvEHMDi
      pSX8a+Gu9P9bEELwzjYLYH9eZzEJqMsojaaRsqs1RWAIwQnb4fN9Xfgi4UrYaBPghBCc8pUN
      PSEURdmZRNjdRDN2ugj8fkJXdKqXyljPWTiOkwpe9eg4RYfaTJXiNYvf/uVfxjQN5htlRpOZ
      Lffk9UmyFlRVve3qX52sUX6ztutXf4CZLSTSpZQcsEzEQZ/XZhfoSiyUUKGoGPToGqGU6IAb
      R3QrBq/KOldlTJgkjIdNZgjpU9bKOu6YLtBuXnXuJ4QQRBMR9UM1tEMaqqqSJEk7J1DzAwwj
      1af5/CfOYL73HtfdaSolFz2jbzmp4zhu61tGHf21NhvnymSV+dcX0dXdT0+RccyXt2lo0Yhj
      alHE47kcn8wUiKTkg3qdH89VmC/6vFgosbyiqHFZiwgjL+3pto1H8cCWhFblU2d2s/XvvQRV
      UWlMNsgO5daIsgoh6OqIS+uaxueeeYYXpeTy9TF+Nn6RxshHj9hUr9fQQn2rev1dhb4w5Jf6
      +oCNOSQhBGMNlyf1LLqTbpOaEDyZzdJnGlgilVb5WaPGceHwksjyfaXavldLe3W97MuOH4KT
      JKFer6dS4ptsd9tt5w8j0l0gpDZZW/O9ZCI5mO3ZcL2qKDx6/BiDZteaZn4fdmHYLGqyGyGl
      5Oi6JF3n4T41CNqdHTvnSa+m85ZX53fnbvKnfo3/qJQ5HGnkVtpUta7rnG+t1993A2i9USu6
      06qUEqQdB33fb6si79VdQBc61dfLTP3gFs3FZvu7NoKNYbvWc8eHhnFuqTQnG5ve804XCqE9
      HGMZRxHP3OYgbyoK4boa6VBK3kzqDA1leX6gG0NV8IOAKRHSXFGYVhQFy7LWBArMmsuzs/79
      d4GklG0iVxRHIFNCnaZpWKaFpmnEcaon2aooa/3dS9A1HZZh8ZV57MccnEGHo0NDW9JFjh0e
      5tjhYf7ox99jKiyvoU2s2UluQzcJKxFid0W7N4UQgnPVGpUgRohWa9bUc+u3TEq6Tr9l8s35
      OQ7pNl26QZeqMWnHfGl4CENVeKG/m0+VcvzL89f4s6Syog6Xai91ap0mccznmwan1cz9N4DV
      OtfVarEWWnLgqqqmTZNXJEFaxvCwbN93A0M3CC76LM/W+HlwhZMjh7e9/rOPPMX/d/1Pt80g
      b2UEbsUjWojRH4LFRFFVVM3gmUxuzXeJpWQ28PlevUzjpafI5p/CVzUuLC3z5Og4n+3pXktw
      W6lMTFbmVVdX18axEaLd+mrHDsGtD7EVx11bp+Oy13aATqRUapXL9WmiOEZbR61+/8o1lj0P
      1dC5cPEC2afvrBnEejTnm6jsLvLbVhBC8JpIeN736e/ozawKwZBp0acJhn7pBQwzjWY16g0W
      F5aIpVxjAPUobqtr5PP5TRcGIQSzSswTPOBM8Gacd0grqvbaYXgDIkkQR/j+2nphPwhxDY2n
      nj/DE598kv4jBz7ULhiHMcvnKg/VQiINg1e9RlsvacvrpMTJOPT99q/yPX8tB+iDSr1dkrvV
      d0/imANJuvY/8MzIZrz3VtlfHMcPpFPKTkBICEsKb1++jGObuK5H1na4Pn2Lp597rj0BNKFR
      mahiFUyM3J3H8hcuL6J62kMR/mxBCMFZBZ73PYY6dFErUcStos2/oGW4AAAHn0lEQVTBlQnd
      mjOWbWF98TN84y9e43QUU48Tzs4vkyQJvu/jOBsb+QEMVAMeUdOirh05BLf+buYGdWJ93FcI
      sWns9mGHlBLyKkJT+N7YuziDqSRK9VaN4pEC7155ny/0vgTAZ557lk80n+Anb51lLju/7W5Q
      m6kzd34eRSqEUzG6+vAtHlLX+bnv8mvmahfN6dDn0b/9G2j62nmQJAnxQpkzhRx5TeU/fXCd
      8sqO2pkgXA9fASIJYgfCA62J3LkdJcnWcn+dB99OqZW9BmkIZCxZDmvYPTaKplAaKaLoCpP2
      Lf7nK3/I5dFRhBBksxlODB9DXt/oFgohCJsRN747weSfTqPMaIg5FUPbffLqd4pwM+9n3VeR
      UnL97Qt8amKKI/kM3Y7Flw4PoCobK9/Wo6KJNlluRx3EzYzhTl6zFyEUCMseI4/3opnqmvOQ
      kdERh+Ds8k/5w1e+QbPpcuTIYfJark3oao2lXw248a1J5KzANjb27XrYIITgmkynZ8slNhCM
      nR8FYPzSdeq1BtfPXeQTo2MUTb19XbepoygKmUyGUqm05VhI2+DHssaFqP7gzwAfR0RRhJa1
      kGGy6Y/UWrmMvEFQCdouYC2qsTxepuf4apnl/HsL6NHD5+pshyorKoMru78C1C6PsfzIUQ69
      fR7503OcAIZL+fZYuVHM2fEpSoU8+m36Kiiqyrt9acj9gRvAx7FuOEwijJxBMt9E1dY2jevk
      RckEmksuZ996k3KzzHJSxiwY7euEEITBw5HouhvUdY0bvsdRe7Ud0gnfZ+CV1zjSIXi7hhWr
      CGxD54iuMHkH79H2Ru71h9/H9pBSkmQFiRczMFxoy6JsVuwiFMg+6TCRu8n1yjjZwSyZ3kz7
      miRJSJq7Tz79o0LTdb4RevzIr7EQBCwnMU/0lDiS29gaqRqELHgBpqryq6eOoN6GTrHhve7l
      B/8w+Lit/gAiq0IjIHeqe1OOfyeklCzdKFM6kh6QO6+ffWceUVYeqlDnnWLaNKgVLIKeAo/a
      FsNdxTaZrXWGXGq6/PMfv4Ohafy7l57h969MMB4kiLs4Y+7vAA8AwlRQESjq2uFv0UI60Zhv
      Up5z8evBmsUidCOqH9TW6P3sJQgheKdc51R3kf6s3eaHdVJqdEVhIJfl7z92lMtLFb6/ULur
      yQ/7BvBgoAiy+c3DlK1VrhXZqC+6FE71srzoMXNpAZlIZCyZ+ckcutj9RS4fBWVUXr01l5aX
      xjFRFOH7PmEYptleAf/Xs49yrJDlv12fQXyIkPkDd4E+jpBhQugn2La9ZltvEQA7iYCtMla7
      L0sSxsxeXiSY9khm9777KITgQrnOF4ZlW3C5tRO0GMSzlRr/9oMx5pLNi+Zvh30DeABQshpe
      GON7ftoj1zAIw7A98Tu5UYEXobf+ratUJmtocwraFjo3ew3KyqT2PA+EIF5JotbDiPMLZb52
      c57yR3BkPh6juIvgBz7GQBeU3XQVUwS+728ph+LNN4lciTXgkMQSZVF8bCa/EIKfLdU5eG2S
      SMKlaoOJZoAQ0IwThL414e1O8fEYyV2EJC9QLQ3D1BDK9nu2EIKjLx5k/Ju3aI6mP7yuPFwE
      t48K1bT433M1aFFk9NQVulcCF/uH4B1EnMQwaBCWPbKlO+sCr9kaeq+Grmlo6kZxp48DxH3s
      O7dvADsIFx/rQBY1TCgezK95btvqt72X69o12HeBdhASUE0NP2ySxMmGPMB6eFWf8tUK0UyC
      9hAVtjxM2DeAHYSWKCRBjKkpW/r/cZjwwR9cxlRNCASGZqAp+z/T/cL+yO4gYivV63ecjb58
      W7vGj9BDA1OxYG+RPHcl9g1gByEKKmHNx+7ZeABevLJMc8ZFCh4KDc+9gn3HcocgpaR2o8zc
      j28SeZsr4lWvNIjGk1RDaB87gn0D2CEkSUIcRWimRq5vo8yJ3W3RTBrblovu495j3wB2CHEc
      Y8Qa+dO9VKZqG56vXK/SZXXv2Rro3Yp9A9gheL7H8tIyXrnJ0vjyGtpDEif4S+FDpeGzV7B/
      2tohCAQJErs/S0ZfLYIPmiFj355ANBS02+QF9nHvsW8AOwApJa4RYPVlMLtszGjVz1+8vITm
      6gj140dx2A3YX3J2AHEco/qC3jMHiN0I3V5dd3oe6YKuJFXO3seOY98AdgCqqtKoNChfnkdp
      BOSHcu3ndFvn0BeHCKOt+9zu4/5h3wB2AGEY0vSaOEN5iNdq+wfNkBt/NoVlWNvcYR/3C/sG
      sAOQUqLZGuFCgwOnutuPAcz8fA5Ru390331sj30D2AGomooMJYQJRnY1y1uZqOFNBPuT/wFi
      3wB2AIpQ0BQN348YfW2i/fjsTxfQkn3aw4PEvgHsAIQQKELgL7ksXV+kueQSNAKs3q1lTeI4
      plarUS6Xd/CTfvywnwfYAQghyOfyLNaWiBK4/NYUcTMkmfXotrq3zABblrXneiPsNuzvADsE
      x3HStkgVj/p4mbgRox3KEiWbx/9VVUXX9f3zwX3GvgHsEAzDoKvYRVj3IZEESy6Go+McM+97
      L7Q932/tI2DfAHYIQggKxSLd+S6ac3V8z6M5U2PgTC/GURUv8vD8jY2z7xVqtdq+EWyC/x+l
      Ftkb9SPvIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fully Vaccinated Singapore' width='192'>
      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
      h5NoUTIt/B+Z8h4MLkYr3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Import Omicron' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Import/Local Delta' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Initial Import/Local' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Initial Wave End' width='192'>
      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
      X1B3ZIW3E/8fwFPs0lgkTi0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Initial Wave Start' width='192'>
      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
      r/+uvgdN8oYfhbnAVQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Local Omicron' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Location Initial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Omicron Start' width='192'>
      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
      ZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3hcV5m433vv9CZp1KslW7bcZFvuceLEcYoTAiENQkJJQoDsBpYFloVl
      WXZD/1GSpWVZWGBZSA/pTrWTOM29SZat3nsfTS+3/P4YWZas3lznfR4/Hs2ce+fcO+e753zf
      +YqgaZpGjBgXKeLZ7kCMGGcT3ckX8VaBVblnsScxYpwFBgVgVS7seuDsdSRGjLNBbAkU46Im
      JgAxLmpiAhDjoiYmADEuamICEOOiJiYAMS5qYgIQ46ImJgAxLmpiAhDjoiYmADEuamICEOOi
      JiYAMS5qYgIQ46LmgheANw6sYEdF+oj3WztT+Nnzm3l452pcIWnOvr+zK5kfPXM5DV7D4HvH
      qufzg79dzl/3LkYeIxzp8Tc3Uu8xUFIzj26/fvD9iN/Og2+snPB7j1Tl0huc/esqq53HiyXZ
      g3+XVC7ggaev4PvPbuaNsizmMrqqsimD5n7zlI8b715c2AKg6fj+Y9v492cvGf6+YuJDP7wD
      m8NHf3c6d/739QB87qdf4NW6hFntwoN/uxavFCBOrwDQ3ZbNrb+9hnmpbj7Yv5p/27561OOe
      ePMS6j0GqppS6RsioHLAwYNvrJrwe8sb03BHJB7Zfi3f3F40OxcDlNXm8uKxnMG/SyoXsL85
      gZyEIL95+nq+/vzaUY974E8f5/f75s3ouxs6EunwGCZuCDz06M089G4BcOpejIZu1HcvEKqr
      FpK0uJi+6iXUeHUssMnRD1Qd7pBEcoKLe684wj9rIu8eWsnLFU72/+4WrH/3LN7WfH791hKy
      Mtv56Z1v8sJbmylz6WjzSuTpLdx4/RsUOTU+87ur+PMXX0IngN/n4NuPXk1pl5l7r99Nns7K
      o4eyiE8wc/eVR4k3KoTCRiKqRl5mO5+6rARZ1dBUHQ89cxWvlqWyZV0p/3r94cFrOFGfSVZB
      GcUVOfzbMxvITvQDoEQM/Gb7Zl4+lknBwjp+ecdePv3jj1GwsIeU9DqaarPIzOrgh68vxUeE
      VJ2BvRWpPPblF6mqWsQTVTa+e0P0e3YXL+MXO1bi12R+fs/LHDtSRLFLz/HqTPIW1vDQbXt4
      5LUr+POBHJwmAUdGzbD7nJ/Vyl1XHuDOjTXM+8qd/Oimg7zw5qX8cfcC1hZW8Ollvfx5fw7G
      0gQSzK+wQG/mBy+sx5bQy4OfeYPHX7mKDlmmN6SwIRlKuo1UNKawJL8RPE5O9Br49edfoLY1
      laClk2OvFlHn0zhSmUPhsnJ+8JEj/Om1TTx9OJeMjDb+9cpq/uv9+WBKw2kNU1WbxZKVxZR3
      5fIfz2wiogvy3Tt3YnSnXtgzwFO7l/GxTaXctq6Wp/YtOvWB3suObz/NO/tXUvTPX+InOwu5
      fE0xNxT08pP7nmWlzcKX/raKP/3j31hiNPOdF9dS35ZCpUvPT25/n+Xp/fzl/WXsObIMfXwf
      OiF62v98ehum9HqeuP81vv/HW0ieX84the187+4XWRQXASBzXjWP3PM+v3thK4Vf/zueP57N
      jg/Ws7NNx7Nff4Yj+zfw7PHUwa6W1WfSG9Tz1f/5MF//zEt8cXMVAKqqIzW9jYc/+xY7d11K
      rU9kX/l88uZX8em1dZTWZaPau/j2thPcsW03X7tuHxZ/Om/WJfDI22spzGsZ/A5PROAHn9rB
      UrvEX/YvpKkzmfawwiNf2c4Tr2+gozuLf9+Rz9P//CTrM9xj3m+9uQ+naqasbiH/8soSvvbR
      Dzh6aA31Ujd3r2/kn25/jY8t6+aTv/oIt165n2ydhQd3FlLdnEZbSOF7t+yjvi2FPi3EX7+w
      i9+/vpq7Pvw2q+NFth/PprY1hTaPabDNY//4Gr99ZT2aKmKN6+Phe9+g/NhK2s2d3H9ZLfff
      /BZ3r4neC1fYwL2/uoX7b3+df72yjjt/ez1er+0CngFUA88dziV4LA00CYPTyLeuOgGA32fj
      eLeBX9/3HOGQhaVf/BKfv/ro4KG9vQ6SUrtJt/tZn9/KB8VxJEmweVkt6Q4fN152hAe+ewuB
      eoV773hm8LiWXjtb17eQmNDDwniFdt/I6bqtIxXF3MNfv/oYbY35XPJfl/MfG7spzGvFYfGx
      OqebNpf9tKMk2j0ShekuzGYrAP0eO4+9vYbygnpUQUBRAcJ8aHUt1jFuyb1bj/C7tzdSUW/m
      P77QMfCuwO5jBTxTnE3IpydNjUrz0uwOrOYAFp1AT6+dlNQeEkxh5qf2Ud4x+vm7O7Lw2Hvx
      9zgw6FWK69K5Ym0JmRblVKOwhdYgNLenEJfUzrK8bl6vha2FVSTbAgAU5rbhjPMSZ/VRmOZi
      hzWIog5/Vi/PacNmDWBCIBiw8Lf3iyhpaUBRNeSBaxiOkRafxrqsHgxOkV5XdOl5wQrAifJF
      ZC8/yrNf2AmIbP7aVyjvN7A4LoxBr/D756/hj7uKcGAka1EVSTqwm0P84eVL+fHtH+Dov5L7
      /7yNwyfy+Ze7n+Xo3s2D5zZa+7gmU+aN3jC/y/AMvn/n5Uf58qM38H5eH62Gdtak+HnitH7p
      RIF//O3HKcxvpLsrmY+uK+G6DS089PMbwZXKy6VJbL+1kZ0vDz1K5kOF7Xz24Y+SjC16fTXz
      aA7AqpCZgCwgq6Ovce3mEDvfWcaORe1cveYYX/jDV7nuQzswnBwjqokn9+Zy57UH2d1gJUke
      uSjIyW0k0HwdX33kGo6eWMSCpUeHff7O4eX8fV8m75dn8tO7XmTtQhdxyka6/Xoa21P45NV7
      iTOHeGrXOlZn7uSO5b2c6LRhlW0sWVw1yV90bBqbsyjt1VGYq8cVlpAVEYc5xF/eX8Ul87oH
      Wvm5Z2Mrt//qZgy+BO64shgA4WRalC3LhAsqJri920lICjIvIbpmrmpOwx7XR5o9BICmipTU
      ZxAWI6yZ14EoQCBg4UBdMivmt2DXCRysSScjtYfseB/1bclIZi/Z8QFCEQP/9bcPEUkr5xtX
      lg/73o4eJ9U9Ztbnt6AXoao5lfiEXpKtkcE2kYiBgzXpxMe7WZLWB4DXZ+NIo5MV81uJM8oc
      q80iO7ON1rY0UlM7SDDCgaoM8jJ6qWpzsGlhG8U1Wdji+gn77KSnd1JZm8bqJU3oYfD4OD0c
      qMokJclFqi3MTd/7HA/+0x9Y7gwOu1d1LhMLEn30hjWsGMDoIzs+yL7KTNYuaibgs1HcHE9+
      iofugMCyDNfA9SZQ1u5AklRW5LUTZ4xeZyhk4mBtCvMzu0h3BJAjBvZVp7Mgq51Ua4SjtZmY
      bF6WpPVR1ZyKI66PVHv41H12RNhTk8wlC9to6kgCo4+w347Z1k/Y58BgdZPhkNldkcamghaO
      12cimPzoZSPxCT04jbCvOoN5GR30dieRndlGvEHhRGMmii5IYWYPHo/twhWAuUPk735xBx5T
      H/9976vY9edHWqWejkw+/ruruHpDCd/adnTiAy4SYgIQ46LmgrYCxYgxETEBiHFRExOAGBc1
      MQGIcVETE4AYFzUxAYhxURMTgBgXNTEBiHFRExOAGBc1MQGIcVETE4AYFzUxAYhxUTMYD+Dy
      wa7jZ7MrMWKceQYF4O677oIluWexKzFinHlOFclbmsuWjcvGbfzsznLi4tPmvFMxYpwpphQS
      GRefxubN185VX2LEOONMSQAkuQVDYP9c9SVGjDNOzAoU46ImJgAxLmqmJACuXplde33Rf4cC
      U/6yksNe2jyjB5F3t4f4f7/pwj2QvE1TNQ4e8VPXFhm1/UnqqwPsKQsN/l12zEd9nzqsTUdb
      GP/AeXu6wuwtCaAO7YamUXrcT1l9eMrXNFX8fWF2HTuVkUEJq+w56KOtVxnnqPEZec0aT77Y
      P+FxEU+EZ3b5xvy8tTnE7qMBworGob0eqjqn38dzlWnMAAoP/a53Wl9WcthLm3d0AXj4t93c
      flcidglA45+/00J9j0JZ9fiDMt6pIyvpVE6c0wfDX/+vk6vvqKPJC/1tQb7xqx7a6gJ8Z8g1
      /OTnbRyslSmvCTHXBPoi7Do2kJolonDft1rp9WuUzeC7T17z73/RxuG26LUvKzBOeJxoEFmS
      qx/1s9pSLz951I27J8Kuw0HSsww4raMlnDq/mZISHO/UsWWjhSee87NljZlXn+vmmSNhUjNN
      ZGoRWn1gTtBz13o9//RXD/NNGnmb4smNhHjpSJjexgBLb4iea8/bLp7YHSTkU/na553sOBjE
      /8cevv2lZGgLoKRbuO3qaIa06lIvP3/agxhR+dL9KTz8+24e/l4a9/9bG1/+sJV3XToW6zw8
      8UEIf2eQuzc6B/t8022JdA3MIv1dERIzTXzkQ3G88C+tgBPCEar6Jb75EQcA/t4wP/uLi5bm
      EJ+7P403nu5CNupYu96Gwx/i2f0hwjL85MtOvvSDLvIydXzmM8nMTxQpPuThufcCVDfL/OFn
      aXzqs41sXG+h0SvwnU/Y+OaveslxCjAvmrvt+AEvyzfHccPl0WRXZSVennzLT3VDhP/+USpf
      +bd2srL1fOyWRP74py4eeiCdr32/jYf+LZUHf9lFa6/M2qsTMAIEFV7aG+CQp4uv3JPI75/q
      48f3J/JPD3ZhkuCT96Sw67luvJJEUZGVm66wImkKf3jCzX1b9Pxwu59kVWH1dU4+ebkFUYSO
      rgjpuXGsXGDg2cc6cW508szvWyhYZGbnkSB/+88M/unfW0nKMNDs1vjhp+N4+Bk3dQ0hvvWv
      Gfzyhy0sXGrmUHWEP3wvhW98vwObTWRRkR1Hr5/XqhSyckwkhcKDY+fbnz31250JZqwDLF1t
      54f3xfP8m150ksCr73gB2LDRzr//nZOapggv7wvyq++kcf2GU6mtH9vl56Fvp/H5a8zsrlG5
      dLmJb3wlGceASGpDJoq/Pe/m2/+Sxvfvjefxt3xk26GyOkBqnoWTz6Rn3gvw6/9I48ZLLSAr
      /PgXnew4HMRuPTU75KywcXkWPPjnPlyB0WciX0AlGFIxAkcrw2Sk6PD5Vcxmkcde9uCwiLRX
      +ynthiS7QFAB80CfPR6ViKLRVR+kOwQ58018/e9TICiz8003n70/lX+4PW7Y9w3thcerEo5o
      9LeFaPGLpCVIBEJgNg1/8oYDKp6Iht0isufwwHLKJPGRjWbu+1wyS7KiHdqzO5rEymoQeOoN
      L+mpOvx+FZN55M9+2WUO/vVzCVQ1Rx8WuUttPPzNJN59rZefP3EqH6jequNLn02iIEWisdpP
      SqGD73wpCcWn4gtG7x0RleM1MuZ4PV/9QjKXpMCrb3lZdlk8P/pWGvt2R8+3eqODf78nbsTY
      OZPMODXiknwjIFK42Mi61RYKFplGtEl3wOOve9h3PDQ4A2zI1fGHF9zUHfbzyfsclO041d6R
      bUZq7+WZnXp0ImxaY+LPT7gw9ga59GonC1WRz/97J//5YDY0RG9aXoLAX192c7wkyA0bnXzr
      KykAHC3xU9Mqs/+gj6S1RoKCRIZF5pJLo098DHryHQp/3u7GqIOkcBh7pom0gYRX8cl6ti2Q
      ePZVN2uWGJHSTaxeaCBJp1G0xkZfjZ8PysLcttHES7u8XLnVQX3pSP2oYIGRR15wsdqpgi66
      PFm2zsYvvtnGy04BUSfw/lseLr3cQXtVAEIqecssGNwhXj0YIOCReW2Xh6o2ma66IJ2KxNX5
      AruaT31HYpLE2+96yNwWnVEKFplILVHYeoUZg12PqyXIdfNMPPV6P9etHz/P/vFiL0ebVTLS
      9ZR7VBhlpeRMN3Dsd128kqrhjsDudz3MW2JFH4oqXEG3zI73PexuVvnlZ8x885e9pKthkjJM
      gMzihROPnblmMDHWricfmHAneNfe42zZuJTKmgiLFhjo6YqARSLRKiKHVPYXB8iZbyTZDJ1+
      yHAI1Pdq5CWL7C8JkpYkkZhqwG4UQNM4djyAI9nAvFQdNTUhchYYB++zpmocKg6QmKYnL11P
      VVUAxSixOMcAmsqeIyEuWW3G75ZxyQLp8SIHjgZISZaITzIQb44+NY+W+HH5o4O5sNBMT0sI
      PyKrFg1ZI2sapScCiFYdS3L0HCwOkJ2pR9WJmDWV0toIa1aaseihpDTabvl8PVVVQdyKyOrF
      RgTA75EpqYuQESeSmm2gqTFCfq6BqvoQC3ONlJcHMNslNJ1Ibmr02aOEVfaXBJg334TTCEeq
      wmQnijjTjXQ2BenwwrrlJnq7wjS7NGwGyM81cPx4gMRUPZ4gxOs19A49cUbYf8TPosVmursi
      LMw10tYSorZDYe1KM0G3TElVmKKVFmxGAVSV6maFjHgBlyyQbIYWtxbtm6ZxvCxIUBBYvcRE
      d0cYvUNPd0eY/FwjNfUhcrP1lJaFCARlHn09wC+/mcT+4iDzsvTozBI/+mkbt98cz6ICM06b
      SG9XmIo2hQ2FZno6o+eLNwvDxk5W0plNVzsNARi/TYyLCEXlfx/ro92vcfftCaTHD0/Q+/ou
      D9u2nJ7p+tzigs0OHeMMIInc8+nEMT8+1wc/xDbCYlzkTGkGCCk6POHZU1RkTUQnqBM3jBFj
      jpiSABglGbshOHHDSeIJm2b1fDFiTJXYEijGRU1MAGIA0BGGQ54Lz9VhImJWoBgAPNEpkW3U
      WGMffYdc1Z9ZF4XZQIxM7LMWE4AY1ASgNSRgkzRkTUJCQThtMlCc689O52aA2PHahG1iAjBL
      KNb8s92FKSEoAcRgtFbwIY+IQYTeiICISr/sIF4/dj3gC4mYAMwSqu08E4Bw76AABAYs0T0R
      EAUNsxTEp1iwSv6z2MMzQ0wJjkFkoLB0RBNwy2AUw6iaQEQd/flYcqyU+obGwb/b2tqn9H2a
      pnH8+AkCgQAdnZ00t0QFsbm5hba2djweD3X19UQiEUqOlaIoCj09PUQi8jSvcGxiM0AMIgN6
      ryhAvwwOHdh1PvoiccQL/SP0gf/7yyPc9NEbKS09zvz5eTz19DNcsnEDTmcC4XAEh8NOwB/A
      7fGg1+kwmc309/ezYMF83G43mRkZNDY1s2//QSqrqrhu2zVkZWZSVV3NB7v34nQmoCgq69eu
      obauno6ODl5/402+/a1vUFVVzfr1a2ft2mMzwBzw6mtvUHKslGAwyFNPPwOAoigcPHR4Wufb
      t/8Az7/wEm1t7Tz2xFP09bn46yOPU1/fwAsvbmfvvpll6jgpABLgU0+N9jidm37ZMaJ9UlIS
      yUmJHDlazNGjJaSnp1FZVcUHu/eyaGE+JSWl7N1/AJernz379vPB7j1cumkjz7/wEh6PB4NB
      T1V1DR/58PVYrVb27T8IQENDIzffdCOiIJKTnUUoHMbv97Plisu5ZGNUCZ/NwQ+xGWDWcbn6
      cblc1Nc3UFtbN7hUUBSFQ4eP0Nzcgqpp+Lxe+vpc5OfPJy4uHqvVwnvv72bVikKKS46RmppC
      otPJZZdtIic7m/fe301bewfr165h34EDLFu6hAMHD1NUtJJXX3sdURCnPTgGBUAA/5Cw36H6
      gGFI+23XXk1BwSKKVq0kLi6O3t5eHA4HcXEOnM4EdDqJVStX4HK5WF20iqTERAwGI36/nw3r
      19HR0YnFYqauroHNl23CaDSiqiqCIHKs9DhXXnkFFRWVxDkcaGgcKz1On8vF4SNHsdtssyoE
      sy4AmqZS0dDP4twE6pv7MFpMSKqMJwKJtmgsgCsskGgbPRb1fMdgMNDe3oFOr6e+oZH6hgb6
      +lxUVVdjNBg4fOQoBr2BtPRU7HYbTc0tVFXX4HA4aG1txWwyUVi4HEVRqKysYuvWLTz+5NMs
      WVxAd3cPZeXlOBwOnnnueT7/uXt4+L9+z513fJyU5ORp91kesgQKnOaaZRTDhGU9msbgUmh1
      0SoAPnzD9aOe7/aP3zbivUhE5u67PoXRaCQnJ5vPffbuEW3u+swnB18XLFoIwMqVhcO+c7aZ
      dQFQZRUVDZQQimTE748Ge0tAZ5+XGr9K0eJkFL0TRZWQdZbZ7sJZQRsIzjRbLNx2263YbDbi
      4+Noa28nPiEBhyOeO++8k4aGBsxmM6IkIiCg1+vp6u4mJTmZru5uHHY7VquFPXv2UVhYiIbA
      9dddRyAY4KqtW6lvaCAtLY2srGwEQeKOT9yO2WxGQxjsw6QQ9Mi66OZWkBAnVz5BQULWDR8W
      Zh2ogjAYvnns2DGSkpJIT08f1q6jo4OUlBSEIUqDHJFpbGpk/vz5KIpKZ1c3yUOE1e/3EwwE
      cSaOv9HW1tZGXFwcPp8PRVZIS584RefJ6xuPWRcASa9DLwogiETCIdCijxQF0Bv1OM0RfGEV
      O71IsgmdeGE4w0WGRPdmZ2UMvNLISEsFNBYXRM2kC/Pnjzg2KTEBgERn/OB71227evAcSxYv
      HHx/cUH09eqiFQDMy8kacqbRd3FHQ9Ai6OToTqmsSIgDwhOOqOjkkR66Q6/v5VdeQ5ZlPnT9
      NlyufhITnVTX1OLz+Vi2dAmFy5dRWVlFbV093T099Lv6ue22W9j+8qt4vV62brmCmtpa9Ho9
      +QsWEI6E2fXOO2RmZtDb20dGejoNjY3kZGdTUVnJ9ddvY/fuPUg6HX6fj3AkQl7uPGRZISEh
      HkmMBuJ0dHay7dqrB/t58vrGY9aV4FAwjKpBe79Csl0kMy2OeSlW4hOspDst5M1zIioXXn6Z
      k2iaxvaXX+WDD/aMah7s73fj8w23rx8tLuFEWTlut5u/PPIYDY2Nwz4/fOQogcDcPSgU7dQT
      OzgJ7/Tu7m6uuHwzr72+g9raOlpb2ygrKycYDPLW2+9gNBp5970P8Pp8xDkc3HTTjXi9XhbM
      z8Nht3P4yFEcDgcGg4HSEycoLT2BJEmEQiGsFgsf7N6D1+fjnXffIykpiZaWVgoKFnHo0BE0
      ICE+nt5eF/sPHOREWTlHS0p49fU3aGxsQpanZiqd0QwQCIbx+wJY4hyYddGbaDQZKJhnOK2l
      xNAQbKv5wlz/A0QiEfbuO8AnPn4rP/nZQ3zyjts5WlzC8uVL2bNnHxpgtVj4wuc/yx//9H8k
      JSXyzrvv84XPf5bnnn+R67Zdy+NPPo3DbsPt8SAgsHTpYiqrqtizdx/JyclYLRbqGxrIzsqi
      s7MLn8/Hl774d9Puc1gF80A0Y3gSk8gn7/wEq4tWDSiy9cTHx7Fo0UIW5i9AEAT8fj+Xb76U
      2rp6CpcvIyE+nvj4OKqra1i5shCb1YrVakXVNILBIFaLhaPFJRiNRhbMn4/TmUBtXT3Ltiwh
      Pi4Oq9WK3W7j0k0bSUpKIjMjnaPFJRStWsHiggJ6+/ooWrmCE+UVSJI08QUMYUYCcLSsEZfb
      R1JiMuuWZ0x8wEWAoqpceuklvLT9VfLz5yPLMvUNjej1euLi41i+dCmd3d2EQiHcHg9+v5/l
      y5eydMliysrKOXK0GJ1OQlU1bDYbBr2etrZ2Ojo6WVywiPLySq7+xMcor6iktrYOs9mMyTz9
      IKWwOnzhNJkZ4KRCunbNatauWT1qm8LC5RQWLh/23o0fuWHMcy5YcGppmJycNOJYgOuvO5WZ
      PCPjlP6Rl5cLwMqVKybq+ghmJADxBjClJZEQHz9x44sEk9HIvJxsNqxfi6IoyBGZz3zqDuLi
      ovmAkpISqampxWw287Fbb8ZmsxIKRbPf3XLzRzl+oowtV2ymr88FMKhQOp1OKququPEjC4mL
      i+OmGz9MfHzcjJdG8mlP/JB6cblEz0gA+sICqrePiCyQm3phWHNmiiAILF2yeNh76adZLAoK
      FgGQk5M94tjly5aOegww+BlAbu48AGb67IloDLMdhS6yCNUZCUB+RgL7j/u4vChWNeZ8JaJN
      bgkkhKeXD/ZcZ0YCUNPaiyRpVFS2x3SA85SwOnwGiIyhBOv6LszCKDMSAIdOozmgkB1nm63+
      nLeI3uo5OW9QNWISZz9rtaBE0zeGVAFxiARMRgm+kJiRAHg1HZlOA+HA3KcVP9eRfHMjAAZV
      R1A1YNXNjW9+UB2+GRS8yJTgaW+E+bxBli7MJC0xjtSUkR6DMWYHvSgja7ph2bJnk7DGsBlA
      0S4uRXjaAlBZ14qk15OdmUhr64WpIJ0r2HUePMrcpBk8fQYA8Fy4G/UjmPYSaMXiLN7acwJF
      1LH1kkWz2acYpyEKUVc3RRORZjmTXmSIlyeATojGBifp52jKOceYtgBIOh2ZKQ4wWjCI58a6
      URN0aLrzazkmaBEE2TNhO7vOiysSR7x+4tpfUyFymjzphWhs8MXCtAWg5Hg9VqeD8uONhBWN
      VQuSZrNf00LTOc679B1CuHfSJkaDGCak6jGKszdC/acpvYIAXkVgKp6lAC4Z4s/D8Kpp6wC5
      GU5qajtZs3YRTuvEBdlizByLFCCojF/ZZaqcHgAD0D8NHeDlHpH2uS+yOetMWwDcHj/dLj9v
      f1BGbXvfbPYpxjiYpQC+WRQC/yiD3TuN5AseReDVHnHU853LTFsAkpPsXLZxGXd8eC3ZzjNf
      22kyhEIhjpUeJxQKUVxyDL8/aktvaWnF5Rq5lm5qah704e/s7KK+oZFgMERFZRWqqlJaepxg
      MITH4xn06Q+Fwhw+cpTyisoppweZDgYxQkTVz5pZ1K+M1N/6R3lvIlwRqAqIvNZ7fuVZmPaq
      zWi1k2OFyvp2FuWem75AdfUNHDlylJaWVmpq66itrePmm27khRe3k+BMIDsrk9bWNpYsWUxP
      Tw/9/W66urv53Gfvpqq6hh073yQrKwudJNHS0oLfH+D4iTJq6+r56I0fxuvxsnLlCnbsfIur
      tm7hyaf+xvp1a8nISKe9vWNYdNJsYtd58So27LqZV1X0jbIE8k7xKa5q0CsLGMXzbw9h2gLQ
      1tLBwYoOFFVFb7GRl3LuuUOoqooGXLJxAw6Hg/r6evx+P8fLyrBZbbjdHpKTEnnrrV1cf921
      VNfUDh7b0REdwKWlJ1i0ZDEej5v6hkbuuetTFBcfA06l6MjMzGDB/PmkpabS3NLC0eISkhIT
      kWUZnW72NUNJiF6XqgmIwsymgsAog903hRmgOwKv94ooA90YTac4na4wdEQElt18g0UAACAA
      SURBVFvPvql12r9OemYqCa39LF+YQlWr75wUgEAgQCQS4fiJE1RUVLF16xV4PF6+8fWv0dnZ
      ya533sPpTOCqq64kOzt7WOYBVVUpL69k27VXs2fvPlYXraKpuYUTZeVUVFbhdCbg9XhZv34t
      KwqXYzKZWLduDQCSKE4rOmkq2CXvrOTw9KsC0mnjPaxG9wf0k5ADlwzv94vEDVxqYBKuFPvc
      IpLA+S0Afb392Mx6Hn/tODduWzNqm+qGHsw2M3pNOStpUdasLmLN6iIANl2ycdhn83KyycrM
      HOZ3P1QAbrv15sHXJ/32Fy6MBravWzv8elcMRC8NPX460UlTQRBAL0YIqzoM4vRSBka04eGQ
      Q/EpkzNr9kUEnLpT7hSTcaYr9QlkGs/+4IcZCIDBqMfrD3Hp2nwcptGedBpubxijxYwnpJyZ
      tCg6+7DUICdOnCA7Kxu7Y3Q3grT09GHW7sbGRlJSUmhra0NRFPLzowNeVVS6e7pJSUkZdnxX
      Vxd2u52enh4kUZpUqo4RDElPMlWMOnCHE3DophcV5pU1VDGEelruQ03U6MeKTTfxDNaHDKLC
      yXHv1zRk3fhGkT41iEERkHVn33w+bQGwWi2sXpLJH57ejXLleoryEoY3UFXy85JpbHOhk8Qz
      khZFFUAbGNJHi0vYsfMttlyxmf/9v7/yhXs/S3HJMS67bBPl5RW8//5ubrjhetauWc0zzz7H
      smVL+cnPHuKhn/0/XnnlNRITnbS1tdHc0solG9az8823OVJczOfvvYfi4mPc9NGPUFFRSXd3
      N3X1DSTEx7NkSTR5VXp6GkajEUmSKCsr5+abbhyWK2coQ9OTTAeLZiQSArM0dY/ccBgEVcfp
      G/kGwBsKoNNN/JQOhEVE7ZTlJyiDTh7bczWkgqzo6Alp6GTflPs828xIQ2to7mbt+uWszE0Y
      +aEo4fO6yc6IxzCwBHKYJExGCV9AZq7TkubOm8figkXU1tazckUh/oAffyDAnr37SEpMJH/h
      AjasX8vBQ4fJzZ3HwUOHuWrrFtLT0zCZTSxfvoyXtr9CYqKTQ4ePYLPZWLmiEEEQUFWVEyfK
      WFywiO8+9TSbN19GJBymq6ubw0eKWbx4Ee5+Nz6fj/j4OPpcLpwJo9yjWcAkhXBFHNMSAJcs
      jLrO1wngnuSq6nSLUVBlWBa5sdoHVQGvAra5U5MmxYwEoNsTIjfTwqHyDtYtSR3xefqgm7Tu
      jKdFCYaCdPf0sO2aqzlytBgBgfg4B8uWLSU5KYn5ebkcOHiY1UWreObZ57h+27V0dHYCkJeb
      S1lZBf/4D/fz/Ivbo2n6BIHOzk4C/gBms4ns7CwSExO5+qqtLC5YhCCKtLS0sKJwGRs3rqe2
      tp601BTe+2A3Nqt1Tq/VpvPhka3YdVN7onaEQT/Gc2iy7hDeUSxGtUFI0YN9lNHVL0dzkKpa
      dMPtbAuAoGnRLZVdTz7Alo3Lxm28a+/xYW3q69uobnVRtHIhidapy9Jsl0lV9c4L2hdoPPoj
      Dhw6D8IUzKLPdYkc9o4uAWvsKjclTazRPtgk4ZJPCYFfgdV2lU0OlbxRNqyPeASe7pJQNbg7
      XWGx5ewqw9NehxwpbSBrXjpXrZ9PXUPXbPYpxjRw6Dy45anFDIzn9emb5GaY57SlkgDUBgTc
      Y+wleJToDKATRh57Npj2Eig/M45XdpUiaiobNyyd+IAYc4ogaEiCgqxK6MTJjd4+eWybfUd4
      Ynt+RIsugYaaUXUCtIaFMQf3yU02QTg3Am+mLQD2hHhuvPLcSoglaJE5S98R0XTohdl/ZAmR
      2StGZ9P5ojED4sQxA5oGvXJ0wI5GR3h8ZRai/j+noxOi63rPGDrE0EHvm4bb9WxzHnpwj40g
      e+YsfYesGPGpBuL0EwevnE2MYoiQasAoju+b7FUgrAqMZepXNIGuCKScnuZ1CO1hYYQSLQhg
      Ekb3MYLhSyv/OeA3dH657p1FTFIIm85HXyQeVZt4eXC2MEtBApNwl+6RGWH/H4pRhPrg+NfZ
      GRl7BhlLhxiqME9Wz5hLYgIwBSRBJV7nwiPbCSpnfxdzLKySD58y/g57Z1jAMM74FgVomEAA
      eiJjfz6WQ91QxXsqTnfjURNNcURInbpiHROAKSIIEKd3oyDilefWvj8d1MZ+dEKEiDp+KpXe
      iDDuDAAjZ4D6IDzUJFEdiL7fOY6iPNrT3a8Md5abrRng/X6RiAZ/bhd5vntqQzomANPEKgUw
      iiH6InFo58iSSG3sJ/z4MbRmN44JUqm4JjH4OiPCYIRXRIM/tkn0yQLPdom0haAxNDUB6I4M
      T8PYr4wMyp8OXWGB7jBU+UVKfSKNQXi+S5xU0FBMAGaAXpSJ07lxyY4xi0qfCTRNI/xsGZFX
      qhCMOpTjXQNxAtFUKqPRN87y5SQS8EC9RHMISrwC8oCgu2WBnzfpMI4zeryqgOu05UhnWBh2
      jIjAjr6ZD0G/Coe9IoIABhF+06Jjr1vkqHfia4wJwAwRBY0EfT8h1Yh/lgPWJ4vW4UOt7Il6
      ogFKaQfyuw3YJS9hdXS3k75JrJX1IhhFgTKfwD63MKjwCgJYJnBhMAmw1z18eHWctuwSBSY1
      SMdDHdiLOOQRMA6cyihG+376949GTABmCZvOh4hK/xR3Y2cDtbIHwXRqBhJ0EsrBVlBUQqpx
      xFJA04ZbYyai3C9SF5zaUBEE2NMv0C9H1/59kdGtSj1DllnToV+OCkFjSBixZ1EbFEaNeBtK
      TABmEZMUwiZFTaVjLT3mArVp5MaXpmmopZ2j6gL9CoMhjJOhMnDq6TqlfiHwZKfIIY/A37pE
      6gIjT6IXxtclJqIrEo1oSxplBaoT4IR//HPHBGCWOWkq9co2guo4u0izhBZRUFtGbs4Jkoh8
      sHVUXaAzLIxpvx+NeN34O8LjURUQ2esWKfeLGEYZbXoxOlN0TzPX1yGPgEEc3atVJ8AJX0wA
      zjgnTaWqJuGR5zZWWq13MVZ9bK03gNriwS558Q7pR2dkcvG+s4FBiO4YWyRGxB6fpDog8njH
      1P2iP+gXKPGNP4TrggId4WgttKc7R7Y9IwLQ2e2hps2DyxNCCYfp8V4cySctUgCTGMQViZuz
      3WO1vAdBP/rgEQwSaot7MH44NKAQ90ZGrpfnCnESCrMoQEtI4I9tIq/3CiMK941GZxie65Im
      nMm8StRi9USnyHv9Im4ZmoZ44J8RAfAEFSRFobPPy9HafhLmKCA+Imv8docPRT03Aq7hpKm0
      n37ZMaZFZrporiBK+fiu6Mq+ZrSQjEUKEFDMRNToU/FcQy9CfVDkPZfEA/USP26QxvUWPewR
      ME1i9BpFMIlwwC1iEuGxTpG/dEiDwftnxHgdkdWRMcGjLQhnyPsVYQ7WRTjxFzchWeOa5UYK
      c/SkxYvEW87eak8QIEHfj1e2EtF0WKXArJw3sqNmzKf/STRZJbK9Ev3NSzBJAZ7otNIZDk24
      C3y2iM5MAn4VftUscU+aQoYxqrRLQvTp/bZLpDYwtVnMMTDSy3wiNgm+Wy/hkM6QAMxLsc55
      THBnv8JzB4MYdAKyCpIosPN4iFeLQygqFOXqWDVPj14SkESo6VAoboygk+CfP2wjwTr3AmLT
      +QipBlwRB3E696R+QE3TwBMGo4RgjP5cWlBG3t2E2tCPoBu/34IgoNa7CP/pCO9uW4FPtCEK
      50dJq6Aq8HCLxEKLRplPpNCq0hERpmTCPZ2TgiAOCNkZEQCzxTgiJngyaVGaexV8wehyRqc3
      IEeGu/iGFQ1fSMMf0mjpVdm4bHyFs8UX9T5XVNCbYNVAXY9nizUsRgGnVUQngUkvYDZEnzD6
      IZrbSXv6yYGrqBqqBhEZZHWg3qgQ1UmN+pG+NqoW/W5ZFciwJ5Le2xVdAMsD87E0YM5Q1Ohr
      TUPrC6F1+kAQEKx6MOvQegOgc8JG56S96TVVQ5USmGfTs1BMwqucA+FYU2CTOeqOMd80uhdr
      IKSiMximHLMxpwIQCobRdHqIhHEFNVLj9DR1BchJtSFFJk6LkusABuLqw6oeWdNhmaXlwzlB
      wsmn99BlzIAUnRzaOSbg9Dw709txvg4PcG7HM0wFVRPwDGw8Wh0+dMLUd9TmVADaW7rRklIJ
      9vnQAxVuyEgw0NAdYl7S1NyJDWKEQMQM57AABBUjpmmkJ4kxNcKqHr9iRifIOCa5lByLOV34
      pidFlyR6ScQkiSiiiN2iR4lMb+/bIvnPmr/NZNAQzpk4AXlf89nuwqyiaeCVLfRH7KiaSLze
      jU3nn7E5dw4FQKOpN4TP7SPOoiMgisx3mjje6CM7dXrpEPWiTGSWTYmziVkKElSNZzViTDnR
      FV3v17nOWh9mE1UT6I/YccsOTGKIOL1nVmfZOVwCCSzISx7862QFseXzZ1ZMwyL58MmWOSsc
      PVOi7tFxJMxyMbvJoja7Eax6NPf5vRQ7ucwRBRWHzjulfEdT4bwLiteLCj5ldro9V1UlLXo9
      Ac08YWD6dJiwqmRYQTnWCeFzIOB2imgaBFQT4YGg/pmmfp8M550AwEDM6yzMAnNVVVIkaseZ
      iyE4YSa5sIJa2wcT7A+cS6iagE+xomoiFsmHRT972QIn4rwUAL2o4J+lWWCuOFtagBaUUXsD
      CA4jmqaNmZX6XCCi6vArFgRBwyZ5Z1ztZjqc26NoHKw6H17Zim2KCWEvdLRABDHFihaUIaSA
      aWY/8VzmW9U0sJzcVGT2Zsyp5Fs9f+bJ09AJCrI2fuaD6VJbV09Vdc2k249VHTISiQxWp2xu
      aaG3N5q1rrU1WnfA5/NRU1uLLMscO1ZKRJaprqkdrGY5LfynPG01/7ntdXsuTE5nZAaobezF
      E1LJTDTR3hMgZ14ijllwhrPNYrXEoZxeIGPrliv4YPceVhQuZ9/+g2zcsI59Bw5iNpnIzZ3H
      s8+9wJVbriApKZH29g6SkqIF8hYtzOf9D/ZQXlFJc1MzkiTxlX/8ElXV1bzz7vukpqSgaior
      Cgtpa2tj34GDKLICAhStXDlYhG8qaEE56iAnClFhcJ67+ybnAjMSgJrGLjraOknOzmZhxtjW
      lGBYJhDScPlllufHU9sSwJqXPSslkiKaCVk3zcir00oqncRkNrN8+XJe2v4yiYlOnnvhJdLT
      06mtayASibDzrV3Mm5dDb08vhw4fJTs7mxNl5Xi9PpISnVRUVvGZT38KnSRRtGoVJ8rKSEpO
      xu/3oyHQ1NzKjTd+hL1795GXl0c4EqGn18WmSzbQ0dlJTXUt69avG93PZ7ySShEZTdWjCXrQ
      qygBI+o0yy9NdI/OaaZQdmpGAuDqdWF0OFDC4zsgKYqGHhUEKK3uJTktcVK+QJMhThDxB81T
      Lg4Bw0sqDSUvdx5lZeWDBTKKVq2krKycvNxFdHR0sGb1KpwJCfgzM4hEItTV1ZOSkoLDbuNE
      eQWrV68iPs5OW3s7FRUVXHP1lVRV1eB0JoAWLaFSWlrKNVdfSXFxKdmZGdTU1CAKAv0uF9de
      s5UD+w+MOgOMV1JJ84SQtTCCFr3XgrsHnTyznenR7pHX6+Pvv/hlHv71f9Le3oHD4UBVVXp6
      e2lpaaWvz8UNH9rGo48/id1mp9/tZl5ONkWrVpKZmcG+/Qd4afsr3HnH7ZSVlaM36KmoqGT5
      smUUrVqJhoamaoiiyPu793D9tmt5/oUXKSpaxeKCRfzgRz/hU3d+gmeeewHdwKw6VNmfStmp
      GQmAKAqEZCX6o45DYcHI6jGzhSSoqJo0YSbjqXDV1i2Drz95x+0ALF2yGIBFixaOaD9Wdcj0
      tDTuufvTAMzLyRl8/1Of/MTg6wXz5wOwbNnSgf+XAJCXlzvlfmve8HDz02xknRqFQ4ePULh8
      GXv3HeDgocMYDQZ8fj/XbbsGtztqu7fZbJiMJpYvX8ojjz6Oy+Vi1cC9OXzkKBazmd7ePgC8
      Hi/paWlct+0aHvzPX6FpGomJTiRRJBKRefLpv4EGVVXVBINBLt10CQgCTmcCpcdPoKrqtEvS
      zmghbtDrqaxqRmea2e7uTDmpC8wlPb29VFRWTbp9KBSirr4BgMbGJjo7R0ZuNTVF/XXa2tvR
      ZkGbV5vdYBgyEJSpCcBkQhEB3G43W7duwe1209XdTW7uPNasLmLB/PkkJyeTkpJMS2srnZ2d
      9Pe72bB+HdnZWbS2tgEQ54hj3bo19PT0kJSURF5eLoIg8NrrO0hPTyM9LY3ly5aSlJREenoa
      C+bPx+vzsXLlCpYvW8rR4mKOHDlKotPJ5ks3zage87RLJLU0tVPb4aWr18uqlfnMT536AJzN
      EklTCTI5yVRMfD/88U9ZXbSKiopK8vJyESWRlORkVFWjqamJ3Xv28eMffo+y8gpaW1tpaGxC
      EOC6a69hx863uG7bNRw6cpT8BfNRFRVVU2lqaiYtNZWnn3mWn/z4B5P6Iccz8YUfOxaNHRhA
      KkpDd0XupK4vosErPSIfPa0s0nj3SFEUSkuPz3lN5KkyFTPotJdAGVmpeGXYuCKb2lYPcHYr
      xTt0njmxCJ3kozd+mKeefpalSwq4ZOMG3t71Lu9X7EYD7r3nLsLhMCaTkT179mKxWkhOSmTz
      ZZfS3tFBfv4CRFFEkWXee/8DTEYTFosZn89PY1MzixcXzLh/mqKitnkQpFOTuiZPfgbwK9HA
      9KkgSdI5N/inyrQFIBIIcKyylZZOD2tXzp/NPk0LUdBQNWFWdYGhNLe0sGH9WopWreRocTGS
      JLF27RrsdhtxcXHoDQZCoRCXXLKR1tZWFi1aiM1mY1VaKttffpWe3l4knY4tV1yO3+cnNTWF
      7u4efH4fbW0dM9+xDQ9kmh0iAExBANwydE1i28Dj8dLd04PDbsfn92OzWujtc7F//wE2btyA
      IAiUl1ewauUKenp7aWpqJjU1hbq6ejZfdikROYKAgNvjITsrk/r6BpYuXUJ7eweiJOJ2e8jI
      SKepqRmj0YggCDjsdjxeD3qdHrM5atbt7u5m3rwcXnt9B0mJiWzatHGqdwyYgQB09bgRBRFX
      v4/u/gAO09mdAQDsc7QvANGlzEkyMtJHfH77x24FYHXRSlYXrRz22Uc+/CGAQSXwJDk52bPX
      wdAo+6hTSP/Wrwi4ZYGINn7OoKrqag4eOkx7ewdut4cliwvo6e1FJ0kEAgGeePJpli1byiuv
      vkZ2djbd3d3Ex8fT53Lx10cfR1UUDEYjsiyTlZnBocNH+OH3H+DxJ55ixYpCXn9jB/Pn59HX
      5yIcjmC329DrdERkmUSnE0VV8Hq8NLe0kpWVSaLTSVJi4jRuWJRpC0BmdhrZXW7K69rp950b
      O47RWUBE04Q5cZ8NhUJ4PB5UVSUhIQG9fmRsQlNTM9nZWaMeP95nM0ULjWKKnoIS7JajBqSe
      CKSNs61is9nYcsXlVFVV0+dykZ6WhqqpLMzPp7W1jS1XXI7FYkGv17H/wCEu27SRquoa0tPS
      cNjt+P0BkpITsdvsiKJAR0cniqJQULCISzZuoKKyitVFq3C5+pHlgWS/ikJbeztbrtjMm2/v
      Yv36tVhPlLEoP5+SY6U44qbv0TsjM6gzOYFMXwDjOeRRZNd58Cg2HLrZj30VRJHnX9gOwKZN
      Gzl6tISrtm7hzbfepqhoFfUNDYRDYaqqa+jp6aFo1Ur27tuP2WymqamZvLxcXC4XtXX15GRn
      U1FZyfXXbyPOMQsu2QF5ZOq1KZhBvUo0xWB7WCDNMPbDY9HC/GH/A1zFllHbrl2zGoAVKwrH
      PN/myy4F4IYPXQfAF//+C+P289577gLgko0bALj88svGbT8RMzKDBtwe/BEVTRjfeiFHZOrb
      vWiqQmPH3CipJxGF6LbNXBStMOj1aGhIOomW1laampt54qmnuebqq9ix4022btlCV1c3VdXV
      uD0e6hsa6ezqxmQysWnTRrq6unn3vQ/w+ny88+57JCUl0dLSOit904Iji35NRQn2DtTvHa92
      8IXIzJ/dgkQoNH700fHqLmzxNmqb+kmeZlD8VHBI3jmbBTauX4dOpyMQDJKTncVll21ix843
      ufaaq3hr167oppgQzccjiiLpaamsWV3E+x/sZnXRKvR6HbV19SzbsoT4uDis1tkps6QFIsMs
      QMCUlOCTWdiiOXfOncx6c82MBMBst+P0BrBbxh/Mgk6HRY7QronMt+jp9imTygs0E1SMRHQG
      hPF+zGn4uSwvPDWdFxUVAXDHHdGd3YLFi0e0X7Eiqvjeeusto54DpjjcxvBzUWUXqjD8dxA0
      46R9YjxaGFXQ6FaF4b5VMV+gsZmsL1Bmopkur8LiZCPHG30U5DpnzRdoLOIQ8ATHnwXG8gU6
      lxnLz0UO9qNpp83EYSbtE+OPSIiagDukoZOHLFPlXgg0zKTL5zQz0gGsZiONDe2IpvG9MROd
      NhbnxGG2mlg+3zlqLvfZ5qQV6Fyu6TubjGoFklWU6okFQNNOlTydTOmkC4kZDcWQJqIXVfpd
      52aGBrvkHcwcdsETHmW9r2rR2mET4FZO+QHJmkDVBFVVznVap5AQY9pLoI5OF8sLsli+IJn2
      /nPzsSEIGoKgomrCqPGmYqQXseO1s9CzOWC0LBARFa3Di6ZqCOOkg+4MC4MWVKMIb7kEFlrO
      r6XhUEp9AhnGaP87whBQIHeMuKBpC4Crz0WHV8YQ8RE22MlMOveKRkN0FnDLduL0F05OzNHQ
      RhMAWY3uBvvCYB/bUNERYVjV+PEqwJ8PRLRTlqywGi3ZOpapYdpLoIKCXOySjGR1sCJvhlFH
      c4ggRGeCM1m07qwQHGMnWADNM35+otMrxgTnJozgjKFqp7xAlIG/x2LaM0DI76estpMIOrLS
      4jFPperaGCjWfFRb/sQNp4iJ6A1R5+DBJnqrkXzVs3/iKaKNkm9Vi6gIegmtLwAZY+tC7tNk
      JzQXN+oMImvRf5IQNYKMJ8/TfiyWVraxcU0eaYlmjleMnhXhXEHg3MhAMKcERpkBBjKtT5Qm
      MXDagJe18Z+a5zonBQCicQ7jeYRMWwBWLcumqq6HlUuySD1H1/8XC5qmjZ4CRdDQQko0VHIc
      RlvyhM5jAQgPWQINFYbRmLYANNQ2U1rXxXOvF1PTNlEmYo3Kxj4CviCltb2T8tGqqanll7/6
      DXV19fzy1w9TXl4BgM/no7i4ZFp93rnzLR559HHa2tr4xa9+Q2dnF489/iRv7NjJ0aPF/Pfv
      /odwePbzec45YQXU0W6qEFWAA+M7+IROO1RgdKvq+YIyRAAi6vgCMG0dIC8/G3tqBokOI129
      41tYWtv68UY0WnuDLMuxUtfhZ15O1ghXCE0yD267m8wW8vLyaGvvZN3aNezZu5+CxYvx+4Mc
      OHiYfQcOkZSYSMmxYzgcDjIzM7BaLKSkpvLGGztYsngx3T09xMU50Ek6br31ZhYvWcIHe/bS
      1NzCl//hSzz8X7/l4x+7jUceeRRJp+Omj97I//7fI2y+7FKWLBnp1jAaqmRGm2nqkZnS70UT
      jNF0KEMRRLSIABHDuK4BAYKoQ9aIqqjhF21Yz6P8okMJCWFCkg5ZJxKSFCJoyLrRh/q0BUCQ
      9CTH6ymvaWPxgpEBIkPxBCL09QYwJFjx+CNIev2orhCK4kQdMFft27eXtrZ2crKzKK+spL29
      nYDfx/4D++nv76ezq4vm5iacTicet4fy8nLCoTA5OdnU1NSgqSqf/vSdbN/+SjSyCI3f/8//
      cOmmTZRXVLBv3z6MBj0//dnPue8L9/Liiy9z5MgRsrMySE5yju9DNARRCSBN0t1grlD7+hDE
      SDQdyhA0NQKyhuD3jOsSEZR1wxxJJQ3CYf+08uuGVKgKCCy3nr01lKZIICvoRFAiAqigG2Ma
      mLYAtLV0sOtoE3aLHlVvYWlO3JhtC+Ynk50RwWwQaeoKMC91Yk/QpUuXkpiYSGpqKv5AgBs+
      dD1Go5HExES+eP99lBwrJTUlBUmSkBUZTdPo73eTmOhk/bq1xMXFkZSYRHt7B/fd9zkArtt2
      LbIsc9/n76W4uITP3XsPBw8dJhyO8OV/+CJ19XUszM+fWWrCs4DmDg8PhRyKGtUDxjxWiw5a
      8xCPdomTivHUB7FbhvYQLD+LaqE6RPFVteju9ljXMm0BSM9MJae5h6ACofDETuQWU3R6zplk
      9ojFBYtYXBAt45ienjb4/sYN0QwF69eNnTYwO+tU1NUPvv/A4OtNl5yKG90wcJ4rLt88+N6q
      ldFQxtlyUT5TaL7wqDu9gkkX/dnHqRUQ0kYODVGI7p5Ohz5ZwD9N4ZktVE5thsna+JGh0xaA
      lqZ2VMlAb5+bvAWznxfod7//Ix2dHSxauJCCgkVYLGYkUUKn1/HgQ7/ggf/4Dg0NjTz73Auk
      pCRzx+0fo6u7hziHne7uHiwWC9/9/g/5xO0fY9nSpQQCAUKhEGazGaPJiMVsxuPxYrfbefSx
      x7nllptoa23jtTd2kJaayk033Ui/qx9HnAN3v5uUlGQ6OjonrRucSbSxQlIFIapRjbZJNsBo
      FiBJmP5mWJ8ctcKcTVQtav4EUBDmRgnOzE7D46tHNCSTPRdmUAGSkpKw221s3/4KhYXLOXjw
      EPn5C0hKSsJmtXLgwEG++pV/IBKO8Nv//h+MRiMej4clSxbj8/lYu2YNFRVVvL3rXf5/e2f2
      G9dVBvDfOffOYjuL48RO0mxt46RN6qahapNQiFraQiUIW8UfwBvPIISEoBJ/ACqbqEBCQoIH
      BChqKRSEQFVa1FLapEkTx44d7/Z4m9WemTtz5y6HhzvexrN4GY+deH4vHnvu3Ht953znfNv5
      vgvnzxGPx7nT00vz7t2MjI4SCATY39Y2X2ngw4+u8b3vfodkMsWbf3uLd975D+fPPUXWNBkb
      C5HNZvnFz14lENgajfDmqVAFWplOyV4BGad4L4NCz9BKSdiC7CY3p3FYnNxH2UDYuvYD6LpG
      ZCRMT/NOOo42r+dUyzj0wEE+99yzdN6+zbFjR7lw/hyu6zAzM8uRw4eJI3ne3QAACnVJREFU
      RKJcuvRFXnvt1xw7dpQTJ9oJhUI8/ngHTz55lr6+fhzHIZ02OHz4ECdPtCM1jdZ9+8hZFg8+
      eIwdO5pIpw0Gh4YI+AN89SuXePWnP+f48YcxDIOOx05z+vQpurq6+exnnsFxnKIb4deKO5FE
      Hlx/tqpKV3DdCkr2Ckg7YtlWYgCzjN5cjpRDXgXaPJRaKgDWRqwAALom8QeDHG2rfsrxpS95
      pUTOnzvH+XOevv7y17+27LhXfvj9op8/0V48peLxjvLV7175wfLzvfjC82U/s1bcnmh1BKBi
      HwAFpl1UAAx3+V56WHscIGl7RbY2E5cFNcypYAOsy9E7Gklz8VOH6OqbXs9pti2qjG6+KipE
      ehGi5LXmNsMXslY9PukIjE0OorlqYTv0YgG4kVr+j65ZANKpLGceOcitvggnF7VDrbNy1Mz6
      t4MqV1UWJClKGsqlButaVgBHeVUlNnsFsAtUoLnXw9nlArBmFah3cJxHTj3EU6c0bgyEaTld
      Phi2EkQuhkxtfmblahC5dQTBjCqsABmLin2iNFkyHWLGLq6vdxuCpAM7V1F4+eOkwFQCy2uB
      sGkJiIsN38Vu0ESRx71mATjz6GHe/m8XjtR5/tMnyx47OT3LyKRBW2uQVMqk9cBe9u9cfmlp
      xcDa3KhqLVGp9Tez9mb28iNNSIEqli0KxEuYDwrBr0Ia33rAYdcKRsk/opIrCYlfQg747aTk
      mwfcwlJFNcFeFPxymXvt7XsoZM0CoPn8fP5ieYNyjsagzu6WBlxH0dHewkDIxGlp29CyKPcC
      rqVji+bSUdwVoNI2yhesWJyMlA5F8oFirlcOpRgJF26aOheClZeBccdC11xcQNcUH6cVlwjS
      UmSfiFe4bFkdr6phC5Oc1LB1nZzIYUuwdT8J18TWl7qwa1LUcGQyiS8QYOdOnc6+BEePVa9F
      0r2MnTXQjDCiYe2uVScRRkoLVHl1SiZiRfOBZnIasoyuMpvNoDdVNghiWa+sCoAfT/0JG1na
      iuQEjZtwLSn58r6NsZZdV0fZLrrt4joSxxVIK0Xa0tDtpa20aiIAHScXWiS1tmx+Fektg50v
      ab6ORo5eW6TKU6mKZ5b9zXAg6woay0zwsRWaKYmCyow+6W1If6xIjHQgKxgqYpBWC3eR4eso
      gaO8yHa2SHzi3sx3vQ9QlgNuic3sqznPCitzq8TylTZmV+5on8jrzZfDsqStnXaKb6OMlzCw
      x0zBiCnWHG2uhLVoR9ucEZx153KElh5bF4DNwnbzEdr1eYIqRoHnjjOdZe7SMVMQqDAC4jYM
      ZOC9Gcn7s6JoVHU6V1yfj5WQzXFTEBDwRqT6w2+x+xO8wW8pyMw97gKhqwvAZpHv5lIuVXlF
      VAqCLaIw7jCWFRUN0bgtuBzWaNLgLxGNy9PLh0y3IZeUVZkjXMTr0msIpnJeFYqPkpKJ9TvC
      AHgzL0zzA5+Fn67yyr9roi4AWwaVc7xpc53R4JWqQEixLCcglKushwflgioTkHAjJXk3IZao
      Q51pUdQMiVpLV4w7huD3U56rFKBBwr/j1RmCg3mbwi1YAez8lkjDAb0uAFsI0wZdls3VL4Vz
      w6vCUXIzfAk6U4KfjGqkHG+gTKxAADSxNFXCJ+GtqEZfxvvjHUOULKQlBQxl4H+z3vt/j0oK
      rY5babnuOkRKeVHewiQ4WMgMNVyv9VNhBYyaCkBoIkHn3SmmkluzlGItUaa3AhQtalvuc4aF
      /f6o94vpeJ6kFXItJYjZgj9MSa4lxZqLnvslvD8rGM7Cn6YXZvRCAgJej2h8OCuJWMW7UGoC
      rifX5xEyXM/ITTneIidYWhXCxXtfCs8WWExNBcB0oKO9hfRMlRS/AnonbLKW4s8fZEgW/qdb
      jVw+EX+FK4DTFca5MYnbF0PNZL3ZP52jsh9ngen8jN+fkVwOa6ynltnttOSXIT2/86o4QsBQ
      VjBqCv4akTQUGW163hYoxrjpuVIrkbC9bZxxe6n7E/JRYVd4NgCex2rJ9Sufvno0Ny4EwqqB
      qxQzhuL6kMXNEYtrgzYvdvh5rzeHkVO89ESAA7vX3kV8Q8naCE2iitSIUbYLlrMkQOYOxHFH
      ZrwpUwic65M4V8dZ6c71xYWuqlGevpL3aI69Pm8Q9hiy5HXHTMFvxiVNGhxvULT6FYf88LtJ
      jRlH8O3DNm1lKvCHLUGT5v18IN/frHA/QI/h2SmFNkBNBaClZQctqwiEjUUdUmUqNF0fsvjX
      LRNdQtby5sLXP8qyq0Hy1g2T169m+ca5BrpDnppx8VE/D7ZqDIUdwrMuTx+vHIF9+7bJ2WM+
      WnYsfHuGqXj3To4XHvPjW+M0GpiyOJixcHsi2FKAUrhhw1sm/RKVNPF9oR2VyuH2Rr06/3Pl
      D5XCfuMONHhfX7GyiMuwXEx3czM1y91mt+E936tJb8C2NyimLU9N+/GoxiONimd3q6LGdnda
      zA9yM68ORS3oz3gzf9L2dP+ghFFT0L8oJiiU8uz5K3/8Ec9dKJ/b88/3enjm6SfKHrMaDNtP
      o771C1HZgf3o5tRm30ZFXH0XKAvpLI/6bjW2yjNd1QoQ0Gx2+qubu1Pt820ErphG3gv3KQXS
      zXgK8RZnqzzTuht0BUh368+ocO/cJ2yde60LAJBIGHQNJYjH03QNRpmIZ7FNk0/6ovSMzswf
      F53xvrSMkeXOUIxQNE3n3TDDU+lSp64qZjbHtZ4wjmXRMxzn5kAMUHT3h7l5Nzof/Zy7T1yH
      3qEooajBjU8mqN2Qc+evNzKeYHDSa7o3HIrT1R8mnjdEnKxJIh8EGB1PcHMgRjSW4vbdaZIb
      XFtl7lnWBQBobm7EJxSObZOzHUxbMTppcOr4XoRy6BuOMjg5S2dvmFjKoqExSJNfIDIZdh3Y
      i23Xprt0IOhnV1BH8/k4vMfP3j1NkMsiG3fQvlfjen+C7sE4vSMxQlEDpEZDQMfv09jfHKR2
      9q+cv954OMVM2nN7Z204fXwfE2PTXO2JMByKc2tkFoDWPQ1oUtLS3IgUAn2D1bi5Z1kXACAS
      SzE6lSSSsgn6dKycTVuzn87+KGlT5fsLSPY1ewXAJsajjM/aBHc0MDUWwXJqs+3JSGcZnUoS
      njUJJXIc2hMAX4B0fIbuiSz7mgRCCNqaG1CAmzMJRTJoKIamkoxN12alwnHmr9fU4MOyvIqv
      rm3T1R9hx85GhBDs2dM4H4u42jWF3ye5eWcSpWuU2KNTNeae5aq8QFc+uF3xmNWQzAXvCSO4
      zv1LfQWos62pC0CdbU1dAOpsa+oCUGdbUxeA+4j4dIR3rg0wEl7w9kQT91azj1pT02S4OhtL
      YjpK69GH+aTzDu7DrfSMJ5mcjHLx7DFGoyn272/j0SOlO/lsR+orwH2GcmxcBJ294/SPhGnZ
      swszEWcypQj47vdmyaunvgLcRxx46Ahdw1Feunia2HSMDuljp0/h+oKcmYywd/f2rcJXilUJ
      gCt34eiHqnZxTeg4Wn17ZLXw74azZ7zX+48eWfJeS8txgBqmQ9wbrEoAErNprnxwe6PupU6d
      mrMqAXj5xa3XIK5OnfVQN4LrbGvqAlBnW/N/Wss6N8u9tHMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recent Times' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAW/ElEQVR4nO2dWYxcaZqWnxN7RO5L5OLMtDNtV9e4tu7pnir3ykyJuUUghkW0RgiEkAAJ
      pBECgZAQEgIJISFuQOKCO7hAiBuQYCRE9/RMT/dMd3VVV5XLzjUyMvZ9X8/2cxHpdLraaccJ
      R2akfb5HspWReeK83zlx3vMv5/u/0JRSCkFwKT6AvtFEIT4Q3IcPOL34RzeAYZgopQgE/OOK
      SxCuBM84dqKUQnpS1xezV+cHP/roS7c4xacf/Zyf/+IBltnjp3/8Eaat+MmPfkizZ/Hxj39A
      ptr7lX01axX6ps3u7v7Tf7B1Pv10d7BnZfPD//cH6Jb9zHiU2ednP/1TPv3icDwH+BL4Jh2A
      cPkcffYZqWyNer3Cz3/+GW+9+1Vm9DRVT5QNO8Uf/vFP2Yu1eP9bUEin2D+M8+iTX9CfucXe
      J2nmo6uU0ifYWgC7kSa88z7Fg1+QiCf4zocfMhX0kj7YZWb9NgB6PUv2JMnDkwp69hGFSo97
      v7ZFKpXnza+9T+bjH7P83gd4+z1+8uM/Am8Ej9mmpwJEAl7u3pxnP9Wg3uwxOzuDaleY39jm
      rTe2x35uxtICCNcZxaPjDOuhLp8dlghoFtlCBY/Pj2no6IbFylqU23d28Hk0ppbWqBx9zMzK
      LbJHR0Tv3iN1fEjPBK/ZZX55hTu3bxKanmcmBJ2+CUpxUmxxKzoFwINffsHS1ib7Dz4iV+rh
      s/t8/PEn4PNjWxY+nxfDVPzsT/6UYrHCb/zG25TqOt5elXgyR6dZoVAoMb1yk1I2TSQSIp3O
      XcooVVqA1x2l+Nr9b7N9c5X9/QQdNc9SdJHptXlulj+n59ngre0VZqYNAN68dw+91WR2YRoV
      nCdztMfX738LvdPCp9nMzU8Tz6R55517hANepkM+bKMNvim8mgbA0vabfGP7FrGjY2rFDL94
      UOB3/sKf5SCWYToSZO073+OzX37Om2+9w0zYS8AX5O03NmjbQd74NY1cqcrO2gyf7j/iz3zr
      ffq1PP65yKWcHk0ppXpGg5cZBOu6gVKKYDAwvsgcYFk2yrbx+SfjZ9u2sSwb/8T0FZZp4p/Q
      JITZ79DsayzMhn/lb9lkHMs3w+b6kqN9Gr02XdvHbCT4wm2VUhi6SSDo/PivvgtkW/R044I/
      GRQLZSzLplIq0e7qw+3StjFNa6hty8UC5Wrj7LV+LhalbErFErppUa9WaDQ7Q+orTMN84XZG
      v0tPN1G2SfOCfXdaDWqNNka/S6FQxrZffGNSSmEMoQ9gGTqd3rPPv7JtyueOvz7k8Xv8YQIX
      XEnrW9tnF3+33ca0bEy9d+Fnaxp9CsUK3kAIvdWg1x/uuPQLrqlfQSl6/SfaV2+AfpODeJ5k
      /JhStUmlWCAWS2IraNYbKLNNLFnAVnB4cDT2fl86nSUY8FMrFUhlS5wcxziKJbBsRbfVxFY2
      saMTTEsRPzrigomMkSgVchzF0lRzab44SFDOZ0mmC7RaLfK5IkrZNJsdEsdxun0d1asRz9bG
      FwCQTSaIxdP0221isWOanR6VQpFKvU2v3cJSNrGjJKZlc3IYwxzjB5CMx8jkqyRPUiSSSTKJ
      OPlSjUajRafVwrRsGvUmdqdMPFMHTePg8Hh8AQDYBgeHCRqNBo1G4+oNoACURbPV5ejomHK1
      zkzApNmHcDhAqd7n5kaUfruO5g28TM/smbTqNaq1Ont7x2TSaZTHz8p8iGyhQSgcolKqsrG1
      iTJ6GMrDOAPQPD68WFR6NotTfhr1JieHxyTTKSKzs2iaBpbB3HKUSNBPvtwkMkKzfjGKdLZA
      KZelVa4wt75ONnVCMl1ifjZCMBykUq6ysXUDZfYx0NDGOL0dmJrD7NRQHh8+zabRaHN0eEwh
      nyefL6J5NEIBL9Wuh5s3FmhVS/gCL+4COUEBmkcjl82Ty+Wv1gC23uPhQYqVxRksG8LhENMz
      M4TCYbweSMSTaCiajTqtroXPq409hs2d22xtrLKwMMPi4iIBj+IkXWR+bop8KoWhoNNuUWu0
      8Pu8Y9X2BwKsLEVACxEKBekbOpFwmKnZeWYiQbANTpJ59G6PSrVGIBjEtofr2g2DrbfZuH2P
      +1+7Q7nRJxE7Zmp2gZXVKB5No5BOoVvQ6bSo1VoEfN6x3n+CwSBhv4fI/AKhgAfdhEgkzObK
      NA3dh1fTOIkn8WBTr1ToWR48Y7wElGVwuH/E4vIyeqdFs6M/GQTruj7ywyzz9EnwxAZhpoVt
      2SMNgsaBZdmYhkkwNJlJANtW6H2dUHj4u2WnUsMzP0doDFeYUopet084Ehrp/YVUkqmVDaYu
      GkgMQafdIzLlXP9s2kLTRj8RmqYNmpaX2MfLoGkamjZpfW2C+sqx/tTSwphjGP34V7dujkF/
      tM//zADDTOH1203iyRzrN7eoZTNo4Rm2bkQBJpoLpGkalqZNTN80LZjg8VuWPWgBJ6Q/mAWz
      JqavlMLn842k76jNSSRSRGbmiHgMctU2CwuzjgUF4Trh6MnNzt07tBtlYqkW77x1m8P9GO++
      dw+UhrJhjOM1RygblNJEf1L6avBvUvow+vXnyACNSoVcscry2jrJkxSR2RnQAE2heRSe8U6a
      DI1mg2ZPTt9Wg374pPQH468JHr896INP7PiVQvOMpu/IAIurayyurgGwsjzeQZQgTALJBhVc
      jRhAcDViAMHVyHoA4Slq/+4/YjfbQ28//3t/B6anLzGiy0UMIDyFGTvBrjdevOEpyjSZzPPv
      8SBdIMHViAEEVyMGEFyNGEBwNWIAwdU4mgV6XAHufN71pHLgBWEcODJA4uiQrgWrK8ucxJP4
      QlO8fe/OZcUmCJeOIwPMLczRyRbIZUusb92mXSsOUhElHdq1+srWwHZJOrRl2igUU9PT5JIx
      /BFJhwZ3p0NrnkEqsivSoZdW11g6TYe+dXPduZogXDMkFUK4VnR/8EfY3V8ty34R4Q+/ixYe
      rRoFiAGEa0b7f/4+drky9Pah93/9pQwgzwEEVyMGEFyNGEBwNWIAwdWIAQRXIwYQXI0YQHA1
      YgDB1YgBBFfj2ADJ4zg9XWf/0R7JTPEyYhKEK8NRKkS3WSGbrzA1P0e10WYuuop6nA6tFGqM
      XyjnCHWalT1J/dOUcNfpK+1UfzLn/8n1N5q+oxYgncpj6x0qLYNvfOOrlLJZ54qvK7Iw7pXE
      UQtw99491jfqaP4A8aMY89EVtMfrAQBtUiMKjcnq26ChJqd/uh5hIvqaGpx/bTLn/+z6G1Hf
      cTbo1OwcAHfffMO5miBcM2QWSHA1YgDB1YgBBFcjBhBcjRhAcDViAMHViAEEVyMGEFyNGEBw
      NWIAwdWIAQRX48wAyuYnP/xDKvU6n37yGQ/3jlGXFJggXAWOkuFSx0fMLi7TqNVZk/Loos/k
      y6PbNmj2FZVHn5qbp1w+QWlzZBIx/OEpKY+OlEefZHl0j+dJDJdeHn1hKcrCUnTw4uaGczVB
      uGbIIFhwNWIAwdWIAQRXIwYQXI0YQHA1YgDB1YgBBFcjBhBcjRhAcDViAMHViAEEV+PIAO16
      lb3dQ9q9Pkd7B1IeXXjlcZQMFwhHWJxrkkvlyFcafGVlfVCeGs5KZE+EU92J6T8OY6L62oT0
      n5TFnoS+OhfDKPqODOD1aHT7Ft5AhG998+s8fLDL0vy9s+8HmNTqGMUgH35i+uo66DMR/ce6
      k9I/+26CEfUdGaBWrtDp6iytzHOwu8/M4tKT8tSeyZUn17QJlgfndD3CJPUnWB5de1yafILl
      0bWrKo++uLrG4uoaANGlBedqgnDNkFkgwdWIAQRXIwYQXI0YQHA1YgDB1YgBBFcjBhBcjRhA
      cDViAMHViAEEVyMGEFyNo1ygerlIJlcgMrNIvVoiEJnlzTduXVZsgnDpXGgApQYZdkqBpg3y
      rWdmZ+jF4vhDU6xu7Eh5dNF/PcujdxoVfv///oi7d27RU1N88OtvAlCvN1lcXqLTNShkk2g+
      v5RHR8qjv3bl0b2+AAEsDmMZPvjOd89+P7uwQGhqhmAoiGUYaF7fufVAgvDq8UwDBCPTLESj
      bN7aYXY6dPZ7r9dHODx4iycQuJoIBeESuXAWKOTT2Nvdp1JvX2U8gnClXGgA27LodRrki42r
      jEcQrpTnPwfQ/ISC8qhAeH258OpeWFjA4wuwubF2lfEIwpVyoQHSxToffu9r7D86usp4BOFK
      eaYBup0Ob9+7wyefxbj39t2rjkkQroxnGuDB5w9YWNng2/ffYf/RwVXHJAhXxjOfA9zeWuV/
      /6//A5rGd3/7t686JkG4Mp5pgKUbt/hzf16S3ITXH5njFFyNIwPovTYH+0d0dZ3jg0Mpjy68
      8jhaD2Cais31ORKxFMVyjXfe23iqJLW7y5OL/quo78gAytRJFlvc/coOX9G2efD5LnPvvnW2
      HkDZzgMYB4/z4UV/EtpP1gNMRF8NYhhV35EBqtUayrKoVqtUCkWm5xdkPQCyHmCS6wEGZdHV
      yPqODLC5c/vs5+WlRedqgnDNkFkgwdWIAQRXIwYQXI0YQHA1YgDB1YgBBFcjBhBcjRhAcDVi
      AMHViAEEVyMGEFyNw/LoBTL5EjNzy9TKBQJTc7xxZ+uyYhOES8eRAeYWo9SqNSyjy/KNbTpS
      Ht31+q9lefSLODnYxQzOEZ0NkcrlUCDp0Eg69GtXHv0iVjdv0u72CURm2N4K4A2GpTy68Erj
      yAChyBShyNTgRdB/GfEIwpUis0CCqxEDCK5GDCC4GjGA4GrEAIKrEQMIrkYMILgaMYDgasQA
      gqsRAwiuxpEBjF6HR3vHoEx2HzyS8ujCK4+jXCALDx5MLL1Ps9dnWhtU5R2kQyvsCVdHdq2+
      mpy+Uhqo03ToSVWHVtrI+s6S4UIhNA3wBXjv3bc53D9kY215kA6tDVJiJ4HmGaRDT1Rfm6C+
      xsTO/3ntiRz/S+o7MkCtXETvG5SrLTr1KtEbN56ITtAAj3G3/qQM+ORbKSZiwHMxXLoB5pei
      zC9FBy+WF5yrCcI1Q2aBBFcjBhBcjRhAcDViAMHViAEEVyMGEFyNo2nQq6D8T/8lWMNXOFr8
      V/8MXqPiLJV/8W9Qne7Q2y/8838E4fAlRvR6c+0MYOXyYDoo8aXUpJ9AjRUrX0S12sO/YVL5
      F68J0gUSXI0YQHA1jg1gnza5tmVhK/WCrQXheuPIAK16hT/52aeYvTaff/6Ih7sxxALCq4yj
      QfD03CLLi2V63Q5rm9u0L6U8urMBrW1rKO01Kk/u8I5in5Unl/Lol14evVYukknnmJubI5c9
      JhCZuYTy6M6uAI9HYWva61Me3eGElsejUB4pj34l5dHnl6L81oeDdOjV1RXnaoJwzZBZIMHV
      iAEEVyMGEFyNGEBwNWIAwdWIAQRXc+2yQQXhZbATPwOzN/T2YgDhtcL6g38LjczQ20sXSHA1
      YgDB1YgBBFczmgGUyf7DPSmPLrzyjDQItvo9qq0Os9GVJ+XRlUKNZXmqs3TIx2tylGJM+iPw
      uET3OPQdpkMPzv8Y9R2ilIamJnf+n1x/o+mP1AJogTDf+Pp7lHO5J797/N/L/hsRbRzaLxHz
      2PRHPgGT0de+/OKqj1+74OchGakFULbFSSzBwsrq6Qc/ennqZ+zd0dbauRM3seIQGoytPLnD
      fWgaKA20SZVH1xTna/RfufxpDFfy/QCP8foC3PnK3VHeKgjXCnkQ9iVK/+CfoHr9obdf+vf/
      GgKBS4zo1cL4r9+Hdmno7X3f/y9o05NbXCUG+BKq23NkAOFL6B3QHRT2mtjMxQB5DiC4GjGA
      4GrEAIKrEQMIrkYMILgaMYDgakYygKV3+eyXn/NoPy61QYVXmpGeA3TbLVY3dwa1Qa8Zxn/7
      m2DqQ2/v+yv/Gc0fGpu++d//NkrvDK//l/4TWnB6fPr/4++ieo3h9f/if0ALz49N/1VjJAOE
      wmGO9k7wBsZ34YyN6gmYDh5kjflBjKomQG9NTr+WgG5t+DdMqqLwNWEkA/hC07zz9ptoHu9r
      9O1cghs5M0C73UXZo/XoTdMkHBm9NXic069pMPO3fndQbnlYvN6ntvf+1j8G5eCu5gs8rf83
      /hrKGv6urAX8T4fzm/8QbGN4fX/oaf2//ldRhjm8fij01DjM+73fA8tBCxicfkp/+nf/Mkof
      Pn7PVORp/e/+fUdVGQjNPa3//d9xlIqizT7dffR++++BMXwXVFNKqZ7RwPFKjHPouoFSimBw
      tKSw8ydgFAzDxDItQuHgRPRN08LQjZFvAi+rb1k2/V6fyNRo3xb5svq2reh2ekxNT0ZfKUW7
      1WV6JuL4vWOfBlW2RWw/hqkUmcQJh0cJbAW2ZbD74CHZQpVcKsnhcersPc/K5baNPgd7B9Rb
      PZLHMVK54TIMz+tnkwkODk+w1eD3uw++IJOvkE+nOIgln69v6hzsHVBrdknFj0llh9c/3o9h
      KEUulWD/MI6lAGx2H3xBOlemkEmxf5RAqSfrKL6sr6yBfrXRIX0SJ5kpDnWLUsrmeP8IA8in
      k+wfPNHf++ILUtkSxWya/cMX6Rsc7h9QqXfIJE5IpAtD68f3jtCBQjrF3v4xpj3Q33/4kGSm
      SCmXYf/w5Owrti7SP9o/pFxvk00mOEnlnekrRSGTZm8vdqqvOHj0iES6QDmfZe8gjm2r8RvA
      NE2Mbh8LiK6vY+sdTEth9RtUWyZ+v4d6UydkNKg9p6WLH8UwFFjdGrpvlm6jTrNW46OPPqHb
      v7iJtiwTo9PHBJZX19DMLrqlsPUGlYZJwO+l1ugzZTapPKelTjzW7zXoeaboNus066f6vefp
      WxidHgawtLKG1+zRN20wmpTqBoGAl2q9x4zder5+7BjdVtj9Nl0VpN9unOl3ehfPctmWidnu
      owOL0VX8do+eYYPRolTTCQR8VGpd5jxdSp2Lu4rpeJyeYWMbHTqWD7PbpFGrD/S7F+sr28Jo
      99CBhegKIfp0DRvMDqVan0DAR7naZsFvUGxefB6zyQRt3cI2erQNDfotatWBfrt78YWjbAuz
      3aMPLCxHCXt02vqpfrVLIOCnVGmxHLbJ13vjN4A/ECQUHPSLU/E4K5u3aJSyNPQAH7z/Nvl0
      hvnZAJlCDc9zmjxbwa2dbXKZzOmdSqF5PHg9HrTntJU+f5BwaKCfPjlh8cZN2uUc1a6P+/ff
      IZfJsDAXJFWo4n3O0Vu24ubONoVs9mzh7RP9i9/n8wcIhwZdwUwiwfz6Fr1qgVJT45vffJd8
      JsvifJhUrornOfr2Y/1c9vQ3Co/24uP3+gKEwwP9bDLBzOom/VqRYkNx/5vvUchmWJyPkMyW
      8TxnP7at2NzZpnh+2atHe+Hxe7x+IpFBVzSXShKJbmA2ihTqFh/cf49iLsvSwjSJTPH5n79t
      s3HrJqX84M6vntK/+I3n9fPpFKGlG6hWiXzN4P37X6WUz7K8OMNJqojHo41/DNBrNzg4SDAX
      jdKtl9ECEe7cvoUyusTiaeaWVlC9On2C3NpcvXCflt7j8CjB2tZNmqUsWmiWjbWlZ257fgzQ
      7zTZ3z9hNhqlXy+DP8zt29tg9Ygdp5hdjKLpTbq2n+2ttQv1baPPweEJq5tbtCt5VGCazfXl
      Z257fgygd1vs7cWZWV5Bb5bAF2bn9jYeq8/RcZKZhWU8RpuO5WV7a+3CD9M2+xwenhC9sUm3
      VsT2R9hYjz5z1u38GMDotdndPWZ6KYrZqmB7g9y+s4PH7hOLJZmeX8JrdWkbHrZvPk9f5+gw
      ztL6Bv1GGdMbZvPGs/XPjwHMfofdRzEiS8vY7RqWx8/O7R18yiB2nCAyt4Tf7tHUYefm+sX6
      1kB/cfUGRquKrgXZ2lh5pv75MYDV7/Lo0RHhxSXo1jHxs31nBz8mx7ETQrOLBNGp92x2bt3g
      /wM2vtXKodEe1AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd3hcxfWw3+1Fu6vee7UlufduYyD0ECAQ0kgnCenll/olIQkkpBMgCT10
      BzDF9GIb27iAuy2r97q993b3+2ONbFnCkmzJNta+z6NHu3fmTLn3np125owoFovFSJBgiiI+
      2wVIkOBsklCABFOahAIkmNJIJzuDlgPbWffKu3zv/35KijKubz5LN3//76v87P9uQQpsf/MF
      AsmldLz3Jld+8fvkpSjGnH7I2s4Vt9zB208/MHht8ytPI82bw6p50ya6OiPy+H3/oF3vHPy+
      Ztkinnr7EPf/5ecTkr6n/wif+8V9vPjo3cPCupsP8dT6l0jJn8bNX/wE9/75H9zwrR+RmTTp
      j3YIT/77j+hmXs5VK2cPC2va/y7/e2kTIrGUlR+7irVLhsc5Exjb6/jP488Nfi+cPn/yW4C7
      7/gNjzzyAE+/tnPwmio5lcf//BN2NBiBGH/45Q8IiDTEYoBofOlH/U42vvv+kGtvvvgUm/fW
      n37hx8icBUtRhc088/Ye1qxZAx4T7+2pm7D0gx4L7+zYPTwg6ubylWtIr5iLVhwjApzCLZwQ
      LH1d2JzBEcP2bnmFt/c0s2hOJTdcvJxmc+AMly6OJi2bNWvW8OLj9yBOKWfezGmTqwARzwCv
      7bXwj998h3Xr1g1eF8l0XH/tx3jhhQ24+w6x35LJxYsquPcfv8Jkd/LxtctYvXo1D2/Yws++
      9gnufOpN+g++ybRl12Dr2MvatWuZN6uWL//0zyfNv3X/FpYsnM/iBXO57is/JervIzWtCj/w
      85uv4c6n3uTnN1/D/PkLWH39Ldx8zTIu/cT11FSW8pu7n8Rt7OTStStZvXwpn7rlVzx/321c
      /oUfQ9TH7MJsGkx+AGbOX8Ks6nK0GbmsWbMGnUrKQPMuLrtoFdPmrcUVjnHh3EoWzKvlx3c8
      wp2//jbzFy5mxoyZPPv2bu7/7ff4/u8fAFsr8sI5RH0WLlu9hAWza9Bl5LK/00bA0snVV1xC
      SUUtnVb/0RspQakS886mrSxesxoFAvf86f9hD4apLsnnxmuvoriomNffa2Tjs/czd958ctK1
      XHPzr3nw779h7doLqKqaxub97dz585tZffEVLJk3g0s++z2iIQ9fuf4ylixbwax5SzjUYeT7
      n7uQ+QsWcNkXf8z6B/7MkiXLWLBgMW++18iqy65l0cxy7vjxF1m0dCXfvfUfw56HEImg1KWj
      UUq5+7ffZenylSxcsoKD7UZ+/MWPs3Tlam79x8M8defPWbz6YlYvmcfiSz5LUIjy629/joWL
      lzJj5hze3t3E77//OVZfdCXzZ07jiz/+E/rWvSycN5dVK1dyoNc1LH2ApNQs1qxZQ0qSnBlz
      FjG3tmpyFeCdDc+QUTEdtTaVXa88Q58rPBh2/fWf5PkXnuf1DRu49IYbUIggGgkjhAO0detZ
      svYKLlsxn1gshiAIxASBaFQgpbCWr3/x01y8agEbNrx40vz/9ffbufaWW3n//V00vnoXB3q9
      CFEBAEEQBv8WXvlFNq27C0GIctkNX+WRf9zKhg2v89JTD3CwpR+RTMbLD93Hwms+y/7XnmLr
      pteJVKyiJkv1oXmnl8zhtY1b0dp3c6jbQTTq5Zbf/ZfbvrKEn9/9Cu/s3MXdv/oGf73rPojF
      EKIxiAmEowJuYxutTiW//NE3KJ+7lnmlaUi1eax/+Q0W5cKuvS3xTMRq3ti5m2KFjQWzZlHX
      YycSiSDEIGwf4Od3P8u3b1jLm2/vYNs7b/Gx677K2sWzuP6T13DZNZ/iiks+Rm6KjI3bdyMI
      AhVzL2Tnrk0cWn8vG15+iV0mDbt2budzF0zjwSdeRBCiXHDDLbz84G3cduuviYpl+F1G/rf+
      ZeauvITq4nTa29somT6XL3zqmiH3w6rv5d933ckVX/oR+RIjv7r9fiQyCfaBdp5/cxvtbW1M
      n7uET11zGYIgkFMxl607d+E+tJ5NG9/i7lca2blrF7/6xtXcdd9/iQoCc9ZezetP/5sNL72I
      22HF5o3wyc9/nZoU17D0RyYyuQrw1Lp1lBXmsPNQF3OrdPzvhY2DYbPXXI2m731uu3cdN1z/
      ycHrMYmal97ahMSwjx/+9h9IJRLMZiuNTc0AvLnuHv7y2BtUV5USiUSH5Wmz2fB53ChkUlRK
      FXqDAZfNgCeqJiNFjTTkwmS109rePSiTk5+HVBrvM6uUCqQSCUJEQKlUUrPkY7y9aQuNrXsp
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccine Initial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ward Delta' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ward Initial' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
